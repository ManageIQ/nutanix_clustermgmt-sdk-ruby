=begin
#Nutanix Cluster Management APIs

#Manage Hosts, Clusters and other Infrastructure.

The version of the OpenAPI document: 4.0.2

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'date'
require 'time'

module NutanixClustermgmt
  class ClustermgmtV40StatsStorageContainerStats
    # A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server). 
    attr_accessor :tenant_id

    # A globally unique identifier of an instance that is suitable for external consumption. 
    attr_accessor :ext_id

    # A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource. 
    attr_accessor :links

    # Number of I/O per second.
    attr_accessor :controller_num_iops

    # Total I/O bandwidth - kB per second.
    attr_accessor :controller_io_bandwidthk_bps

    # Average I/O latency in micro secs.
    attr_accessor :controller_avg_io_latencyu_secs

    # Number of read I/O per second.
    attr_accessor :controller_num_read_iops

    # Number of write I/O per second.
    attr_accessor :controller_num_write_iops

    # Read I/O bandwidth kB per second.
    attr_accessor :controller_read_io_bandwidthk_bps

    # Write I/O bandwidth kB per second.
    attr_accessor :controller_write_io_bandwidthk_bps

    # Average read I/O latency in microseconds.
    attr_accessor :controller_avg_read_io_latencyu_secs

    # Average read I/O latency in microseconds.
    attr_accessor :controller_avg_write_io_latencyu_secs

    # Implicit physical reserved capacity (aggregated at the vDisk level due to thick provisioning) in bytes.
    attr_accessor :storage_reserved_capacity_bytes

    # Actual physical disk usage of the Storage Container without considering for the reservation.
    attr_accessor :storage_actual_physical_usage_bytes

    # Saving ratio in PPM as a result of deduplication, compression and erasure coding.
    attr_accessor :data_reduction_saving_ratio_ppm

    # Saving ratio in PPM consisting of deduplication, compression, erasure coding, cloning, and thin provisioning.
    attr_accessor :data_reduction_total_saving_ratio_ppm

    # Free storage in bytes.
    attr_accessor :storage_free_bytes

    # Storage capacity in bytes.
    attr_accessor :storage_capacity_bytes

    # Storage saving in bytes as a result of deduplication, compression, erasure coding technique.
    attr_accessor :data_reduction_saved_bytes

    # Usage in bytes before reduction of deduplication, compression, erasure coding, cloning, and thin provisioning.
    attr_accessor :data_reduction_overall_pre_reduction_bytes

    # Usage in bytes after reduction of ceduplication, compression, erasure coding, cloning, and thin provisioning.
    attr_accessor :data_reduction_overall_post_reduction_bytes

    # Saving ratio in PPM as a result of the compression technique.
    attr_accessor :data_reduction_compression_saving_ratio_ppm

    # Saving ratio in PPM as a result of the deduplication technique.
    attr_accessor :data_reduction_dedup_saving_ratio_ppm

    # Saving ratio in PPM as a result of the erasure coding technique.
    attr_accessor :data_reduction_erasure_coding_saving_ratio_ppm

    # Saving ratio in PPM as a result of the thin provisioning technique.
    attr_accessor :data_reduction_thin_provision_saving_ratio_ppm

    # Saving ratio in PPM as a result of the cloning technique.
    attr_accessor :data_reduction_clone_saving_ratio_ppm

    # Saving ratio in PPM as a result of snapshot technique.
    attr_accessor :data_reduction_snapshot_saving_ratio_ppm

    # Total amount of savings in bytes as a result of zero writes.
    attr_accessor :data_reduction_zero_write_savings_bytes

    # Ratio of read I/O to total I/O in PPM.
    attr_accessor :controller_read_io_ratio_ppm

    # Ratio of read I/O to total I/O in PPM.
    attr_accessor :controller_write_io_ratio_ppm

    # Replication factor of Storage Container.
    attr_accessor :storage_replication_factor

    # Used storage in bytes.
    attr_accessor :storage_usage_bytes

    # Total usage on HDD tier for the Storage Container in bytes.
    attr_accessor :storage_tier_das_sata_usage_bytes

    # Total usage on SDD tier for the Storage Container in bytes.
    attr_accessor :storage_tier_ssd_usage_bytes

    # The physical usage of the implicit reserved capacity(aggregated on vDisk level due to thick provisioning) in bytes.
    attr_accessor :storage_reserved_usage_bytes

    # The remaining unused space of the implicit reserved capacity(aggregated on vDisk level due to thick provisioning) in bytes.
    attr_accessor :storage_reserved_free_bytes

    # The physical usage from unreserved vDisks(aggregated on thin provisioning vDisks) in bytes.
    attr_accessor :storage_unreserved_usage_bytes

    # The total explicit reserved physical capacity of other Storage Containers in the same Storage Pool.
    attr_accessor :storage_other_containers_reserved_capacity

    # The physical usage outside of the explicitly reserved capacity of other Storage Containers in the same Storage Pool.
    attr_accessor :storage_other_containers_unreserved_capacity

    # The space that will be reclaimed if all the snapshots in the cluster is deleted. This is the physical snapshot usage with replication factor and data reduction savings taken into account.
    attr_accessor :storage_snapshot_reclaimable

    # Storage saving in bytes as a result of thin Provisioning technique.
    attr_accessor :data_reduction_thin_provision_saved_bytes

    # Storage saving in bytes as a result of the snapshot technique.
    attr_accessor :data_reduction_snapshot_saved_bytes

    # Storage saving in bytes as a result of the cloning technique.
    attr_accessor :data_reduction_clone_saved_bytes

    # Storage saving in bytes as a result of erasure coding technique.
    attr_accessor :data_reduction_erasure_coding_saved_bytes

    # Storage saving in bytes as a result of deduplication technique.
    attr_accessor :data_reduction_dedup_saved_bytes

    # Storage saving in bytes as a result of deduplication, compression, erasure coding, cloning and thin provisioning technique.
    attr_accessor :data_reduction_overall_saved_bytes

    # Storage saving in bytes as a result of compression technique.
    attr_accessor :data_reduction_compression_saved_bytes

    # Health of the Storage Container is represented by an integer value in the range 0-100. A higher value indicates better health.
    attr_accessor :health

    # The external identifier of the Storage Container.
    attr_accessor :container_ext_id

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'tenant_id' => :'tenantId',
        :'ext_id' => :'extId',
        :'links' => :'links',
        :'controller_num_iops' => :'controllerNumIops',
        :'controller_io_bandwidthk_bps' => :'controllerIoBandwidthkBps',
        :'controller_avg_io_latencyu_secs' => :'controllerAvgIoLatencyuSecs',
        :'controller_num_read_iops' => :'controllerNumReadIops',
        :'controller_num_write_iops' => :'controllerNumWriteIops',
        :'controller_read_io_bandwidthk_bps' => :'controllerReadIoBandwidthkBps',
        :'controller_write_io_bandwidthk_bps' => :'controllerWriteIoBandwidthkBps',
        :'controller_avg_read_io_latencyu_secs' => :'controllerAvgReadIoLatencyuSecs',
        :'controller_avg_write_io_latencyu_secs' => :'controllerAvgWriteIoLatencyuSecs',
        :'storage_reserved_capacity_bytes' => :'storageReservedCapacityBytes',
        :'storage_actual_physical_usage_bytes' => :'storageActualPhysicalUsageBytes',
        :'data_reduction_saving_ratio_ppm' => :'dataReductionSavingRatioPpm',
        :'data_reduction_total_saving_ratio_ppm' => :'dataReductionTotalSavingRatioPpm',
        :'storage_free_bytes' => :'storageFreeBytes',
        :'storage_capacity_bytes' => :'storageCapacityBytes',
        :'data_reduction_saved_bytes' => :'dataReductionSavedBytes',
        :'data_reduction_overall_pre_reduction_bytes' => :'dataReductionOverallPreReductionBytes',
        :'data_reduction_overall_post_reduction_bytes' => :'dataReductionOverallPostReductionBytes',
        :'data_reduction_compression_saving_ratio_ppm' => :'dataReductionCompressionSavingRatioPpm',
        :'data_reduction_dedup_saving_ratio_ppm' => :'dataReductionDedupSavingRatioPpm',
        :'data_reduction_erasure_coding_saving_ratio_ppm' => :'dataReductionErasureCodingSavingRatioPpm',
        :'data_reduction_thin_provision_saving_ratio_ppm' => :'dataReductionThinProvisionSavingRatioPpm',
        :'data_reduction_clone_saving_ratio_ppm' => :'dataReductionCloneSavingRatioPpm',
        :'data_reduction_snapshot_saving_ratio_ppm' => :'dataReductionSnapshotSavingRatioPpm',
        :'data_reduction_zero_write_savings_bytes' => :'dataReductionZeroWriteSavingsBytes',
        :'controller_read_io_ratio_ppm' => :'controllerReadIoRatioPpm',
        :'controller_write_io_ratio_ppm' => :'controllerWriteIoRatioPpm',
        :'storage_replication_factor' => :'storageReplicationFactor',
        :'storage_usage_bytes' => :'storageUsageBytes',
        :'storage_tier_das_sata_usage_bytes' => :'storageTierDasSataUsageBytes',
        :'storage_tier_ssd_usage_bytes' => :'storageTierSsdUsageBytes',
        :'storage_reserved_usage_bytes' => :'storageReservedUsageBytes',
        :'storage_reserved_free_bytes' => :'storageReservedFreeBytes',
        :'storage_unreserved_usage_bytes' => :'storageUnreservedUsageBytes',
        :'storage_other_containers_reserved_capacity' => :'storageOtherContainersReservedCapacity',
        :'storage_other_containers_unreserved_capacity' => :'storageOtherContainersUnreservedCapacity',
        :'storage_snapshot_reclaimable' => :'storageSnapshotReclaimable',
        :'data_reduction_thin_provision_saved_bytes' => :'dataReductionThinProvisionSavedBytes',
        :'data_reduction_snapshot_saved_bytes' => :'dataReductionSnapshotSavedBytes',
        :'data_reduction_clone_saved_bytes' => :'dataReductionCloneSavedBytes',
        :'data_reduction_erasure_coding_saved_bytes' => :'dataReductionErasureCodingSavedBytes',
        :'data_reduction_dedup_saved_bytes' => :'dataReductionDedupSavedBytes',
        :'data_reduction_overall_saved_bytes' => :'dataReductionOverallSavedBytes',
        :'data_reduction_compression_saved_bytes' => :'dataReductionCompressionSavedBytes',
        :'health' => :'health',
        :'container_ext_id' => :'containerExtId'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'tenant_id' => :'String',
        :'ext_id' => :'String',
        :'links' => :'Array<CommonV10ResponseApiLink>',
        :'controller_num_iops' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_io_bandwidthk_bps' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_avg_io_latencyu_secs' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_num_read_iops' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_num_write_iops' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_read_io_bandwidthk_bps' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_write_io_bandwidthk_bps' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_avg_read_io_latencyu_secs' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_avg_write_io_latencyu_secs' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_reserved_capacity_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_actual_physical_usage_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_total_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_free_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_capacity_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_overall_pre_reduction_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_overall_post_reduction_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_compression_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_dedup_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_erasure_coding_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_thin_provision_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_clone_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_snapshot_saving_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_zero_write_savings_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_read_io_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'controller_write_io_ratio_ppm' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_replication_factor' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_usage_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_tier_das_sata_usage_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_tier_ssd_usage_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_reserved_usage_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_reserved_free_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_unreserved_usage_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_other_containers_reserved_capacity' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_other_containers_unreserved_capacity' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'storage_snapshot_reclaimable' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_thin_provision_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_snapshot_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_clone_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_erasure_coding_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_dedup_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_overall_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'data_reduction_compression_saved_bytes' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'health' => :'Array<CommonV10StatsTimeIntValuePair>',
        :'container_ext_id' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
        :'ext_id',
      ])
    end

    # List of class defined in allOf (OpenAPI v3)
    def self.openapi_all_of
      [
      :'CommonV10ResponseExternalizableAbstractModel'
      ]
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `NutanixClustermgmt::ClustermgmtV40StatsStorageContainerStats` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `NutanixClustermgmt::ClustermgmtV40StatsStorageContainerStats`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'tenant_id')
        self.tenant_id = attributes[:'tenant_id']
      end

      if attributes.key?(:'ext_id')
        self.ext_id = attributes[:'ext_id']
      end

      if attributes.key?(:'links')
        if (value = attributes[:'links']).is_a?(Array)
          self.links = value
        end
      end

      if attributes.key?(:'controller_num_iops')
        if (value = attributes[:'controller_num_iops']).is_a?(Array)
          self.controller_num_iops = value
        end
      end

      if attributes.key?(:'controller_io_bandwidthk_bps')
        if (value = attributes[:'controller_io_bandwidthk_bps']).is_a?(Array)
          self.controller_io_bandwidthk_bps = value
        end
      end

      if attributes.key?(:'controller_avg_io_latencyu_secs')
        if (value = attributes[:'controller_avg_io_latencyu_secs']).is_a?(Array)
          self.controller_avg_io_latencyu_secs = value
        end
      end

      if attributes.key?(:'controller_num_read_iops')
        if (value = attributes[:'controller_num_read_iops']).is_a?(Array)
          self.controller_num_read_iops = value
        end
      end

      if attributes.key?(:'controller_num_write_iops')
        if (value = attributes[:'controller_num_write_iops']).is_a?(Array)
          self.controller_num_write_iops = value
        end
      end

      if attributes.key?(:'controller_read_io_bandwidthk_bps')
        if (value = attributes[:'controller_read_io_bandwidthk_bps']).is_a?(Array)
          self.controller_read_io_bandwidthk_bps = value
        end
      end

      if attributes.key?(:'controller_write_io_bandwidthk_bps')
        if (value = attributes[:'controller_write_io_bandwidthk_bps']).is_a?(Array)
          self.controller_write_io_bandwidthk_bps = value
        end
      end

      if attributes.key?(:'controller_avg_read_io_latencyu_secs')
        if (value = attributes[:'controller_avg_read_io_latencyu_secs']).is_a?(Array)
          self.controller_avg_read_io_latencyu_secs = value
        end
      end

      if attributes.key?(:'controller_avg_write_io_latencyu_secs')
        if (value = attributes[:'controller_avg_write_io_latencyu_secs']).is_a?(Array)
          self.controller_avg_write_io_latencyu_secs = value
        end
      end

      if attributes.key?(:'storage_reserved_capacity_bytes')
        if (value = attributes[:'storage_reserved_capacity_bytes']).is_a?(Array)
          self.storage_reserved_capacity_bytes = value
        end
      end

      if attributes.key?(:'storage_actual_physical_usage_bytes')
        if (value = attributes[:'storage_actual_physical_usage_bytes']).is_a?(Array)
          self.storage_actual_physical_usage_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'data_reduction_total_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_total_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_total_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'storage_free_bytes')
        if (value = attributes[:'storage_free_bytes']).is_a?(Array)
          self.storage_free_bytes = value
        end
      end

      if attributes.key?(:'storage_capacity_bytes')
        if (value = attributes[:'storage_capacity_bytes']).is_a?(Array)
          self.storage_capacity_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_saved_bytes')
        if (value = attributes[:'data_reduction_saved_bytes']).is_a?(Array)
          self.data_reduction_saved_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_overall_pre_reduction_bytes')
        if (value = attributes[:'data_reduction_overall_pre_reduction_bytes']).is_a?(Array)
          self.data_reduction_overall_pre_reduction_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_overall_post_reduction_bytes')
        if (value = attributes[:'data_reduction_overall_post_reduction_bytes']).is_a?(Array)
          self.data_reduction_overall_post_reduction_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_compression_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_compression_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_compression_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'data_reduction_dedup_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_dedup_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_dedup_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'data_reduction_erasure_coding_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_erasure_coding_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_erasure_coding_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'data_reduction_thin_provision_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_thin_provision_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_thin_provision_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'data_reduction_clone_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_clone_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_clone_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'data_reduction_snapshot_saving_ratio_ppm')
        if (value = attributes[:'data_reduction_snapshot_saving_ratio_ppm']).is_a?(Array)
          self.data_reduction_snapshot_saving_ratio_ppm = value
        end
      end

      if attributes.key?(:'data_reduction_zero_write_savings_bytes')
        if (value = attributes[:'data_reduction_zero_write_savings_bytes']).is_a?(Array)
          self.data_reduction_zero_write_savings_bytes = value
        end
      end

      if attributes.key?(:'controller_read_io_ratio_ppm')
        if (value = attributes[:'controller_read_io_ratio_ppm']).is_a?(Array)
          self.controller_read_io_ratio_ppm = value
        end
      end

      if attributes.key?(:'controller_write_io_ratio_ppm')
        if (value = attributes[:'controller_write_io_ratio_ppm']).is_a?(Array)
          self.controller_write_io_ratio_ppm = value
        end
      end

      if attributes.key?(:'storage_replication_factor')
        if (value = attributes[:'storage_replication_factor']).is_a?(Array)
          self.storage_replication_factor = value
        end
      end

      if attributes.key?(:'storage_usage_bytes')
        if (value = attributes[:'storage_usage_bytes']).is_a?(Array)
          self.storage_usage_bytes = value
        end
      end

      if attributes.key?(:'storage_tier_das_sata_usage_bytes')
        if (value = attributes[:'storage_tier_das_sata_usage_bytes']).is_a?(Array)
          self.storage_tier_das_sata_usage_bytes = value
        end
      end

      if attributes.key?(:'storage_tier_ssd_usage_bytes')
        if (value = attributes[:'storage_tier_ssd_usage_bytes']).is_a?(Array)
          self.storage_tier_ssd_usage_bytes = value
        end
      end

      if attributes.key?(:'storage_reserved_usage_bytes')
        if (value = attributes[:'storage_reserved_usage_bytes']).is_a?(Array)
          self.storage_reserved_usage_bytes = value
        end
      end

      if attributes.key?(:'storage_reserved_free_bytes')
        if (value = attributes[:'storage_reserved_free_bytes']).is_a?(Array)
          self.storage_reserved_free_bytes = value
        end
      end

      if attributes.key?(:'storage_unreserved_usage_bytes')
        if (value = attributes[:'storage_unreserved_usage_bytes']).is_a?(Array)
          self.storage_unreserved_usage_bytes = value
        end
      end

      if attributes.key?(:'storage_other_containers_reserved_capacity')
        if (value = attributes[:'storage_other_containers_reserved_capacity']).is_a?(Array)
          self.storage_other_containers_reserved_capacity = value
        end
      end

      if attributes.key?(:'storage_other_containers_unreserved_capacity')
        if (value = attributes[:'storage_other_containers_unreserved_capacity']).is_a?(Array)
          self.storage_other_containers_unreserved_capacity = value
        end
      end

      if attributes.key?(:'storage_snapshot_reclaimable')
        if (value = attributes[:'storage_snapshot_reclaimable']).is_a?(Array)
          self.storage_snapshot_reclaimable = value
        end
      end

      if attributes.key?(:'data_reduction_thin_provision_saved_bytes')
        if (value = attributes[:'data_reduction_thin_provision_saved_bytes']).is_a?(Array)
          self.data_reduction_thin_provision_saved_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_snapshot_saved_bytes')
        if (value = attributes[:'data_reduction_snapshot_saved_bytes']).is_a?(Array)
          self.data_reduction_snapshot_saved_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_clone_saved_bytes')
        if (value = attributes[:'data_reduction_clone_saved_bytes']).is_a?(Array)
          self.data_reduction_clone_saved_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_erasure_coding_saved_bytes')
        if (value = attributes[:'data_reduction_erasure_coding_saved_bytes']).is_a?(Array)
          self.data_reduction_erasure_coding_saved_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_dedup_saved_bytes')
        if (value = attributes[:'data_reduction_dedup_saved_bytes']).is_a?(Array)
          self.data_reduction_dedup_saved_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_overall_saved_bytes')
        if (value = attributes[:'data_reduction_overall_saved_bytes']).is_a?(Array)
          self.data_reduction_overall_saved_bytes = value
        end
      end

      if attributes.key?(:'data_reduction_compression_saved_bytes')
        if (value = attributes[:'data_reduction_compression_saved_bytes']).is_a?(Array)
          self.data_reduction_compression_saved_bytes = value
        end
      end

      if attributes.key?(:'health')
        if (value = attributes[:'health']).is_a?(Array)
          self.health = value
        end
      end

      if attributes.key?(:'container_ext_id')
        self.container_ext_id = attributes[:'container_ext_id']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if !@tenant_id.nil? && @tenant_id !~ pattern
        invalid_properties.push("invalid value for \"tenant_id\", must conform to the pattern #{pattern}.")
      end

      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if !@ext_id.nil? && @ext_id !~ pattern
        invalid_properties.push("invalid value for \"ext_id\", must conform to the pattern #{pattern}.")
      end

      if !@links.nil? && @links.length > 20
        invalid_properties.push('invalid value for "links", number of items must be less than or equal to 20.')
      end

      if !@links.nil? && @links.length < 0
        invalid_properties.push('invalid value for "links", number of items must be greater than or equal to 0.')
      end

      if !@controller_num_iops.nil? && @controller_num_iops.length > 3000
        invalid_properties.push('invalid value for "controller_num_iops", number of items must be less than or equal to 3000.')
      end

      if !@controller_num_iops.nil? && @controller_num_iops.length < 0
        invalid_properties.push('invalid value for "controller_num_iops", number of items must be greater than or equal to 0.')
      end

      if !@controller_io_bandwidthk_bps.nil? && @controller_io_bandwidthk_bps.length > 3000
        invalid_properties.push('invalid value for "controller_io_bandwidthk_bps", number of items must be less than or equal to 3000.')
      end

      if !@controller_io_bandwidthk_bps.nil? && @controller_io_bandwidthk_bps.length < 0
        invalid_properties.push('invalid value for "controller_io_bandwidthk_bps", number of items must be greater than or equal to 0.')
      end

      if !@controller_avg_io_latencyu_secs.nil? && @controller_avg_io_latencyu_secs.length > 3000
        invalid_properties.push('invalid value for "controller_avg_io_latencyu_secs", number of items must be less than or equal to 3000.')
      end

      if !@controller_avg_io_latencyu_secs.nil? && @controller_avg_io_latencyu_secs.length < 0
        invalid_properties.push('invalid value for "controller_avg_io_latencyu_secs", number of items must be greater than or equal to 0.')
      end

      if !@controller_num_read_iops.nil? && @controller_num_read_iops.length > 3000
        invalid_properties.push('invalid value for "controller_num_read_iops", number of items must be less than or equal to 3000.')
      end

      if !@controller_num_read_iops.nil? && @controller_num_read_iops.length < 0
        invalid_properties.push('invalid value for "controller_num_read_iops", number of items must be greater than or equal to 0.')
      end

      if !@controller_num_write_iops.nil? && @controller_num_write_iops.length > 3000
        invalid_properties.push('invalid value for "controller_num_write_iops", number of items must be less than or equal to 3000.')
      end

      if !@controller_num_write_iops.nil? && @controller_num_write_iops.length < 0
        invalid_properties.push('invalid value for "controller_num_write_iops", number of items must be greater than or equal to 0.')
      end

      if !@controller_read_io_bandwidthk_bps.nil? && @controller_read_io_bandwidthk_bps.length > 3000
        invalid_properties.push('invalid value for "controller_read_io_bandwidthk_bps", number of items must be less than or equal to 3000.')
      end

      if !@controller_read_io_bandwidthk_bps.nil? && @controller_read_io_bandwidthk_bps.length < 0
        invalid_properties.push('invalid value for "controller_read_io_bandwidthk_bps", number of items must be greater than or equal to 0.')
      end

      if !@controller_write_io_bandwidthk_bps.nil? && @controller_write_io_bandwidthk_bps.length > 3000
        invalid_properties.push('invalid value for "controller_write_io_bandwidthk_bps", number of items must be less than or equal to 3000.')
      end

      if !@controller_write_io_bandwidthk_bps.nil? && @controller_write_io_bandwidthk_bps.length < 0
        invalid_properties.push('invalid value for "controller_write_io_bandwidthk_bps", number of items must be greater than or equal to 0.')
      end

      if !@controller_avg_read_io_latencyu_secs.nil? && @controller_avg_read_io_latencyu_secs.length > 3000
        invalid_properties.push('invalid value for "controller_avg_read_io_latencyu_secs", number of items must be less than or equal to 3000.')
      end

      if !@controller_avg_read_io_latencyu_secs.nil? && @controller_avg_read_io_latencyu_secs.length < 0
        invalid_properties.push('invalid value for "controller_avg_read_io_latencyu_secs", number of items must be greater than or equal to 0.')
      end

      if !@controller_avg_write_io_latencyu_secs.nil? && @controller_avg_write_io_latencyu_secs.length > 3000
        invalid_properties.push('invalid value for "controller_avg_write_io_latencyu_secs", number of items must be less than or equal to 3000.')
      end

      if !@controller_avg_write_io_latencyu_secs.nil? && @controller_avg_write_io_latencyu_secs.length < 0
        invalid_properties.push('invalid value for "controller_avg_write_io_latencyu_secs", number of items must be greater than or equal to 0.')
      end

      if !@storage_reserved_capacity_bytes.nil? && @storage_reserved_capacity_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_reserved_capacity_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_reserved_capacity_bytes.nil? && @storage_reserved_capacity_bytes.length < 0
        invalid_properties.push('invalid value for "storage_reserved_capacity_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_actual_physical_usage_bytes.nil? && @storage_actual_physical_usage_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_actual_physical_usage_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_actual_physical_usage_bytes.nil? && @storage_actual_physical_usage_bytes.length < 0
        invalid_properties.push('invalid value for "storage_actual_physical_usage_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_saving_ratio_ppm.nil? && @data_reduction_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_saving_ratio_ppm.nil? && @data_reduction_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_total_saving_ratio_ppm.nil? && @data_reduction_total_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_total_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_total_saving_ratio_ppm.nil? && @data_reduction_total_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_total_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@storage_free_bytes.nil? && @storage_free_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_free_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_free_bytes.nil? && @storage_free_bytes.length < 0
        invalid_properties.push('invalid value for "storage_free_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_capacity_bytes.nil? && @storage_capacity_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_capacity_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_capacity_bytes.nil? && @storage_capacity_bytes.length < 0
        invalid_properties.push('invalid value for "storage_capacity_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_saved_bytes.nil? && @data_reduction_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_saved_bytes.nil? && @data_reduction_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_overall_pre_reduction_bytes.nil? && @data_reduction_overall_pre_reduction_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_overall_pre_reduction_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_overall_pre_reduction_bytes.nil? && @data_reduction_overall_pre_reduction_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_overall_pre_reduction_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_overall_post_reduction_bytes.nil? && @data_reduction_overall_post_reduction_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_overall_post_reduction_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_overall_post_reduction_bytes.nil? && @data_reduction_overall_post_reduction_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_overall_post_reduction_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_compression_saving_ratio_ppm.nil? && @data_reduction_compression_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_compression_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_compression_saving_ratio_ppm.nil? && @data_reduction_compression_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_compression_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_dedup_saving_ratio_ppm.nil? && @data_reduction_dedup_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_dedup_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_dedup_saving_ratio_ppm.nil? && @data_reduction_dedup_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_dedup_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_erasure_coding_saving_ratio_ppm.nil? && @data_reduction_erasure_coding_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_erasure_coding_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_erasure_coding_saving_ratio_ppm.nil? && @data_reduction_erasure_coding_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_erasure_coding_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_thin_provision_saving_ratio_ppm.nil? && @data_reduction_thin_provision_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_thin_provision_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_thin_provision_saving_ratio_ppm.nil? && @data_reduction_thin_provision_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_thin_provision_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_clone_saving_ratio_ppm.nil? && @data_reduction_clone_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_clone_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_clone_saving_ratio_ppm.nil? && @data_reduction_clone_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_clone_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_snapshot_saving_ratio_ppm.nil? && @data_reduction_snapshot_saving_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "data_reduction_snapshot_saving_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_snapshot_saving_ratio_ppm.nil? && @data_reduction_snapshot_saving_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "data_reduction_snapshot_saving_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_zero_write_savings_bytes.nil? && @data_reduction_zero_write_savings_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_zero_write_savings_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_zero_write_savings_bytes.nil? && @data_reduction_zero_write_savings_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_zero_write_savings_bytes", number of items must be greater than or equal to 0.')
      end

      if !@controller_read_io_ratio_ppm.nil? && @controller_read_io_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "controller_read_io_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@controller_read_io_ratio_ppm.nil? && @controller_read_io_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "controller_read_io_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@controller_write_io_ratio_ppm.nil? && @controller_write_io_ratio_ppm.length > 3000
        invalid_properties.push('invalid value for "controller_write_io_ratio_ppm", number of items must be less than or equal to 3000.')
      end

      if !@controller_write_io_ratio_ppm.nil? && @controller_write_io_ratio_ppm.length < 0
        invalid_properties.push('invalid value for "controller_write_io_ratio_ppm", number of items must be greater than or equal to 0.')
      end

      if !@storage_replication_factor.nil? && @storage_replication_factor.length > 3000
        invalid_properties.push('invalid value for "storage_replication_factor", number of items must be less than or equal to 3000.')
      end

      if !@storage_replication_factor.nil? && @storage_replication_factor.length < 0
        invalid_properties.push('invalid value for "storage_replication_factor", number of items must be greater than or equal to 0.')
      end

      if !@storage_usage_bytes.nil? && @storage_usage_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_usage_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_usage_bytes.nil? && @storage_usage_bytes.length < 0
        invalid_properties.push('invalid value for "storage_usage_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_tier_das_sata_usage_bytes.nil? && @storage_tier_das_sata_usage_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_tier_das_sata_usage_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_tier_das_sata_usage_bytes.nil? && @storage_tier_das_sata_usage_bytes.length < 0
        invalid_properties.push('invalid value for "storage_tier_das_sata_usage_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_tier_ssd_usage_bytes.nil? && @storage_tier_ssd_usage_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_tier_ssd_usage_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_tier_ssd_usage_bytes.nil? && @storage_tier_ssd_usage_bytes.length < 0
        invalid_properties.push('invalid value for "storage_tier_ssd_usage_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_reserved_usage_bytes.nil? && @storage_reserved_usage_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_reserved_usage_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_reserved_usage_bytes.nil? && @storage_reserved_usage_bytes.length < 0
        invalid_properties.push('invalid value for "storage_reserved_usage_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_reserved_free_bytes.nil? && @storage_reserved_free_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_reserved_free_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_reserved_free_bytes.nil? && @storage_reserved_free_bytes.length < 0
        invalid_properties.push('invalid value for "storage_reserved_free_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_unreserved_usage_bytes.nil? && @storage_unreserved_usage_bytes.length > 3000
        invalid_properties.push('invalid value for "storage_unreserved_usage_bytes", number of items must be less than or equal to 3000.')
      end

      if !@storage_unreserved_usage_bytes.nil? && @storage_unreserved_usage_bytes.length < 0
        invalid_properties.push('invalid value for "storage_unreserved_usage_bytes", number of items must be greater than or equal to 0.')
      end

      if !@storage_other_containers_reserved_capacity.nil? && @storage_other_containers_reserved_capacity.length > 3000
        invalid_properties.push('invalid value for "storage_other_containers_reserved_capacity", number of items must be less than or equal to 3000.')
      end

      if !@storage_other_containers_reserved_capacity.nil? && @storage_other_containers_reserved_capacity.length < 0
        invalid_properties.push('invalid value for "storage_other_containers_reserved_capacity", number of items must be greater than or equal to 0.')
      end

      if !@storage_other_containers_unreserved_capacity.nil? && @storage_other_containers_unreserved_capacity.length > 3000
        invalid_properties.push('invalid value for "storage_other_containers_unreserved_capacity", number of items must be less than or equal to 3000.')
      end

      if !@storage_other_containers_unreserved_capacity.nil? && @storage_other_containers_unreserved_capacity.length < 0
        invalid_properties.push('invalid value for "storage_other_containers_unreserved_capacity", number of items must be greater than or equal to 0.')
      end

      if !@storage_snapshot_reclaimable.nil? && @storage_snapshot_reclaimable.length > 3000
        invalid_properties.push('invalid value for "storage_snapshot_reclaimable", number of items must be less than or equal to 3000.')
      end

      if !@storage_snapshot_reclaimable.nil? && @storage_snapshot_reclaimable.length < 0
        invalid_properties.push('invalid value for "storage_snapshot_reclaimable", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_thin_provision_saved_bytes.nil? && @data_reduction_thin_provision_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_thin_provision_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_thin_provision_saved_bytes.nil? && @data_reduction_thin_provision_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_thin_provision_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_snapshot_saved_bytes.nil? && @data_reduction_snapshot_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_snapshot_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_snapshot_saved_bytes.nil? && @data_reduction_snapshot_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_snapshot_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_clone_saved_bytes.nil? && @data_reduction_clone_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_clone_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_clone_saved_bytes.nil? && @data_reduction_clone_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_clone_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_erasure_coding_saved_bytes.nil? && @data_reduction_erasure_coding_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_erasure_coding_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_erasure_coding_saved_bytes.nil? && @data_reduction_erasure_coding_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_erasure_coding_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_dedup_saved_bytes.nil? && @data_reduction_dedup_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_dedup_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_dedup_saved_bytes.nil? && @data_reduction_dedup_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_dedup_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_overall_saved_bytes.nil? && @data_reduction_overall_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_overall_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_overall_saved_bytes.nil? && @data_reduction_overall_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_overall_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@data_reduction_compression_saved_bytes.nil? && @data_reduction_compression_saved_bytes.length > 3000
        invalid_properties.push('invalid value for "data_reduction_compression_saved_bytes", number of items must be less than or equal to 3000.')
      end

      if !@data_reduction_compression_saved_bytes.nil? && @data_reduction_compression_saved_bytes.length < 0
        invalid_properties.push('invalid value for "data_reduction_compression_saved_bytes", number of items must be greater than or equal to 0.')
      end

      if !@health.nil? && @health.length > 3000
        invalid_properties.push('invalid value for "health", number of items must be less than or equal to 3000.')
      end

      if !@health.nil? && @health.length < 0
        invalid_properties.push('invalid value for "health", number of items must be greater than or equal to 0.')
      end

      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if !@container_ext_id.nil? && @container_ext_id !~ pattern
        invalid_properties.push("invalid value for \"container_ext_id\", must conform to the pattern #{pattern}.")
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if !@tenant_id.nil? && @tenant_id !~ Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      return false if !@ext_id.nil? && @ext_id !~ Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      return false if !@links.nil? && @links.length > 20
      return false if !@links.nil? && @links.length < 0
      return false if !@controller_num_iops.nil? && @controller_num_iops.length > 3000
      return false if !@controller_num_iops.nil? && @controller_num_iops.length < 0
      return false if !@controller_io_bandwidthk_bps.nil? && @controller_io_bandwidthk_bps.length > 3000
      return false if !@controller_io_bandwidthk_bps.nil? && @controller_io_bandwidthk_bps.length < 0
      return false if !@controller_avg_io_latencyu_secs.nil? && @controller_avg_io_latencyu_secs.length > 3000
      return false if !@controller_avg_io_latencyu_secs.nil? && @controller_avg_io_latencyu_secs.length < 0
      return false if !@controller_num_read_iops.nil? && @controller_num_read_iops.length > 3000
      return false if !@controller_num_read_iops.nil? && @controller_num_read_iops.length < 0
      return false if !@controller_num_write_iops.nil? && @controller_num_write_iops.length > 3000
      return false if !@controller_num_write_iops.nil? && @controller_num_write_iops.length < 0
      return false if !@controller_read_io_bandwidthk_bps.nil? && @controller_read_io_bandwidthk_bps.length > 3000
      return false if !@controller_read_io_bandwidthk_bps.nil? && @controller_read_io_bandwidthk_bps.length < 0
      return false if !@controller_write_io_bandwidthk_bps.nil? && @controller_write_io_bandwidthk_bps.length > 3000
      return false if !@controller_write_io_bandwidthk_bps.nil? && @controller_write_io_bandwidthk_bps.length < 0
      return false if !@controller_avg_read_io_latencyu_secs.nil? && @controller_avg_read_io_latencyu_secs.length > 3000
      return false if !@controller_avg_read_io_latencyu_secs.nil? && @controller_avg_read_io_latencyu_secs.length < 0
      return false if !@controller_avg_write_io_latencyu_secs.nil? && @controller_avg_write_io_latencyu_secs.length > 3000
      return false if !@controller_avg_write_io_latencyu_secs.nil? && @controller_avg_write_io_latencyu_secs.length < 0
      return false if !@storage_reserved_capacity_bytes.nil? && @storage_reserved_capacity_bytes.length > 3000
      return false if !@storage_reserved_capacity_bytes.nil? && @storage_reserved_capacity_bytes.length < 0
      return false if !@storage_actual_physical_usage_bytes.nil? && @storage_actual_physical_usage_bytes.length > 3000
      return false if !@storage_actual_physical_usage_bytes.nil? && @storage_actual_physical_usage_bytes.length < 0
      return false if !@data_reduction_saving_ratio_ppm.nil? && @data_reduction_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_saving_ratio_ppm.nil? && @data_reduction_saving_ratio_ppm.length < 0
      return false if !@data_reduction_total_saving_ratio_ppm.nil? && @data_reduction_total_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_total_saving_ratio_ppm.nil? && @data_reduction_total_saving_ratio_ppm.length < 0
      return false if !@storage_free_bytes.nil? && @storage_free_bytes.length > 3000
      return false if !@storage_free_bytes.nil? && @storage_free_bytes.length < 0
      return false if !@storage_capacity_bytes.nil? && @storage_capacity_bytes.length > 3000
      return false if !@storage_capacity_bytes.nil? && @storage_capacity_bytes.length < 0
      return false if !@data_reduction_saved_bytes.nil? && @data_reduction_saved_bytes.length > 3000
      return false if !@data_reduction_saved_bytes.nil? && @data_reduction_saved_bytes.length < 0
      return false if !@data_reduction_overall_pre_reduction_bytes.nil? && @data_reduction_overall_pre_reduction_bytes.length > 3000
      return false if !@data_reduction_overall_pre_reduction_bytes.nil? && @data_reduction_overall_pre_reduction_bytes.length < 0
      return false if !@data_reduction_overall_post_reduction_bytes.nil? && @data_reduction_overall_post_reduction_bytes.length > 3000
      return false if !@data_reduction_overall_post_reduction_bytes.nil? && @data_reduction_overall_post_reduction_bytes.length < 0
      return false if !@data_reduction_compression_saving_ratio_ppm.nil? && @data_reduction_compression_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_compression_saving_ratio_ppm.nil? && @data_reduction_compression_saving_ratio_ppm.length < 0
      return false if !@data_reduction_dedup_saving_ratio_ppm.nil? && @data_reduction_dedup_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_dedup_saving_ratio_ppm.nil? && @data_reduction_dedup_saving_ratio_ppm.length < 0
      return false if !@data_reduction_erasure_coding_saving_ratio_ppm.nil? && @data_reduction_erasure_coding_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_erasure_coding_saving_ratio_ppm.nil? && @data_reduction_erasure_coding_saving_ratio_ppm.length < 0
      return false if !@data_reduction_thin_provision_saving_ratio_ppm.nil? && @data_reduction_thin_provision_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_thin_provision_saving_ratio_ppm.nil? && @data_reduction_thin_provision_saving_ratio_ppm.length < 0
      return false if !@data_reduction_clone_saving_ratio_ppm.nil? && @data_reduction_clone_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_clone_saving_ratio_ppm.nil? && @data_reduction_clone_saving_ratio_ppm.length < 0
      return false if !@data_reduction_snapshot_saving_ratio_ppm.nil? && @data_reduction_snapshot_saving_ratio_ppm.length > 3000
      return false if !@data_reduction_snapshot_saving_ratio_ppm.nil? && @data_reduction_snapshot_saving_ratio_ppm.length < 0
      return false if !@data_reduction_zero_write_savings_bytes.nil? && @data_reduction_zero_write_savings_bytes.length > 3000
      return false if !@data_reduction_zero_write_savings_bytes.nil? && @data_reduction_zero_write_savings_bytes.length < 0
      return false if !@controller_read_io_ratio_ppm.nil? && @controller_read_io_ratio_ppm.length > 3000
      return false if !@controller_read_io_ratio_ppm.nil? && @controller_read_io_ratio_ppm.length < 0
      return false if !@controller_write_io_ratio_ppm.nil? && @controller_write_io_ratio_ppm.length > 3000
      return false if !@controller_write_io_ratio_ppm.nil? && @controller_write_io_ratio_ppm.length < 0
      return false if !@storage_replication_factor.nil? && @storage_replication_factor.length > 3000
      return false if !@storage_replication_factor.nil? && @storage_replication_factor.length < 0
      return false if !@storage_usage_bytes.nil? && @storage_usage_bytes.length > 3000
      return false if !@storage_usage_bytes.nil? && @storage_usage_bytes.length < 0
      return false if !@storage_tier_das_sata_usage_bytes.nil? && @storage_tier_das_sata_usage_bytes.length > 3000
      return false if !@storage_tier_das_sata_usage_bytes.nil? && @storage_tier_das_sata_usage_bytes.length < 0
      return false if !@storage_tier_ssd_usage_bytes.nil? && @storage_tier_ssd_usage_bytes.length > 3000
      return false if !@storage_tier_ssd_usage_bytes.nil? && @storage_tier_ssd_usage_bytes.length < 0
      return false if !@storage_reserved_usage_bytes.nil? && @storage_reserved_usage_bytes.length > 3000
      return false if !@storage_reserved_usage_bytes.nil? && @storage_reserved_usage_bytes.length < 0
      return false if !@storage_reserved_free_bytes.nil? && @storage_reserved_free_bytes.length > 3000
      return false if !@storage_reserved_free_bytes.nil? && @storage_reserved_free_bytes.length < 0
      return false if !@storage_unreserved_usage_bytes.nil? && @storage_unreserved_usage_bytes.length > 3000
      return false if !@storage_unreserved_usage_bytes.nil? && @storage_unreserved_usage_bytes.length < 0
      return false if !@storage_other_containers_reserved_capacity.nil? && @storage_other_containers_reserved_capacity.length > 3000
      return false if !@storage_other_containers_reserved_capacity.nil? && @storage_other_containers_reserved_capacity.length < 0
      return false if !@storage_other_containers_unreserved_capacity.nil? && @storage_other_containers_unreserved_capacity.length > 3000
      return false if !@storage_other_containers_unreserved_capacity.nil? && @storage_other_containers_unreserved_capacity.length < 0
      return false if !@storage_snapshot_reclaimable.nil? && @storage_snapshot_reclaimable.length > 3000
      return false if !@storage_snapshot_reclaimable.nil? && @storage_snapshot_reclaimable.length < 0
      return false if !@data_reduction_thin_provision_saved_bytes.nil? && @data_reduction_thin_provision_saved_bytes.length > 3000
      return false if !@data_reduction_thin_provision_saved_bytes.nil? && @data_reduction_thin_provision_saved_bytes.length < 0
      return false if !@data_reduction_snapshot_saved_bytes.nil? && @data_reduction_snapshot_saved_bytes.length > 3000
      return false if !@data_reduction_snapshot_saved_bytes.nil? && @data_reduction_snapshot_saved_bytes.length < 0
      return false if !@data_reduction_clone_saved_bytes.nil? && @data_reduction_clone_saved_bytes.length > 3000
      return false if !@data_reduction_clone_saved_bytes.nil? && @data_reduction_clone_saved_bytes.length < 0
      return false if !@data_reduction_erasure_coding_saved_bytes.nil? && @data_reduction_erasure_coding_saved_bytes.length > 3000
      return false if !@data_reduction_erasure_coding_saved_bytes.nil? && @data_reduction_erasure_coding_saved_bytes.length < 0
      return false if !@data_reduction_dedup_saved_bytes.nil? && @data_reduction_dedup_saved_bytes.length > 3000
      return false if !@data_reduction_dedup_saved_bytes.nil? && @data_reduction_dedup_saved_bytes.length < 0
      return false if !@data_reduction_overall_saved_bytes.nil? && @data_reduction_overall_saved_bytes.length > 3000
      return false if !@data_reduction_overall_saved_bytes.nil? && @data_reduction_overall_saved_bytes.length < 0
      return false if !@data_reduction_compression_saved_bytes.nil? && @data_reduction_compression_saved_bytes.length > 3000
      return false if !@data_reduction_compression_saved_bytes.nil? && @data_reduction_compression_saved_bytes.length < 0
      return false if !@health.nil? && @health.length > 3000
      return false if !@health.nil? && @health.length < 0
      return false if !@container_ext_id.nil? && @container_ext_id !~ Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] tenant_id Value to be assigned
    def tenant_id=(tenant_id)
      if tenant_id.nil?
        fail ArgumentError, 'tenant_id cannot be nil'
      end

      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if tenant_id !~ pattern
        fail ArgumentError, "invalid value for \"tenant_id\", must conform to the pattern #{pattern}."
      end

      @tenant_id = tenant_id
    end

    # Custom attribute writer method with validation
    # @param [Object] ext_id Value to be assigned
    def ext_id=(ext_id)
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if !ext_id.nil? && ext_id !~ pattern
        fail ArgumentError, "invalid value for \"ext_id\", must conform to the pattern #{pattern}."
      end

      @ext_id = ext_id
    end

    # Custom attribute writer method with validation
    # @param [Object] links Value to be assigned
    def links=(links)
      if links.nil?
        fail ArgumentError, 'links cannot be nil'
      end

      if links.length > 20
        fail ArgumentError, 'invalid value for "links", number of items must be less than or equal to 20.'
      end

      if links.length < 0
        fail ArgumentError, 'invalid value for "links", number of items must be greater than or equal to 0.'
      end

      @links = links
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_num_iops Value to be assigned
    def controller_num_iops=(controller_num_iops)
      if controller_num_iops.nil?
        fail ArgumentError, 'controller_num_iops cannot be nil'
      end

      if controller_num_iops.length > 3000
        fail ArgumentError, 'invalid value for "controller_num_iops", number of items must be less than or equal to 3000.'
      end

      if controller_num_iops.length < 0
        fail ArgumentError, 'invalid value for "controller_num_iops", number of items must be greater than or equal to 0.'
      end

      @controller_num_iops = controller_num_iops
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_io_bandwidthk_bps Value to be assigned
    def controller_io_bandwidthk_bps=(controller_io_bandwidthk_bps)
      if controller_io_bandwidthk_bps.nil?
        fail ArgumentError, 'controller_io_bandwidthk_bps cannot be nil'
      end

      if controller_io_bandwidthk_bps.length > 3000
        fail ArgumentError, 'invalid value for "controller_io_bandwidthk_bps", number of items must be less than or equal to 3000.'
      end

      if controller_io_bandwidthk_bps.length < 0
        fail ArgumentError, 'invalid value for "controller_io_bandwidthk_bps", number of items must be greater than or equal to 0.'
      end

      @controller_io_bandwidthk_bps = controller_io_bandwidthk_bps
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_avg_io_latencyu_secs Value to be assigned
    def controller_avg_io_latencyu_secs=(controller_avg_io_latencyu_secs)
      if controller_avg_io_latencyu_secs.nil?
        fail ArgumentError, 'controller_avg_io_latencyu_secs cannot be nil'
      end

      if controller_avg_io_latencyu_secs.length > 3000
        fail ArgumentError, 'invalid value for "controller_avg_io_latencyu_secs", number of items must be less than or equal to 3000.'
      end

      if controller_avg_io_latencyu_secs.length < 0
        fail ArgumentError, 'invalid value for "controller_avg_io_latencyu_secs", number of items must be greater than or equal to 0.'
      end

      @controller_avg_io_latencyu_secs = controller_avg_io_latencyu_secs
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_num_read_iops Value to be assigned
    def controller_num_read_iops=(controller_num_read_iops)
      if controller_num_read_iops.nil?
        fail ArgumentError, 'controller_num_read_iops cannot be nil'
      end

      if controller_num_read_iops.length > 3000
        fail ArgumentError, 'invalid value for "controller_num_read_iops", number of items must be less than or equal to 3000.'
      end

      if controller_num_read_iops.length < 0
        fail ArgumentError, 'invalid value for "controller_num_read_iops", number of items must be greater than or equal to 0.'
      end

      @controller_num_read_iops = controller_num_read_iops
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_num_write_iops Value to be assigned
    def controller_num_write_iops=(controller_num_write_iops)
      if controller_num_write_iops.nil?
        fail ArgumentError, 'controller_num_write_iops cannot be nil'
      end

      if controller_num_write_iops.length > 3000
        fail ArgumentError, 'invalid value for "controller_num_write_iops", number of items must be less than or equal to 3000.'
      end

      if controller_num_write_iops.length < 0
        fail ArgumentError, 'invalid value for "controller_num_write_iops", number of items must be greater than or equal to 0.'
      end

      @controller_num_write_iops = controller_num_write_iops
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_read_io_bandwidthk_bps Value to be assigned
    def controller_read_io_bandwidthk_bps=(controller_read_io_bandwidthk_bps)
      if controller_read_io_bandwidthk_bps.nil?
        fail ArgumentError, 'controller_read_io_bandwidthk_bps cannot be nil'
      end

      if controller_read_io_bandwidthk_bps.length > 3000
        fail ArgumentError, 'invalid value for "controller_read_io_bandwidthk_bps", number of items must be less than or equal to 3000.'
      end

      if controller_read_io_bandwidthk_bps.length < 0
        fail ArgumentError, 'invalid value for "controller_read_io_bandwidthk_bps", number of items must be greater than or equal to 0.'
      end

      @controller_read_io_bandwidthk_bps = controller_read_io_bandwidthk_bps
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_write_io_bandwidthk_bps Value to be assigned
    def controller_write_io_bandwidthk_bps=(controller_write_io_bandwidthk_bps)
      if controller_write_io_bandwidthk_bps.nil?
        fail ArgumentError, 'controller_write_io_bandwidthk_bps cannot be nil'
      end

      if controller_write_io_bandwidthk_bps.length > 3000
        fail ArgumentError, 'invalid value for "controller_write_io_bandwidthk_bps", number of items must be less than or equal to 3000.'
      end

      if controller_write_io_bandwidthk_bps.length < 0
        fail ArgumentError, 'invalid value for "controller_write_io_bandwidthk_bps", number of items must be greater than or equal to 0.'
      end

      @controller_write_io_bandwidthk_bps = controller_write_io_bandwidthk_bps
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_avg_read_io_latencyu_secs Value to be assigned
    def controller_avg_read_io_latencyu_secs=(controller_avg_read_io_latencyu_secs)
      if controller_avg_read_io_latencyu_secs.nil?
        fail ArgumentError, 'controller_avg_read_io_latencyu_secs cannot be nil'
      end

      if controller_avg_read_io_latencyu_secs.length > 3000
        fail ArgumentError, 'invalid value for "controller_avg_read_io_latencyu_secs", number of items must be less than or equal to 3000.'
      end

      if controller_avg_read_io_latencyu_secs.length < 0
        fail ArgumentError, 'invalid value for "controller_avg_read_io_latencyu_secs", number of items must be greater than or equal to 0.'
      end

      @controller_avg_read_io_latencyu_secs = controller_avg_read_io_latencyu_secs
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_avg_write_io_latencyu_secs Value to be assigned
    def controller_avg_write_io_latencyu_secs=(controller_avg_write_io_latencyu_secs)
      if controller_avg_write_io_latencyu_secs.nil?
        fail ArgumentError, 'controller_avg_write_io_latencyu_secs cannot be nil'
      end

      if controller_avg_write_io_latencyu_secs.length > 3000
        fail ArgumentError, 'invalid value for "controller_avg_write_io_latencyu_secs", number of items must be less than or equal to 3000.'
      end

      if controller_avg_write_io_latencyu_secs.length < 0
        fail ArgumentError, 'invalid value for "controller_avg_write_io_latencyu_secs", number of items must be greater than or equal to 0.'
      end

      @controller_avg_write_io_latencyu_secs = controller_avg_write_io_latencyu_secs
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_reserved_capacity_bytes Value to be assigned
    def storage_reserved_capacity_bytes=(storage_reserved_capacity_bytes)
      if storage_reserved_capacity_bytes.nil?
        fail ArgumentError, 'storage_reserved_capacity_bytes cannot be nil'
      end

      if storage_reserved_capacity_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_reserved_capacity_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_reserved_capacity_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_reserved_capacity_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_reserved_capacity_bytes = storage_reserved_capacity_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_actual_physical_usage_bytes Value to be assigned
    def storage_actual_physical_usage_bytes=(storage_actual_physical_usage_bytes)
      if storage_actual_physical_usage_bytes.nil?
        fail ArgumentError, 'storage_actual_physical_usage_bytes cannot be nil'
      end

      if storage_actual_physical_usage_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_actual_physical_usage_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_actual_physical_usage_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_actual_physical_usage_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_actual_physical_usage_bytes = storage_actual_physical_usage_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_saving_ratio_ppm Value to be assigned
    def data_reduction_saving_ratio_ppm=(data_reduction_saving_ratio_ppm)
      if data_reduction_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_saving_ratio_ppm = data_reduction_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_total_saving_ratio_ppm Value to be assigned
    def data_reduction_total_saving_ratio_ppm=(data_reduction_total_saving_ratio_ppm)
      if data_reduction_total_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_total_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_total_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_total_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_total_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_total_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_total_saving_ratio_ppm = data_reduction_total_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_free_bytes Value to be assigned
    def storage_free_bytes=(storage_free_bytes)
      if storage_free_bytes.nil?
        fail ArgumentError, 'storage_free_bytes cannot be nil'
      end

      if storage_free_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_free_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_free_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_free_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_free_bytes = storage_free_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_capacity_bytes Value to be assigned
    def storage_capacity_bytes=(storage_capacity_bytes)
      if storage_capacity_bytes.nil?
        fail ArgumentError, 'storage_capacity_bytes cannot be nil'
      end

      if storage_capacity_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_capacity_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_capacity_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_capacity_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_capacity_bytes = storage_capacity_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_saved_bytes Value to be assigned
    def data_reduction_saved_bytes=(data_reduction_saved_bytes)
      if data_reduction_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_saved_bytes cannot be nil'
      end

      if data_reduction_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_saved_bytes = data_reduction_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_overall_pre_reduction_bytes Value to be assigned
    def data_reduction_overall_pre_reduction_bytes=(data_reduction_overall_pre_reduction_bytes)
      if data_reduction_overall_pre_reduction_bytes.nil?
        fail ArgumentError, 'data_reduction_overall_pre_reduction_bytes cannot be nil'
      end

      if data_reduction_overall_pre_reduction_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_overall_pre_reduction_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_overall_pre_reduction_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_overall_pre_reduction_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_overall_pre_reduction_bytes = data_reduction_overall_pre_reduction_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_overall_post_reduction_bytes Value to be assigned
    def data_reduction_overall_post_reduction_bytes=(data_reduction_overall_post_reduction_bytes)
      if data_reduction_overall_post_reduction_bytes.nil?
        fail ArgumentError, 'data_reduction_overall_post_reduction_bytes cannot be nil'
      end

      if data_reduction_overall_post_reduction_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_overall_post_reduction_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_overall_post_reduction_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_overall_post_reduction_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_overall_post_reduction_bytes = data_reduction_overall_post_reduction_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_compression_saving_ratio_ppm Value to be assigned
    def data_reduction_compression_saving_ratio_ppm=(data_reduction_compression_saving_ratio_ppm)
      if data_reduction_compression_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_compression_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_compression_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_compression_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_compression_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_compression_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_compression_saving_ratio_ppm = data_reduction_compression_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_dedup_saving_ratio_ppm Value to be assigned
    def data_reduction_dedup_saving_ratio_ppm=(data_reduction_dedup_saving_ratio_ppm)
      if data_reduction_dedup_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_dedup_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_dedup_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_dedup_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_dedup_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_dedup_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_dedup_saving_ratio_ppm = data_reduction_dedup_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_erasure_coding_saving_ratio_ppm Value to be assigned
    def data_reduction_erasure_coding_saving_ratio_ppm=(data_reduction_erasure_coding_saving_ratio_ppm)
      if data_reduction_erasure_coding_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_erasure_coding_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_erasure_coding_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_erasure_coding_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_erasure_coding_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_erasure_coding_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_erasure_coding_saving_ratio_ppm = data_reduction_erasure_coding_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_thin_provision_saving_ratio_ppm Value to be assigned
    def data_reduction_thin_provision_saving_ratio_ppm=(data_reduction_thin_provision_saving_ratio_ppm)
      if data_reduction_thin_provision_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_thin_provision_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_thin_provision_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_thin_provision_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_thin_provision_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_thin_provision_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_thin_provision_saving_ratio_ppm = data_reduction_thin_provision_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_clone_saving_ratio_ppm Value to be assigned
    def data_reduction_clone_saving_ratio_ppm=(data_reduction_clone_saving_ratio_ppm)
      if data_reduction_clone_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_clone_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_clone_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_clone_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_clone_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_clone_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_clone_saving_ratio_ppm = data_reduction_clone_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_snapshot_saving_ratio_ppm Value to be assigned
    def data_reduction_snapshot_saving_ratio_ppm=(data_reduction_snapshot_saving_ratio_ppm)
      if data_reduction_snapshot_saving_ratio_ppm.nil?
        fail ArgumentError, 'data_reduction_snapshot_saving_ratio_ppm cannot be nil'
      end

      if data_reduction_snapshot_saving_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_snapshot_saving_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if data_reduction_snapshot_saving_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_snapshot_saving_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @data_reduction_snapshot_saving_ratio_ppm = data_reduction_snapshot_saving_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_zero_write_savings_bytes Value to be assigned
    def data_reduction_zero_write_savings_bytes=(data_reduction_zero_write_savings_bytes)
      if data_reduction_zero_write_savings_bytes.nil?
        fail ArgumentError, 'data_reduction_zero_write_savings_bytes cannot be nil'
      end

      if data_reduction_zero_write_savings_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_zero_write_savings_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_zero_write_savings_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_zero_write_savings_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_zero_write_savings_bytes = data_reduction_zero_write_savings_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_read_io_ratio_ppm Value to be assigned
    def controller_read_io_ratio_ppm=(controller_read_io_ratio_ppm)
      if controller_read_io_ratio_ppm.nil?
        fail ArgumentError, 'controller_read_io_ratio_ppm cannot be nil'
      end

      if controller_read_io_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "controller_read_io_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if controller_read_io_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "controller_read_io_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @controller_read_io_ratio_ppm = controller_read_io_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] controller_write_io_ratio_ppm Value to be assigned
    def controller_write_io_ratio_ppm=(controller_write_io_ratio_ppm)
      if controller_write_io_ratio_ppm.nil?
        fail ArgumentError, 'controller_write_io_ratio_ppm cannot be nil'
      end

      if controller_write_io_ratio_ppm.length > 3000
        fail ArgumentError, 'invalid value for "controller_write_io_ratio_ppm", number of items must be less than or equal to 3000.'
      end

      if controller_write_io_ratio_ppm.length < 0
        fail ArgumentError, 'invalid value for "controller_write_io_ratio_ppm", number of items must be greater than or equal to 0.'
      end

      @controller_write_io_ratio_ppm = controller_write_io_ratio_ppm
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_replication_factor Value to be assigned
    def storage_replication_factor=(storage_replication_factor)
      if storage_replication_factor.nil?
        fail ArgumentError, 'storage_replication_factor cannot be nil'
      end

      if storage_replication_factor.length > 3000
        fail ArgumentError, 'invalid value for "storage_replication_factor", number of items must be less than or equal to 3000.'
      end

      if storage_replication_factor.length < 0
        fail ArgumentError, 'invalid value for "storage_replication_factor", number of items must be greater than or equal to 0.'
      end

      @storage_replication_factor = storage_replication_factor
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_usage_bytes Value to be assigned
    def storage_usage_bytes=(storage_usage_bytes)
      if storage_usage_bytes.nil?
        fail ArgumentError, 'storage_usage_bytes cannot be nil'
      end

      if storage_usage_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_usage_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_usage_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_usage_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_usage_bytes = storage_usage_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_tier_das_sata_usage_bytes Value to be assigned
    def storage_tier_das_sata_usage_bytes=(storage_tier_das_sata_usage_bytes)
      if storage_tier_das_sata_usage_bytes.nil?
        fail ArgumentError, 'storage_tier_das_sata_usage_bytes cannot be nil'
      end

      if storage_tier_das_sata_usage_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_tier_das_sata_usage_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_tier_das_sata_usage_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_tier_das_sata_usage_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_tier_das_sata_usage_bytes = storage_tier_das_sata_usage_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_tier_ssd_usage_bytes Value to be assigned
    def storage_tier_ssd_usage_bytes=(storage_tier_ssd_usage_bytes)
      if storage_tier_ssd_usage_bytes.nil?
        fail ArgumentError, 'storage_tier_ssd_usage_bytes cannot be nil'
      end

      if storage_tier_ssd_usage_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_tier_ssd_usage_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_tier_ssd_usage_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_tier_ssd_usage_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_tier_ssd_usage_bytes = storage_tier_ssd_usage_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_reserved_usage_bytes Value to be assigned
    def storage_reserved_usage_bytes=(storage_reserved_usage_bytes)
      if storage_reserved_usage_bytes.nil?
        fail ArgumentError, 'storage_reserved_usage_bytes cannot be nil'
      end

      if storage_reserved_usage_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_reserved_usage_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_reserved_usage_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_reserved_usage_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_reserved_usage_bytes = storage_reserved_usage_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_reserved_free_bytes Value to be assigned
    def storage_reserved_free_bytes=(storage_reserved_free_bytes)
      if storage_reserved_free_bytes.nil?
        fail ArgumentError, 'storage_reserved_free_bytes cannot be nil'
      end

      if storage_reserved_free_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_reserved_free_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_reserved_free_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_reserved_free_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_reserved_free_bytes = storage_reserved_free_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_unreserved_usage_bytes Value to be assigned
    def storage_unreserved_usage_bytes=(storage_unreserved_usage_bytes)
      if storage_unreserved_usage_bytes.nil?
        fail ArgumentError, 'storage_unreserved_usage_bytes cannot be nil'
      end

      if storage_unreserved_usage_bytes.length > 3000
        fail ArgumentError, 'invalid value for "storage_unreserved_usage_bytes", number of items must be less than or equal to 3000.'
      end

      if storage_unreserved_usage_bytes.length < 0
        fail ArgumentError, 'invalid value for "storage_unreserved_usage_bytes", number of items must be greater than or equal to 0.'
      end

      @storage_unreserved_usage_bytes = storage_unreserved_usage_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_other_containers_reserved_capacity Value to be assigned
    def storage_other_containers_reserved_capacity=(storage_other_containers_reserved_capacity)
      if storage_other_containers_reserved_capacity.nil?
        fail ArgumentError, 'storage_other_containers_reserved_capacity cannot be nil'
      end

      if storage_other_containers_reserved_capacity.length > 3000
        fail ArgumentError, 'invalid value for "storage_other_containers_reserved_capacity", number of items must be less than or equal to 3000.'
      end

      if storage_other_containers_reserved_capacity.length < 0
        fail ArgumentError, 'invalid value for "storage_other_containers_reserved_capacity", number of items must be greater than or equal to 0.'
      end

      @storage_other_containers_reserved_capacity = storage_other_containers_reserved_capacity
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_other_containers_unreserved_capacity Value to be assigned
    def storage_other_containers_unreserved_capacity=(storage_other_containers_unreserved_capacity)
      if storage_other_containers_unreserved_capacity.nil?
        fail ArgumentError, 'storage_other_containers_unreserved_capacity cannot be nil'
      end

      if storage_other_containers_unreserved_capacity.length > 3000
        fail ArgumentError, 'invalid value for "storage_other_containers_unreserved_capacity", number of items must be less than or equal to 3000.'
      end

      if storage_other_containers_unreserved_capacity.length < 0
        fail ArgumentError, 'invalid value for "storage_other_containers_unreserved_capacity", number of items must be greater than or equal to 0.'
      end

      @storage_other_containers_unreserved_capacity = storage_other_containers_unreserved_capacity
    end

    # Custom attribute writer method with validation
    # @param [Object] storage_snapshot_reclaimable Value to be assigned
    def storage_snapshot_reclaimable=(storage_snapshot_reclaimable)
      if storage_snapshot_reclaimable.nil?
        fail ArgumentError, 'storage_snapshot_reclaimable cannot be nil'
      end

      if storage_snapshot_reclaimable.length > 3000
        fail ArgumentError, 'invalid value for "storage_snapshot_reclaimable", number of items must be less than or equal to 3000.'
      end

      if storage_snapshot_reclaimable.length < 0
        fail ArgumentError, 'invalid value for "storage_snapshot_reclaimable", number of items must be greater than or equal to 0.'
      end

      @storage_snapshot_reclaimable = storage_snapshot_reclaimable
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_thin_provision_saved_bytes Value to be assigned
    def data_reduction_thin_provision_saved_bytes=(data_reduction_thin_provision_saved_bytes)
      if data_reduction_thin_provision_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_thin_provision_saved_bytes cannot be nil'
      end

      if data_reduction_thin_provision_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_thin_provision_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_thin_provision_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_thin_provision_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_thin_provision_saved_bytes = data_reduction_thin_provision_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_snapshot_saved_bytes Value to be assigned
    def data_reduction_snapshot_saved_bytes=(data_reduction_snapshot_saved_bytes)
      if data_reduction_snapshot_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_snapshot_saved_bytes cannot be nil'
      end

      if data_reduction_snapshot_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_snapshot_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_snapshot_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_snapshot_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_snapshot_saved_bytes = data_reduction_snapshot_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_clone_saved_bytes Value to be assigned
    def data_reduction_clone_saved_bytes=(data_reduction_clone_saved_bytes)
      if data_reduction_clone_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_clone_saved_bytes cannot be nil'
      end

      if data_reduction_clone_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_clone_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_clone_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_clone_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_clone_saved_bytes = data_reduction_clone_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_erasure_coding_saved_bytes Value to be assigned
    def data_reduction_erasure_coding_saved_bytes=(data_reduction_erasure_coding_saved_bytes)
      if data_reduction_erasure_coding_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_erasure_coding_saved_bytes cannot be nil'
      end

      if data_reduction_erasure_coding_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_erasure_coding_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_erasure_coding_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_erasure_coding_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_erasure_coding_saved_bytes = data_reduction_erasure_coding_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_dedup_saved_bytes Value to be assigned
    def data_reduction_dedup_saved_bytes=(data_reduction_dedup_saved_bytes)
      if data_reduction_dedup_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_dedup_saved_bytes cannot be nil'
      end

      if data_reduction_dedup_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_dedup_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_dedup_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_dedup_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_dedup_saved_bytes = data_reduction_dedup_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_overall_saved_bytes Value to be assigned
    def data_reduction_overall_saved_bytes=(data_reduction_overall_saved_bytes)
      if data_reduction_overall_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_overall_saved_bytes cannot be nil'
      end

      if data_reduction_overall_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_overall_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_overall_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_overall_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_overall_saved_bytes = data_reduction_overall_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] data_reduction_compression_saved_bytes Value to be assigned
    def data_reduction_compression_saved_bytes=(data_reduction_compression_saved_bytes)
      if data_reduction_compression_saved_bytes.nil?
        fail ArgumentError, 'data_reduction_compression_saved_bytes cannot be nil'
      end

      if data_reduction_compression_saved_bytes.length > 3000
        fail ArgumentError, 'invalid value for "data_reduction_compression_saved_bytes", number of items must be less than or equal to 3000.'
      end

      if data_reduction_compression_saved_bytes.length < 0
        fail ArgumentError, 'invalid value for "data_reduction_compression_saved_bytes", number of items must be greater than or equal to 0.'
      end

      @data_reduction_compression_saved_bytes = data_reduction_compression_saved_bytes
    end

    # Custom attribute writer method with validation
    # @param [Object] health Value to be assigned
    def health=(health)
      if health.nil?
        fail ArgumentError, 'health cannot be nil'
      end

      if health.length > 3000
        fail ArgumentError, 'invalid value for "health", number of items must be less than or equal to 3000.'
      end

      if health.length < 0
        fail ArgumentError, 'invalid value for "health", number of items must be greater than or equal to 0.'
      end

      @health = health
    end

    # Custom attribute writer method with validation
    # @param [Object] container_ext_id Value to be assigned
    def container_ext_id=(container_ext_id)
      if container_ext_id.nil?
        fail ArgumentError, 'container_ext_id cannot be nil'
      end

      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if container_ext_id !~ pattern
        fail ArgumentError, "invalid value for \"container_ext_id\", must conform to the pattern #{pattern}."
      end

      @container_ext_id = container_ext_id
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          tenant_id == o.tenant_id &&
          ext_id == o.ext_id &&
          links == o.links &&
          controller_num_iops == o.controller_num_iops &&
          controller_io_bandwidthk_bps == o.controller_io_bandwidthk_bps &&
          controller_avg_io_latencyu_secs == o.controller_avg_io_latencyu_secs &&
          controller_num_read_iops == o.controller_num_read_iops &&
          controller_num_write_iops == o.controller_num_write_iops &&
          controller_read_io_bandwidthk_bps == o.controller_read_io_bandwidthk_bps &&
          controller_write_io_bandwidthk_bps == o.controller_write_io_bandwidthk_bps &&
          controller_avg_read_io_latencyu_secs == o.controller_avg_read_io_latencyu_secs &&
          controller_avg_write_io_latencyu_secs == o.controller_avg_write_io_latencyu_secs &&
          storage_reserved_capacity_bytes == o.storage_reserved_capacity_bytes &&
          storage_actual_physical_usage_bytes == o.storage_actual_physical_usage_bytes &&
          data_reduction_saving_ratio_ppm == o.data_reduction_saving_ratio_ppm &&
          data_reduction_total_saving_ratio_ppm == o.data_reduction_total_saving_ratio_ppm &&
          storage_free_bytes == o.storage_free_bytes &&
          storage_capacity_bytes == o.storage_capacity_bytes &&
          data_reduction_saved_bytes == o.data_reduction_saved_bytes &&
          data_reduction_overall_pre_reduction_bytes == o.data_reduction_overall_pre_reduction_bytes &&
          data_reduction_overall_post_reduction_bytes == o.data_reduction_overall_post_reduction_bytes &&
          data_reduction_compression_saving_ratio_ppm == o.data_reduction_compression_saving_ratio_ppm &&
          data_reduction_dedup_saving_ratio_ppm == o.data_reduction_dedup_saving_ratio_ppm &&
          data_reduction_erasure_coding_saving_ratio_ppm == o.data_reduction_erasure_coding_saving_ratio_ppm &&
          data_reduction_thin_provision_saving_ratio_ppm == o.data_reduction_thin_provision_saving_ratio_ppm &&
          data_reduction_clone_saving_ratio_ppm == o.data_reduction_clone_saving_ratio_ppm &&
          data_reduction_snapshot_saving_ratio_ppm == o.data_reduction_snapshot_saving_ratio_ppm &&
          data_reduction_zero_write_savings_bytes == o.data_reduction_zero_write_savings_bytes &&
          controller_read_io_ratio_ppm == o.controller_read_io_ratio_ppm &&
          controller_write_io_ratio_ppm == o.controller_write_io_ratio_ppm &&
          storage_replication_factor == o.storage_replication_factor &&
          storage_usage_bytes == o.storage_usage_bytes &&
          storage_tier_das_sata_usage_bytes == o.storage_tier_das_sata_usage_bytes &&
          storage_tier_ssd_usage_bytes == o.storage_tier_ssd_usage_bytes &&
          storage_reserved_usage_bytes == o.storage_reserved_usage_bytes &&
          storage_reserved_free_bytes == o.storage_reserved_free_bytes &&
          storage_unreserved_usage_bytes == o.storage_unreserved_usage_bytes &&
          storage_other_containers_reserved_capacity == o.storage_other_containers_reserved_capacity &&
          storage_other_containers_unreserved_capacity == o.storage_other_containers_unreserved_capacity &&
          storage_snapshot_reclaimable == o.storage_snapshot_reclaimable &&
          data_reduction_thin_provision_saved_bytes == o.data_reduction_thin_provision_saved_bytes &&
          data_reduction_snapshot_saved_bytes == o.data_reduction_snapshot_saved_bytes &&
          data_reduction_clone_saved_bytes == o.data_reduction_clone_saved_bytes &&
          data_reduction_erasure_coding_saved_bytes == o.data_reduction_erasure_coding_saved_bytes &&
          data_reduction_dedup_saved_bytes == o.data_reduction_dedup_saved_bytes &&
          data_reduction_overall_saved_bytes == o.data_reduction_overall_saved_bytes &&
          data_reduction_compression_saved_bytes == o.data_reduction_compression_saved_bytes &&
          health == o.health &&
          container_ext_id == o.container_ext_id
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [tenant_id, ext_id, links, controller_num_iops, controller_io_bandwidthk_bps, controller_avg_io_latencyu_secs, controller_num_read_iops, controller_num_write_iops, controller_read_io_bandwidthk_bps, controller_write_io_bandwidthk_bps, controller_avg_read_io_latencyu_secs, controller_avg_write_io_latencyu_secs, storage_reserved_capacity_bytes, storage_actual_physical_usage_bytes, data_reduction_saving_ratio_ppm, data_reduction_total_saving_ratio_ppm, storage_free_bytes, storage_capacity_bytes, data_reduction_saved_bytes, data_reduction_overall_pre_reduction_bytes, data_reduction_overall_post_reduction_bytes, data_reduction_compression_saving_ratio_ppm, data_reduction_dedup_saving_ratio_ppm, data_reduction_erasure_coding_saving_ratio_ppm, data_reduction_thin_provision_saving_ratio_ppm, data_reduction_clone_saving_ratio_ppm, data_reduction_snapshot_saving_ratio_ppm, data_reduction_zero_write_savings_bytes, controller_read_io_ratio_ppm, controller_write_io_ratio_ppm, storage_replication_factor, storage_usage_bytes, storage_tier_das_sata_usage_bytes, storage_tier_ssd_usage_bytes, storage_reserved_usage_bytes, storage_reserved_free_bytes, storage_unreserved_usage_bytes, storage_other_containers_reserved_capacity, storage_other_containers_unreserved_capacity, storage_snapshot_reclaimable, data_reduction_thin_provision_saved_bytes, data_reduction_snapshot_saved_bytes, data_reduction_clone_saved_bytes, data_reduction_erasure_coding_saved_bytes, data_reduction_dedup_saved_bytes, data_reduction_overall_saved_bytes, data_reduction_compression_saved_bytes, health, container_ext_id].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = NutanixClustermgmt.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
