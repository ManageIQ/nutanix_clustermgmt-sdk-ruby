=begin
#Nutanix Cluster Management APIs

#Manage Hosts, Clusters and other Infrastructure.

The version of the OpenAPI document: 4.0.2

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'cgi'

module NutanixClustermgmt
  class StorageContainersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a Storage Container
    # Creates a new Storage Container with the specified configuration on the cluster identified by cluster’s external identifier. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param x_cluster_id [String] The external identifier of the remote cluster to forward the request.
    # @param ntnx_request_id [String] A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
    # @param clustermgmt_v40_config_storage_container [ClustermgmtV40ConfigStorageContainer] 
    # @param [Hash] opts the optional parameters
    # @return [CreateStorageContainer202Response]
    def create_storage_container(x_cluster_id, ntnx_request_id, clustermgmt_v40_config_storage_container, opts = {})
      data, _status_code, _headers = create_storage_container_with_http_info(x_cluster_id, ntnx_request_id, clustermgmt_v40_config_storage_container, opts)
      data
    end

    # Create a Storage Container
    # Creates a new Storage Container with the specified configuration on the cluster identified by cluster’s external identifier. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param x_cluster_id [String] The external identifier of the remote cluster to forward the request.
    # @param ntnx_request_id [String] A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
    # @param clustermgmt_v40_config_storage_container [ClustermgmtV40ConfigStorageContainer] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreateStorageContainer202Response, Integer, Hash)>] CreateStorageContainer202Response data, response status code and response headers
    def create_storage_container_with_http_info(x_cluster_id, ntnx_request_id, clustermgmt_v40_config_storage_container, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.create_storage_container ...'
      end
      # verify the required parameter 'x_cluster_id' is set
      if @api_client.config.client_side_validation && x_cluster_id.nil?
        fail ArgumentError, "Missing the required parameter 'x_cluster_id' when calling StorageContainersApi.create_storage_container"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && x_cluster_id !~ pattern
        fail ArgumentError, "invalid value for 'x_cluster_id' when calling StorageContainersApi.create_storage_container, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'ntnx_request_id' is set
      if @api_client.config.client_side_validation && ntnx_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'ntnx_request_id' when calling StorageContainersApi.create_storage_container"
      end
      # verify the required parameter 'clustermgmt_v40_config_storage_container' is set
      if @api_client.config.client_side_validation && clustermgmt_v40_config_storage_container.nil?
        fail ArgumentError, "Missing the required parameter 'clustermgmt_v40_config_storage_container' when calling StorageContainersApi.create_storage_container"
      end
      # resource path
      local_var_path = '/clustermgmt/v4.0/config/storage-containers'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'X-Cluster-Id'] = x_cluster_id
      header_params[:'NTNX-Request-Id'] = ntnx_request_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(clustermgmt_v40_config_storage_container)

      # return_type
      return_type = opts[:debug_return_type] || 'CreateStorageContainer202Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.create_storage_container",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#create_storage_container\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a Storage Container
    # Deletes an existing Storage Container identified by external identifier. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param ntnx_request_id [String] A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :ignore_small_files  (default to true)
    # @return [DeleteStorageContainerById202Response]
    def delete_storage_container_by_id(ext_id, ntnx_request_id, opts = {})
      data, _status_code, _headers = delete_storage_container_by_id_with_http_info(ext_id, ntnx_request_id, opts)
      data
    end

    # Delete a Storage Container
    # Deletes an existing Storage Container identified by external identifier. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param ntnx_request_id [String] A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :ignore_small_files  (default to true)
    # @return [Array<(DeleteStorageContainerById202Response, Integer, Hash)>] DeleteStorageContainerById202Response data, response status code and response headers
    def delete_storage_container_by_id_with_http_info(ext_id, ntnx_request_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.delete_storage_container_by_id ...'
      end
      # verify the required parameter 'ext_id' is set
      if @api_client.config.client_side_validation && ext_id.nil?
        fail ArgumentError, "Missing the required parameter 'ext_id' when calling StorageContainersApi.delete_storage_container_by_id"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && ext_id !~ pattern
        fail ArgumentError, "invalid value for 'ext_id' when calling StorageContainersApi.delete_storage_container_by_id, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'ntnx_request_id' is set
      if @api_client.config.client_side_validation && ntnx_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'ntnx_request_id' when calling StorageContainersApi.delete_storage_container_by_id"
      end
      # resource path
      local_var_path = '/clustermgmt/v4.0/config/storage-containers/{extId}'.sub('{' + 'extId' + '}', CGI.escape(ext_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'ignoreSmallFiles'] = opts[:'ignore_small_files'] if !opts[:'ignore_small_files'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      header_params[:'NTNX-Request-Id'] = ntnx_request_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'DeleteStorageContainerById202Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.delete_storage_container_by_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#delete_storage_container_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Storage Container configuration
    # Fetches the configuration details of an existing storage container identified by the external identifier. Note: The Storage Containers of PEs with versions prior to AOS 6.5 might have missing attribute data, and the PEs under the self-owned RBAC category might not be visible to non-admin users. 
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param [Hash] opts the optional parameters
    # @return [GetStorageContainerById200Response]
    def get_storage_container_by_id(ext_id, opts = {})
      data, _status_code, _headers = get_storage_container_by_id_with_http_info(ext_id, opts)
      data
    end

    # Get Storage Container configuration
    # Fetches the configuration details of an existing storage container identified by the external identifier. Note: The Storage Containers of PEs with versions prior to AOS 6.5 might have missing attribute data, and the PEs under the self-owned RBAC category might not be visible to non-admin users. 
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetStorageContainerById200Response, Integer, Hash)>] GetStorageContainerById200Response data, response status code and response headers
    def get_storage_container_by_id_with_http_info(ext_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.get_storage_container_by_id ...'
      end
      # verify the required parameter 'ext_id' is set
      if @api_client.config.client_side_validation && ext_id.nil?
        fail ArgumentError, "Missing the required parameter 'ext_id' when calling StorageContainersApi.get_storage_container_by_id"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && ext_id !~ pattern
        fail ArgumentError, "invalid value for 'ext_id' when calling StorageContainersApi.get_storage_container_by_id, must conform to the pattern #{pattern}."
      end

      # resource path
      local_var_path = '/clustermgmt/v4.0/config/storage-containers/{extId}'.sub('{' + 'extId' + '}', CGI.escape(ext_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetStorageContainerById200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.get_storage_container_by_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#get_storage_container_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Stats for a Storage Container
    # Fetches the statistical information for the Storage Container identified by external identifier..
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param start_time [Time] The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
    # @param end_time [Time] The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :sampling_interval The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30. 
    # @option opts [CommonV10StatsDownSamplingOperator] :stat_type 
    # @return [GetStorageContainerStats200Response]
    def get_storage_container_stats(ext_id, start_time, end_time, opts = {})
      data, _status_code, _headers = get_storage_container_stats_with_http_info(ext_id, start_time, end_time, opts)
      data
    end

    # Get Stats for a Storage Container
    # Fetches the statistical information for the Storage Container identified by external identifier..
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param start_time [Time] The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
    # @param end_time [Time] The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :sampling_interval The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30. 
    # @option opts [CommonV10StatsDownSamplingOperator] :stat_type 
    # @return [Array<(GetStorageContainerStats200Response, Integer, Hash)>] GetStorageContainerStats200Response data, response status code and response headers
    def get_storage_container_stats_with_http_info(ext_id, start_time, end_time, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.get_storage_container_stats ...'
      end
      # verify the required parameter 'ext_id' is set
      if @api_client.config.client_side_validation && ext_id.nil?
        fail ArgumentError, "Missing the required parameter 'ext_id' when calling StorageContainersApi.get_storage_container_stats"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && ext_id !~ pattern
        fail ArgumentError, "invalid value for 'ext_id' when calling StorageContainersApi.get_storage_container_stats, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'start_time' is set
      if @api_client.config.client_side_validation && start_time.nil?
        fail ArgumentError, "Missing the required parameter 'start_time' when calling StorageContainersApi.get_storage_container_stats"
      end
      # verify the required parameter 'end_time' is set
      if @api_client.config.client_side_validation && end_time.nil?
        fail ArgumentError, "Missing the required parameter 'end_time' when calling StorageContainersApi.get_storage_container_stats"
      end
      if @api_client.config.client_side_validation && !opts[:'sampling_interval'].nil? && opts[:'sampling_interval'] < 1
        fail ArgumentError, 'invalid value for "opts[:"sampling_interval"]" when calling StorageContainersApi.get_storage_container_stats, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/clustermgmt/v4.0/stats/storage-containers/{extId}'.sub('{' + 'extId' + '}', CGI.escape(ext_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'$startTime'] = start_time
      query_params[:'$endTime'] = end_time
      query_params[:'$samplingInterval'] = opts[:'sampling_interval'] if !opts[:'sampling_interval'].nil?
      query_params[:'$statType'] = opts[:'stat_type'] if !opts[:'stat_type'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetStorageContainerStats200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.get_storage_container_stats",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#get_storage_container_stats\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List datastores of a cluster
    # Lists all the datastores associated with Storage Containers from a cluster.
    # @param cluster_ext_id [String] The cluster from which the datastores needs to be listed.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.  (default to 0)
    # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.  (default to 50)
    # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - containerExtId 
    # @return [ListDataStoresByClusterId200Response]
    def list_data_stores_by_cluster_id(cluster_ext_id, opts = {})
      data, _status_code, _headers = list_data_stores_by_cluster_id_with_http_info(cluster_ext_id, opts)
      data
    end

    # List datastores of a cluster
    # Lists all the datastores associated with Storage Containers from a cluster.
    # @param cluster_ext_id [String] The cluster from which the datastores needs to be listed.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.  (default to 0)
    # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.  (default to 50)
    # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - containerExtId 
    # @return [Array<(ListDataStoresByClusterId200Response, Integer, Hash)>] ListDataStoresByClusterId200Response data, response status code and response headers
    def list_data_stores_by_cluster_id_with_http_info(cluster_ext_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.list_data_stores_by_cluster_id ...'
      end
      # verify the required parameter 'cluster_ext_id' is set
      if @api_client.config.client_side_validation && cluster_ext_id.nil?
        fail ArgumentError, "Missing the required parameter 'cluster_ext_id' when calling StorageContainersApi.list_data_stores_by_cluster_id"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && cluster_ext_id !~ pattern
        fail ArgumentError, "invalid value for 'cluster_ext_id' when calling StorageContainersApi.list_data_stores_by_cluster_id, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'page'].nil? && opts[:'page'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page"]" when calling StorageContainersApi.list_data_stores_by_cluster_id, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling StorageContainersApi.list_data_stores_by_cluster_id, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling StorageContainersApi.list_data_stores_by_cluster_id, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/clustermgmt/v4.0/config/clusters/{clusterExtId}/storage-containers/datastores'.sub('{' + 'clusterExtId' + '}', CGI.escape(cluster_ext_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'$page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'$limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'$filter'] = opts[:'filter'] if !opts[:'filter'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListDataStoresByClusterId200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.list_data_stores_by_cluster_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#list_data_stores_by_cluster_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Storage Containers
    # Lists the Storage Containers available in the cluster.  Note: The Storage Containers of PEs with versions prior to AOS 6.5 might have missing attribute data, and the PEs under the self-owned RBAC category might not be visible to non-admin users. 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.  (default to 0)
    # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.  (default to 50)
    # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - affinityHostExtId - clusterExtId - clusterName - compressionDelaySecs - containerExtId - name - ownerExtId - replicationFactor - storagePoolExtId 
    # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - affinityHostExtId - clusterName - compressionDelaySecs - containerExtId - erasureCode - name - replicationFactor 
    # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - affinityHostExtId - cacheDeduplication - clusterExtId - clusterName - compressionDelaySecs - containerExtId - erasureCode - erasureCodeDelaySecs - extId - hasHigherEcFaultDomainPreference - isCompressionEnabled - isEncrypted - isInlineEcEnabled - isInternal - isMarkedForRemoval - isNfsWhitelistInherited - isSoftwareEncryptionEnabled - links - logicalAdvertisedCapacityBytes - logicalExplicitReservedCapacityBytes - logicalImplicitReservedCapacityBytes - markedForRemoval - maxCapacityBytes - name - nfsWhitelistAddress - onDiskDedup - ownerExtId - replicationFactor - storagePoolExtId - tenantId 
    # @return [ListStorageContainers200Response]
    def list_storage_containers(opts = {})
      data, _status_code, _headers = list_storage_containers_with_http_info(opts)
      data
    end

    # List Storage Containers
    # Lists the Storage Containers available in the cluster.  Note: The Storage Containers of PEs with versions prior to AOS 6.5 might have missing attribute data, and the PEs under the self-owned RBAC category might not be visible to non-admin users. 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.  (default to 0)
    # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.  (default to 50)
    # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - affinityHostExtId - clusterExtId - clusterName - compressionDelaySecs - containerExtId - name - ownerExtId - replicationFactor - storagePoolExtId 
    # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - affinityHostExtId - clusterName - compressionDelaySecs - containerExtId - erasureCode - name - replicationFactor 
    # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - affinityHostExtId - cacheDeduplication - clusterExtId - clusterName - compressionDelaySecs - containerExtId - erasureCode - erasureCodeDelaySecs - extId - hasHigherEcFaultDomainPreference - isCompressionEnabled - isEncrypted - isInlineEcEnabled - isInternal - isMarkedForRemoval - isNfsWhitelistInherited - isSoftwareEncryptionEnabled - links - logicalAdvertisedCapacityBytes - logicalExplicitReservedCapacityBytes - logicalImplicitReservedCapacityBytes - markedForRemoval - maxCapacityBytes - name - nfsWhitelistAddress - onDiskDedup - ownerExtId - replicationFactor - storagePoolExtId - tenantId 
    # @return [Array<(ListStorageContainers200Response, Integer, Hash)>] ListStorageContainers200Response data, response status code and response headers
    def list_storage_containers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.list_storage_containers ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page'].nil? && opts[:'page'] < 0
        fail ArgumentError, 'invalid value for "opts[:"page"]" when calling StorageContainersApi.list_storage_containers, must be greater than or equal to 0.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling StorageContainersApi.list_storage_containers, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling StorageContainersApi.list_storage_containers, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/clustermgmt/v4.0/config/storage-containers'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'$page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'$limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'$filter'] = opts[:'filter'] if !opts[:'filter'].nil?
      query_params[:'$orderby'] = opts[:'orderby'] if !opts[:'orderby'].nil?
      query_params[:'$select'] = opts[:'select'] if !opts[:'select'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListStorageContainers200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.list_storage_containers",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#list_storage_containers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Mount Storage Container on ESX datastore
    # Mounts the Storage Container identified by external identifier on an ESX datastore. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param clustermgmt_v40_config_data_store_mount [ClustermgmtV40ConfigDataStoreMount] 
    # @param [Hash] opts the optional parameters
    # @return [MountStorageContainer202Response]
    def mount_storage_container(ext_id, clustermgmt_v40_config_data_store_mount, opts = {})
      data, _status_code, _headers = mount_storage_container_with_http_info(ext_id, clustermgmt_v40_config_data_store_mount, opts)
      data
    end

    # Mount Storage Container on ESX datastore
    # Mounts the Storage Container identified by external identifier on an ESX datastore. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param clustermgmt_v40_config_data_store_mount [ClustermgmtV40ConfigDataStoreMount] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(MountStorageContainer202Response, Integer, Hash)>] MountStorageContainer202Response data, response status code and response headers
    def mount_storage_container_with_http_info(ext_id, clustermgmt_v40_config_data_store_mount, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.mount_storage_container ...'
      end
      # verify the required parameter 'ext_id' is set
      if @api_client.config.client_side_validation && ext_id.nil?
        fail ArgumentError, "Missing the required parameter 'ext_id' when calling StorageContainersApi.mount_storage_container"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && ext_id !~ pattern
        fail ArgumentError, "invalid value for 'ext_id' when calling StorageContainersApi.mount_storage_container, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'clustermgmt_v40_config_data_store_mount' is set
      if @api_client.config.client_side_validation && clustermgmt_v40_config_data_store_mount.nil?
        fail ArgumentError, "Missing the required parameter 'clustermgmt_v40_config_data_store_mount' when calling StorageContainersApi.mount_storage_container"
      end
      # resource path
      local_var_path = '/clustermgmt/v4.0/config/storage-containers/{extId}/$actions/mount'.sub('{' + 'extId' + '}', CGI.escape(ext_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(clustermgmt_v40_config_data_store_mount)

      # return_type
      return_type = opts[:debug_return_type] || 'MountStorageContainer202Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.mount_storage_container",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#mount_storage_container\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Unmount Storage Container from ESX datastore
    # Unmounts the Storage Container identified by external identifier from the ESX datastore. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param clustermgmt_v40_config_data_store_unmount [ClustermgmtV40ConfigDataStoreUnmount] 
    # @param [Hash] opts the optional parameters
    # @return [UnmountStorageContainer202Response]
    def unmount_storage_container(ext_id, clustermgmt_v40_config_data_store_unmount, opts = {})
      data, _status_code, _headers = unmount_storage_container_with_http_info(ext_id, clustermgmt_v40_config_data_store_unmount, opts)
      data
    end

    # Unmount Storage Container from ESX datastore
    # Unmounts the Storage Container identified by external identifier from the ESX datastore. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param clustermgmt_v40_config_data_store_unmount [ClustermgmtV40ConfigDataStoreUnmount] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(UnmountStorageContainer202Response, Integer, Hash)>] UnmountStorageContainer202Response data, response status code and response headers
    def unmount_storage_container_with_http_info(ext_id, clustermgmt_v40_config_data_store_unmount, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.unmount_storage_container ...'
      end
      # verify the required parameter 'ext_id' is set
      if @api_client.config.client_side_validation && ext_id.nil?
        fail ArgumentError, "Missing the required parameter 'ext_id' when calling StorageContainersApi.unmount_storage_container"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && ext_id !~ pattern
        fail ArgumentError, "invalid value for 'ext_id' when calling StorageContainersApi.unmount_storage_container, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'clustermgmt_v40_config_data_store_unmount' is set
      if @api_client.config.client_side_validation && clustermgmt_v40_config_data_store_unmount.nil?
        fail ArgumentError, "Missing the required parameter 'clustermgmt_v40_config_data_store_unmount' when calling StorageContainersApi.unmount_storage_container"
      end
      # resource path
      local_var_path = '/clustermgmt/v4.0/config/storage-containers/{extId}/$actions/unmount'.sub('{' + 'extId' + '}', CGI.escape(ext_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(clustermgmt_v40_config_data_store_unmount)

      # return_type
      return_type = opts[:debug_return_type] || 'UnmountStorageContainer202Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.unmount_storage_container",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#unmount_storage_container\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a Storage Container
    # Updates the configuration of an existing Storage Container identified by external identifier. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param if_match [String] The If-Match request header makes the request conditional. When not provided, the server will respond with  an HTTP-428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow the successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP-412 (Precondition Failed) response will be returned.
    # @param ntnx_request_id [String] A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
    # @param clustermgmt_v40_config_storage_container [ClustermgmtV40ConfigStorageContainer] 
    # @param [Hash] opts the optional parameters
    # @return [UpdateStorageContainerById202Response]
    def update_storage_container_by_id(ext_id, if_match, ntnx_request_id, clustermgmt_v40_config_storage_container, opts = {})
      data, _status_code, _headers = update_storage_container_by_id_with_http_info(ext_id, if_match, ntnx_request_id, clustermgmt_v40_config_storage_container, opts)
      data
    end

    # Update a Storage Container
    # Updates the configuration of an existing Storage Container identified by external identifier. The location header received in the API response contains the URL of the task object, which can be used to further track the status of the request.
    # @param ext_id [String] The external identifier of the Storage Container.
    # @param if_match [String] The If-Match request header makes the request conditional. When not provided, the server will respond with  an HTTP-428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow the successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP-412 (Precondition Failed) response will be returned.
    # @param ntnx_request_id [String] A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request. 
    # @param clustermgmt_v40_config_storage_container [ClustermgmtV40ConfigStorageContainer] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(UpdateStorageContainerById202Response, Integer, Hash)>] UpdateStorageContainerById202Response data, response status code and response headers
    def update_storage_container_by_id_with_http_info(ext_id, if_match, ntnx_request_id, clustermgmt_v40_config_storage_container, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StorageContainersApi.update_storage_container_by_id ...'
      end
      # verify the required parameter 'ext_id' is set
      if @api_client.config.client_side_validation && ext_id.nil?
        fail ArgumentError, "Missing the required parameter 'ext_id' when calling StorageContainersApi.update_storage_container_by_id"
      end
      pattern = Regexp.new(/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/)
      if @api_client.config.client_side_validation && ext_id !~ pattern
        fail ArgumentError, "invalid value for 'ext_id' when calling StorageContainersApi.update_storage_container_by_id, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'if_match' is set
      if @api_client.config.client_side_validation && if_match.nil?
        fail ArgumentError, "Missing the required parameter 'if_match' when calling StorageContainersApi.update_storage_container_by_id"
      end
      # verify the required parameter 'ntnx_request_id' is set
      if @api_client.config.client_side_validation && ntnx_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'ntnx_request_id' when calling StorageContainersApi.update_storage_container_by_id"
      end
      # verify the required parameter 'clustermgmt_v40_config_storage_container' is set
      if @api_client.config.client_side_validation && clustermgmt_v40_config_storage_container.nil?
        fail ArgumentError, "Missing the required parameter 'clustermgmt_v40_config_storage_container' when calling StorageContainersApi.update_storage_container_by_id"
      end
      # resource path
      local_var_path = '/clustermgmt/v4.0/config/storage-containers/{extId}'.sub('{' + 'extId' + '}', CGI.escape(ext_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'If-Match'] = if_match
      header_params[:'NTNX-Request-Id'] = ntnx_request_id

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(clustermgmt_v40_config_storage_container)

      # return_type
      return_type = opts[:debug_return_type] || 'UpdateStorageContainerById202Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKeyAuthScheme', 'basicAuthScheme']

      new_options = opts.merge(
        :operation => :"StorageContainersApi.update_storage_container_by_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StorageContainersApi#update_storage_container_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
