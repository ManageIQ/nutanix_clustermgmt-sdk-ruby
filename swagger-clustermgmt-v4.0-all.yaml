openapi: 3.0.1
info:
  title: Nutanix Cluster Management APIs
  description: "Manage Hosts, Clusters and other Infrastructure."
  version: 4.0.2
  x-logo:
    altText: Clustermgmt Logo
    url: https://developers.nutanix.com/api/v1/namespaces/clustermgmt/images/clustermgmt-logo-img.svg
  x-repo-name: clustermgmt
servers:
- url: "https://{pc-ip}:9440/api"
security:
- basicAuthScheme: []
- apiKeyAuthScheme: []
tags:
- name: Clusters
  description: |
    Represents the Cluster entity. Provides the basic infrastructure for compute, storage and networking.  This includes the operations that can be carried out on cluster and its sub-resources - host (node), rsyslog servers etc and actions that can be performed on cluster - add a node, remove a node, attach categories.
- name: ClusterProfiles
  description: "Represents the Cluster Profile entity. This includes cluster settings\
    \ or configurations which will be applied to clusters. \n"
  x-displayName: Cluster Profiles
- name: PcieDevices
  description: Represents a serial expansion bus standard (Peripheral Component Interconnect
    Express) for connecting a VM to one or more peripheral devices.
  x-displayName: Pcie Devices
- name: Disks
  description: Represents the physical Disks on a Cluster. A disk is a storage device
    that stores and retrieves data.
  x-displayName: Disks
- name: StorageContainers
  description: A Storage Container is a subset of available storage within a Storage
    Pool for users to configure any storage-efficiency related features.
  x-displayName: Storage Containers
- name: VcenterExtensions
  description: Represents vCenter server extensions to manage Nutanix clusters.
  x-displayName: Vcenter Extensions
paths:
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info:
    get:
      tags:
      - Bmc
      summary: Get BMC details
      description: Get BMC details of a host
      operationId: getBmcInfo
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 960de8e0-115b-4bb8-b263-e69bd907a6f4
      - name: extId
        in: path
        description: Host UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 9241b35f-1ba4-4f8a-b6a1-9ee30de274c6
      responses:
        "200":
          description: Get BMC details response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.BmcInfo'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Get BMC Info
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
        - User Admin
        - Prism Viewer
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: Small
        count: 1
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: 2024.3.1
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.hw.java.client.ApiClient;\n\
          import com.nutanix.hw.java.client.api.BmcApi;\nimport com.nutanix.dp1.hw.clustermgmt.v4.config.GetBmcInfoResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    BmcApi bmcApi = new BmcApi(apiClient);\n\n        \n        String\
          \ clusterExtId = \"575BA73B-1AfA-6F6d-82C7-bD4fbdC61cBE\";\n        \n \
          \       String extId = \"bBb0EdFa-e35A-eD1f-00c4-c759C31eDFE8\";\n\n   \
          \     try {\n            GetBmcInfoResponse getBmcInfoResponse = bmcApi.getBmcInfo(clusterExtId,\
          \ extId);\n            System.out.println(getBmcInfoResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, BmcApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let bmcApi = new BmcApi(apiClientInstance);\n\nfunction sample() {\n\n \
          \   \n    let clusterExtId = \"DdB93ddC-1fFF-e5BD-fdD1-B3De1F98eEEa\";\n\
          \    \n    let extId = \"ECAB25ec-CaE6-EEbF-41bE-a8AD587f2A58\";\n\n\n\n\
          \n\n    bmcApi.getBmcInfo(clusterExtId, extId).then(({data, response}) =>\
          \ {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    bmc_api = ntnx_clustermgmt_py_client.BmcApi(api_client=client)\n  \
          \  \n    cluster_ext_id = \"88FaE7AE-adcb-f8ED-DffF-ca69cAEfCbB2\"\n   \
          \ \n    ext_id = \"4C6a7fcE-e783-7D2c-aDba-94bAFdb7BcFC\"\n\n\n    try:\n\
          \        api_response = bmc_api.get_bmc_info(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    BmcApiInstance\
          \ *api.BmcApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    BmcApiInstance = api.NewBmcApi(ApiClientInstance)\n\n    \n    clusterExtId\
          \ := \"1f3F94Cf-DCAD-9dAD-05d8-C64DCD4cFefA\"\n    \n    extId := \"cDeCFa26-aEfA-AEbA-CeAC-fF2ff36DDa4c\"\
          \n\n\n    response, error := BmcApiInstance.GetBmcInfo(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.BmcInfo)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/cbACfd7c-0D6b-ABD5-c4c4-CEccfc4E3d61/hosts/BAeD1f69-2Ce0-C97f-fbeC-8eD5AEBAfF7E/bmc-info" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/e98Ad4Bb-F89A-F9Dd-de2f-AfFaBeABdf18/hosts/Afd6ee7a-aeBB-eA25-DBf1-aD03C8DAAcbd/bmc-info"
    put:
      tags:
      - Bmc
      summary: Update BMC info summary
      description: Update BMC info
      operationId: updateBmcInfo
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ed880147-2ee6-4e21-82f1-84c87133dff8
      - name: extId
        in: path
        description: Host UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c43707cf-64fe-4164-a3b3-68f89628d7d8
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: b1e2f9c3-c419-40fa-9e25-02c3cd026e07
      requestBody:
        description: Update BMC info body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.BmcInfo'
        required: true
      responses:
        "202":
          description: Update BMC info response
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        operationName: Update BMC Info
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: Small
        count: 1
        timeUnit: seconds
      - type: Large
        count: 5
        timeUnit: seconds
      - type: XLarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: 2024.3.1
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.hw.java.client.ApiClient;\n\
          import com.nutanix.hw.java.client.api.BmcApi;\nimport com.nutanix.dp1.hw.clustermgmt.v4.config.BmcInfo;\n\
          import com.nutanix.dp1.hw.clustermgmt.v4.config.UpdateBmcInfoResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    BmcApi bmcApi = new BmcApi(apiClient);\n\n        BmcInfo bmcInfo =\
          \ new BmcInfo();\n\n        // BmcInfo object initializations here...\n\
          \        \n        String clusterExtId = \"3d6fFbab-dAE3-13dC-be22-AdE3451bAdDC\"\
          ;\n        \n        String extId = \"Fce33FaA-fdce-df0c-42EA-22E1f4eCdc85\"\
          ;\n\n        /*\n        Some Create, Update, and Delete operations generally\
          \ require an If-Match header with a value to be passed in order to protect\
          \ against concurrent updates.\n        The value that needs to be sent in\
          \ the If-Match header needs to be retrieved by performing a Read(Get) operation\
          \ on the same resource.\n        ETags can be retrieved by calling a static\
          \ method of ApiClient as below:\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        HashMap<String, Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        */\n        try {\n            UpdateBmcInfoResponse updateBmcInfoResponse\
          \ = bmcApi.updateBmcInfo(clusterExtId, extId, bmcInfo, opts);\n        \
          \    System.out.println(updateBmcInfoResponse.toString());\n\n        }\
          \ catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, BmcApi, BmcInfo } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let bmcApi = new BmcApi(apiClientInstance);\n\nfunction sample() {\n   \
          \ let bmcInfo = new BmcInfo();\n\n    // BmcInfo object initializations\
          \ here...\n\n    \n    let clusterExtId = \"cf636f03-5D61-93ee-DDAE-5F63cDeCf15C\"\
          ;\n    \n    let extId = \"bA0cF7B3-f3Dc-cAf2-dBEE-ED41bB3cF027\";\n\n\n\
          \    /*\n    Some Create, Update, and Delete operations generally require\
          \ an If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    let etagValue = ApiClient.getEtag(data);\n\
          \    */\n    bmcApi.updateBmcInfo(clusterExtId, extId, bmcInfo, {\"If-Match\"\
          \ : etagValue}).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    bmc_api = ntnx_clustermgmt_py_client.BmcApi(api_client=client)\n  \
          \  bmcInfo = ntnx_clustermgmt_py_client.BmcInfo()\n\n    # BmcInfo object\
          \ initializations here...\n    \n    cluster_ext_id = \"e2dAA0df-c3FE-C7C9-29E8-Ea03e2eeF7CC\"\
          \n    \n    ext_id = \"AA2ca6A8-C01B-dfdF-8341-1AbF15C938BE\"\n\n    \"\"\
          \"\n    Some Create, Update, and Delete operations generally require an\
          \ If-Match header with a value to be passed in order to protect against\
          \ concurrent updates.\n    The value that needs to be sent in the If-Match\
          \ header needs to be retrieved by performing a Read(Get) operation on the\
          \ same resource.\n    ETags can be retrieved by calling a static method\
          \ of ApiClient as below:\n    etag_value = ApiClient.get_etag(get_api_response)\n\
          \    \"\"\"\n\n    try:\n        api_response = bmc_api.update_bmc_info(clusterExtId=cluster_ext_id,\
          \ extId=ext_id, body=bmcInfo, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    BmcApiInstance\
          \ *api.BmcApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    BmcApiInstance = api.NewBmcApi(ApiClientInstance)\n\n    bmcInfo :=\
          \ import1.NewBmcInfo()\n\n    // BmcInfo object initializations here...\n\
          \n    \n    clusterExtId := \"f9697BE0-85eF-3b0a-e24d-ddBAf9Ed0D0a\"\n \
          \   \n    extId := \"9DFBcD31-2a2d-b495-Bd9a-9e4a86b34ccc\"\n\n    /*\n\
          \    Some Create, Update, and Delete operations generally require an If-Match\
          \ header with a value to be passed in order to protect against concurrent\
          \ updates.\n    The value that needs to be sent in the If-Match header needs\
          \ to be retrieved by performing a Read(Get) operation on the same resource.\n\
          \    ETags can be retrieved by calling a static method of ApiClient as below:\n\
          \    etagValue := ApiClientInstance.GetEtag(getResponse)\n    */\n\n   \
          \ response, error := BmcApiInstance.UpdateBmcInfo(&clusterExtId, &extId,\
          \ bmcInfo, args)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/CC3cCe73-4DF3-5CEB-9bAd-ec252DBFecbC/hosts/Fd90eCcA-Dbf3-7E2d-6Fe7-b0A9d5bB00fa/bmc-info" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"credential":{"username":"test-user","password":"string","$objectType":"common.v1.config.BasicAuth"},"status":"$UNKNOWN","$objectType":"clustermgmt.v4.config.BmcInfo"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"credential":{"username":"test-user","password":"string","$objectType":"common.v1.config.BasicAuth"},"status":"$UNKNOWN","$objectType":"clustermgmt.v4.config.BmcInfo"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Ce6Dc4dd-acFc-A1D3-65Bc-1eE7acc2C9C2/hosts/B7CAbDFa-CAA6-ad7e-B2BD-9AA2EC254F60/bmc-info"
  /clustermgmt/v4.0/config/cluster-profiles:
    get:
      tags:
      - ClusterProfiles
      summary: List cluster profiles
      description: "Fetches a list of cluster profile entities. A profile consists\
        \ of different cluster settings like Network Time Protocol(NTP), Domain Name\
        \ System(DNS), and so on."
      operationId: listClusterProfiles
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterCount
          - createTime
          - createdBy
          - driftedClusterCount
          - lastUpdateTime
          - lastUpdatedBy
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - clusterCount
          - createTime
          - createdBy
          - driftedClusterCount
          - lastUpdateTime
          - lastUpdatedBy
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - allowedOverrides
          - clusterCount
          - clusters
          - createTime
          - createdBy
          - description
          - driftedClusterCount
          - extId
          - lastUpdateTime
          - lastUpdatedBy
          - links
          - name
          - nameServerIpList
          - nfsSubnetWhitelist
          - ntpServerIpList
          - pulseStatus
          - rsyslogServerList
          - smtpServer
          - snmpConfig
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested cluster profile entities
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterProfile'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Profile
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Cluster Admin
        - Cluster Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClusterProfilesApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListClusterProfilesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClusterProfilesApi clusterProfilesApi = new ClusterProfilesApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListClusterProfilesApiResponse listClusterProfilesApiResponse\
          \ = clusterProfilesApi.listClusterProfiles(page, limit, null, null, null);\n\
          \            System.out.println(listClusterProfilesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ClusterProfilesApi } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let clusterProfilesApi = new ClusterProfilesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              clusterProfilesApi.listClusterProfiles(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    cluster_profiles_api = ntnx_clustermgmt_py_client.ClusterProfilesApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = cluster_profiles_api.list_cluster_profiles(_page=page, _limit=limit)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClusterProfilesApiInstance\
          \ *api.ClusterProfilesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClusterProfilesApiInstance = api.NewClusterProfilesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := ClusterProfilesApiInstance.ListClusterProfiles(&page_, &limit_, nil,\
          \ nil, nil)\n    if error != nil {\n        fmt.Println(error)\n       \
          \ return\n    }\n    data, _ := response.GetData().([]import1.ClusterProfile)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - ClusterProfiles
      summary: Create a cluster profile
      description: Create cluster profile with the required settings
      operationId: createClusterProfile
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 7247ec3a-98ed-4199-a5d6-4ecffa7e5c23
      requestBody:
        description: The required parameters to create a cluster profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterProfile'
        required: true
      responses:
        "202":
          description: Task ID to monitor the cluster profile creation workflow.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Cluster Profile
        roleList:
        - Prism Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.clu.java.client.ApiClient;
          import com.nutanix.clu.java.client.api.ClusterProfilesApi;
          import com.nutanix.dp1.clu.clustermgmt.v4.config.ClusterProfile;
          import com.nutanix.dp1.clu.clustermgmt.v4.config.CreateClusterProfileApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  ClusterProfilesApi clusterProfilesApi = new ClusterProfilesApi(apiClient);

                  ClusterProfile clusterProfile = new ClusterProfile();

                  // ClusterProfile object initializations here...
                  clusterProfile.setName("Test Cluster Profile");  // required field

                  try {
                      CreateClusterProfileApiResponse createClusterProfileApiResponse = clusterProfilesApi.createClusterProfile(clusterProfile);
                      System.out.println(createClusterProfileApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, ClusterProfilesApi, ClusterProfile } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let clusterProfilesApi = new ClusterProfilesApi(apiClientInstance);

          function sample() {
              let clusterProfile = new ClusterProfile();

              // ClusterProfile object initializations here...
              clusterProfile.setName("Test Cluster Profile");  // required field






              clusterProfilesApi.createClusterProfile(clusterProfile).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_clustermgmt_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_clustermgmt_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)
              cluster_profiles_api = ntnx_clustermgmt_py_client.ClusterProfilesApi(api_client=client)
              clusterProfile = ntnx_clustermgmt_py_client.ClusterProfile()

              # ClusterProfile object initializations here...
              clusterProfile.name = "Test Cluster Profile"  # required field


              try:
                  api_response = cluster_profiles_api.create_cluster_profile(body=clusterProfile)
                  print(api_response)
              except ntnx_clustermgmt_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config"
              import2 "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              ClusterProfilesApiInstance *api.ClusterProfilesApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              ClusterProfilesApiInstance = api.NewClusterProfilesApi(ApiClientInstance)

              clusterProfile := import1.NewClusterProfile()

              // ClusterProfile object initializations here...



              response, error := ClusterProfilesApiInstance.CreateClusterProfile(clusterProfile)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestClusterProfile","description":"TestClusterProfileDescription","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","clusterCount":0,"driftedClusterCount":0,"clusters":[{"extId":"string","isCompliant":true,"lastSyncedTime":"2015-07-20T15:49:04-07:00","configDrifts":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.ManagedCluster"}],"allowedOverrides":["$UNKNOWN"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"nfsSubnetWhitelist":["10.110.106.45/255.255.255.255"],"snmpConfig":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isEnabled":true,"users":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"}],"transports":[{"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"}],"traps":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"}],"$objectType":"clustermgmt.v4.config.SnmpConfig"},"rsyslogServerList":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"}],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"$objectType":"clustermgmt.v4.config.ClusterProfile"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestClusterProfile","description":"TestClusterProfileDescription","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","clusterCount":0,"driftedClusterCount":0,"clusters":[{"extId":"string","isCompliant":true,"lastSyncedTime":"2015-07-20T15:49:04-07:00","configDrifts":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.ManagedCluster"}],"allowedOverrides":["$UNKNOWN"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"nfsSubnetWhitelist":["10.110.106.45/255.255.255.255"],"snmpConfig":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isEnabled":true,"users":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"}],"transports":[{"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"}],"traps":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"}],"$objectType":"clustermgmt.v4.config.SnmpConfig"},"rsyslogServerList":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"}],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"$objectType":"clustermgmt.v4.config.ClusterProfile"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles"
    x-supported-versions:
    - product: PC
      version: "2024.3"
  /clustermgmt/v4.0/config/cluster-profiles/{extId}:
    get:
      tags:
      - ClusterProfiles
      summary: Get cluster profile
      description: "Get cluster profile. Profile consist of different cluster settings\
        \ like NTP, DNS etc."
      operationId: getClusterProfileById
      parameters:
      - name: extId
        in: path
        description: Cluster Profile UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1498b3aa-af7a-4093-af5b-a661d8a509e1
      responses:
        "200":
          description: Cluster Profile entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterProfile'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Profile
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - Cluster Admin
        - Cluster Viewer
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClusterProfilesApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetClusterProfileApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClusterProfilesApi clusterProfilesApi = new ClusterProfilesApi(apiClient);\n\
          \n        \n        String extId = \"E8BeA6c2-A12F-BD66-D5F3-6afEE4c34bB0\"\
          ;\n\n        try {\n            GetClusterProfileApiResponse getClusterProfileApiResponse\
          \ = clusterProfilesApi.getClusterProfileById(extId);\n            System.out.println(getClusterProfileApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClusterProfilesApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clusterProfilesApi = new ClusterProfilesApi(apiClientInstance);\n\n\
          function sample() {\n\n    \n    let extId = \"C5bc1A3C-F99F-ebF0-aaDd-BCBc2dbF9f16\"\
          ;\n\n\n\n\n\n    clusterProfilesApi.getClusterProfileById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    cluster_profiles_api = ntnx_clustermgmt_py_client.ClusterProfilesApi(api_client=client)\n\
          \    \n    ext_id = \"D2FdAEdC-E870-eE3a-Aeee-DBc4f01aaedD\"\n\n\n    try:\n\
          \        api_response = cluster_profiles_api.get_cluster_profile_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClusterProfilesApiInstance\
          \ *api.ClusterProfilesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClusterProfilesApiInstance = api.NewClusterProfilesApi(ApiClientInstance)\n\
          \n    \n    extId := \"F6BcAa6e-DB7f-daEd-FFbc-C7bfBdFA4C9f\"\n\n\n    response,\
          \ error := ClusterProfilesApiInstance.GetClusterProfileById(&extId)\n  \
          \  if error != nil {\n        fmt.Println(error)\n        return\n    }\n\
          \    data, _ := response.GetData().(import1.ClusterProfile)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/840AF8Bf-Fbce-75Ef-deb6-067DcB8dFdcb" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/aDE8916a-CfFD-E5d8-1add-9f6fAC6a65D5"
    put:
      tags:
      - ClusterProfiles
      summary: Update cluster profile
      description: "Update cluster profile. Profile consist of different cluster settings\
        \ like NTP, DNS etc."
      operationId: updateClusterProfileById
      parameters:
      - name: extId
        in: path
        description: Cluster Profile UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1ab23d6e-2494-4de1-8a1e-b678d020f470
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: cad27ace-33d9-4b3b-aee2-0e366d8f9dd6
      - name: $dryrun
        in: query
        description: |
          A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          description: |
            A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
          example: false
      requestBody:
        description: The required parameters to update a profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterProfile'
        required: true
      responses:
        "202":
          description: Task ID to monitor the cluster profile update.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Cluster Profile
        roleList:
        - Prism Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClusterProfilesApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ClusterProfile;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.GetClusterProfileApiResponse;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UpdateClusterProfileApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClusterProfilesApi clusterProfilesApi = new ClusterProfilesApi(apiClient);\n\
          \n        ClusterProfile clusterProfile = new ClusterProfile();\n\n    \
          \    // ClusterProfile object initializations here...\n        clusterProfile.setName(\"\
          Test Cluster Profile\");  // required field\n        \n        String extId\
          \ = \"Ce48ffA8-FD2b-de41-ce41-d030A7E60aab\";\n        \n        boolean\
          \ dryrun = true;\n\n        // perform GET call\n        GetClusterProfileApiResponse\
          \ getResponse = null;\n        try {\n            getResponse = clusterProfilesApi.getClusterProfileById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateClusterProfileApiResponse updateClusterProfileApiResponse\
          \ = clusterProfilesApi.updateClusterProfileById(extId, dryrun, clusterProfile,\
          \ opts);\n            System.out.println(updateClusterProfileApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClusterProfilesApi, ClusterProfile, GetClusterProfileApiResponse\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clusterProfilesApi = new ClusterProfilesApi(apiClientInstance);\n\n\
          function sample() {\n    let clusterProfile = new ClusterProfile();\n\n\
          \    // ClusterProfile object initializations here...\n    clusterProfile.setName(\"\
          Test Cluster Profile\");  // required field\n\n    \n    let extId = \"\
          DaaF5ec8-CAdB-CD0E-06Ab-9fdE2edbA54e\";\n\n    // Construct Optional Parameters\n\
          \    var opts = {};\n    opts[\"$dryrun\"] = true;\n\n    // Perform Get\
          \ call\n    clusterProfilesApi.getClusterProfileById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        clusterProfilesApi.updateClusterProfileById(extId,\
          \ clusterProfile, opts, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    cluster_profiles_api = ntnx_clustermgmt_py_client.ClusterProfilesApi(api_client=client)\n\
          \    clusterProfile = ntnx_clustermgmt_py_client.ClusterProfile()\n\n  \
          \  # ClusterProfile object initializations here...\n    clusterProfile.name\
          \ = \"Test Cluster Profile\"  # required field\n    \n    ext_id = \"BeaE6FaA-8A54-FB08-4DCD-aE6EeEd60AA6\"\
          \n    \n    dryrun = True\n\n    try:\n        api_response = cluster_profiles_api.get_cluster_profile_by_id(extId=ext_id)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_clustermgmt_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = cluster_profiles_api.update_cluster_profile_by_id(extId=ext_id,\
          \ _dryrun=dryrun, body=clusterProfile, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClusterProfilesApiInstance\
          \ *api.ClusterProfilesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClusterProfilesApiInstance = api.NewClusterProfilesApi(ApiClientInstance)\n\
          \n    clusterProfile := import1.NewClusterProfile()\n\n    // ClusterProfile\
          \ object initializations here...\n\n    \n    extId := \"36a9eDFf-daba-c8cC-1adE-A2A70D7acA9d\"\
          \n    \n    dryrun_ := true\n\n    getResponse, err := ClusterProfilesApiInstance.GetClusterProfileById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ClusterProfilesApiInstance.UpdateClusterProfileById(&extId,\
          \ &dryrun_, clusterProfile, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/e558bAB2-a5d7-305c-f4ea-Bbb5e6e1A6dD?$dryrun=true" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestClusterProfile","description":"TestClusterProfileDescription","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","clusterCount":0,"driftedClusterCount":0,"clusters":[{"extId":"string","isCompliant":true,"lastSyncedTime":"2015-07-20T15:49:04-07:00","configDrifts":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.ManagedCluster"}],"allowedOverrides":["$UNKNOWN"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"nfsSubnetWhitelist":["10.110.106.45/255.255.255.255"],"snmpConfig":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isEnabled":true,"users":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"}],"transports":[{"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"}],"traps":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"}],"$objectType":"clustermgmt.v4.config.SnmpConfig"},"rsyslogServerList":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"}],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"$objectType":"clustermgmt.v4.config.ClusterProfile"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"TestClusterProfile","description":"TestClusterProfileDescription","createTime":"2015-07-20T15:49:04-07:00","lastUpdateTime":"2015-07-20T15:49:04-07:00","createdBy":"string","lastUpdatedBy":"string","clusterCount":0,"driftedClusterCount":0,"clusters":[{"extId":"string","isCompliant":true,"lastSyncedTime":"2015-07-20T15:49:04-07:00","configDrifts":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.ManagedCluster"}],"allowedOverrides":["$UNKNOWN"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"nfsSubnetWhitelist":["10.110.106.45/255.255.255.255"],"snmpConfig":{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"isEnabled":true,"users":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"}],"transports":[{"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"}],"traps":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"}],"$objectType":"clustermgmt.v4.config.SnmpConfig"},"rsyslogServerList":[{"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"}],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"$objectType":"clustermgmt.v4.config.ClusterProfile"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/Dd736bD2-d33F-B1f6-314E-41AB8BfBE8DE?$dryrun=true"
    delete:
      tags:
      - ClusterProfiles
      summary: Delete cluster profile
      description: "Delete cluster profile. Profile consist of different cluster settings\
        \ like NTP, DNS etc."
      operationId: deleteClusterProfileById
      parameters:
      - name: extId
        in: path
        description: Cluster Profile UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e48d90ae-afa5-484e-8835-896a2ebc9b6a
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 68465539-2f30-4e80-968f-1660c572e62d
      responses:
        "202":
          description: Task ID to monitor the cluster profile deletion.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Cluster Profile
        roleList:
        - Prism Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClusterProfilesApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DeleteClusterProfileApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClusterProfilesApi clusterProfilesApi = new ClusterProfilesApi(apiClient);\n\
          \n        \n        String extId = \"0aC0cB32-C7Ce-2F7d-eE9E-FFC34a3be41b\"\
          ;\n\n        try {\n            DeleteClusterProfileApiResponse deleteClusterProfileApiResponse\
          \ = clusterProfilesApi.deleteClusterProfileById(extId);\n            System.out.println(deleteClusterProfileApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClusterProfilesApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clusterProfilesApi = new ClusterProfilesApi(apiClientInstance);\n\n\
          function sample() {\n\n    \n    let extId = \"3fafF5fF-cbcf-4Bb9-ABB2-bcfA8CBBfDfA\"\
          ;\n\n\n\n\n\n    clusterProfilesApi.deleteClusterProfileById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    cluster_profiles_api = ntnx_clustermgmt_py_client.ClusterProfilesApi(api_client=client)\n\
          \    \n    ext_id = \"AaEF57e2-F2bE-3cDd-f7Dc-DDae8cbd60a5\"\n\n\n    try:\n\
          \        api_response = cluster_profiles_api.delete_cluster_profile_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClusterProfilesApiInstance\
          \ *api.ClusterProfilesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClusterProfilesApiInstance = api.NewClusterProfilesApi(ApiClientInstance)\n\
          \n    \n    extId := \"0BabEDeA-e10b-C0c6-feeb-59Fb3473DA1A\"\n\n\n    response,\
          \ error := ClusterProfilesApiInstance.DeleteClusterProfileById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/0eD32F6e-2C56-1c7e-3e7e-5cCDAbb6Afc0" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/f5Af13CE-B2bf-BF1b-8FFb-34F85f5FDBed"
    x-supported-versions:
    - product: PC
      version: "2024.3"
  /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/disassociate-cluster:
    post:
      tags:
      - ClusterProfiles
      summary: Disassociate cluster from a cluster profile
      description: Disassociate cluster from a profile
      operationId: disassociateClusterFromClusterProfile
      parameters:
      - name: extId
        in: path
        description: Cluster Profile UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 9357146f-a269-47ad-8814-b7f18224bf0e
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: c82852be-5e0d-4f12-956a-8e2e0622901b
      requestBody:
        description: "Payload for disassociating clusters, which will accept a list\
          \ of cluster UUIDs"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterReferenceListSpec'
        required: true
      responses:
        "202":
          description: Task ID to monitor the disassociation of clusters from the
            profile.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/disassociate-cluster\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/disassociate-cluster\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/disassociate-cluster\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Disassociate Cluster Profile Cluster
        roleList:
        - Prism Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClusterProfilesApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ClusterReferenceListSpec;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.DisassociateClusterFromClusterProfileApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClusterProfilesApi clusterProfilesApi = new ClusterProfilesApi(apiClient);\n\
          \n        ClusterReferenceListSpec clusterReferenceListSpec = new ClusterReferenceListSpec();\n\
          \n        // ClusterReferenceListSpec object initializations here...\n \
          \       clusterReferenceListSpec.setClusters(new ArrayList<>());  // required\
          \ field\n        \n        String extId = \"7c47FfDB-F8B9-c2B6-d8bE-898cCF2E0fDD\"\
          ;\n\n        try {\n            DisassociateClusterFromClusterProfileApiResponse\
          \ disassociateClusterFromClusterProfileApiResponse = clusterProfilesApi.disassociateClusterFromClusterProfile(extId,\
          \ clusterReferenceListSpec);\n            System.out.println(disassociateClusterFromClusterProfileApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClusterProfilesApi, ClusterReferenceListSpec\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clusterProfilesApi = new ClusterProfilesApi(apiClientInstance);\n\n\
          function sample() {\n    let clusterReferenceListSpec = new ClusterReferenceListSpec();\n\
          \n    // ClusterReferenceListSpec object initializations here...\n    clusterReferenceListSpec.setClusters([]);\
          \  // required field\n\n    \n    let extId = \"FA7Ff2f0-9DdE-6a52-CeFD-C5840EEBfF0A\"\
          ;\n\n\n\n\n\n    clusterProfilesApi.disassociateClusterFromClusterProfile(extId,\
          \ clusterReferenceListSpec).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    cluster_profiles_api = ntnx_clustermgmt_py_client.ClusterProfilesApi(api_client=client)\n\
          \    clusterReferenceListSpec = ntnx_clustermgmt_py_client.ClusterReferenceListSpec()\n\
          \n    # ClusterReferenceListSpec object initializations here...\n    clusterReferenceListSpec.clusters\
          \ = []  # required field\n    \n    ext_id = \"1cd6BbfA-03dE-85FA-AA0B-Ecf8Aeb04ae1\"\
          \n\n\n    try:\n        api_response = cluster_profiles_api.disassociate_cluster_from_cluster_profile(extId=ext_id,\
          \ body=clusterReferenceListSpec)\n        print(api_response)\n    except\
          \ ntnx_clustermgmt_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClusterProfilesApiInstance\
          \ *api.ClusterProfilesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClusterProfilesApiInstance = api.NewClusterProfilesApi(ApiClientInstance)\n\
          \n    clusterReferenceListSpec := import1.NewClusterReferenceListSpec()\n\
          \n    // ClusterReferenceListSpec object initializations here...\n\n   \
          \ \n    extId := \"f11B06ae-3AAb-cCB9-CB14-a83fecB5AeDF\"\n\n\n    response,\
          \ error := ClusterProfilesApiInstance.DisassociateClusterFromClusterProfile(&extId,\
          \ clusterReferenceListSpec)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/BCE86afe-13Ca-b6c7-eAfb-DcCfBB1BCB1D/$actions/disassociate-cluster" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"clusters":[{"uuid":"string","name":"TestClusterName","$objectType":"clustermgmt.v4.config.ClusterReference"}],"$objectType":"clustermgmt.v4.config.ClusterReferenceListSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"clusters":[{"uuid":"string","name":"TestClusterName","$objectType":"clustermgmt.v4.config.ClusterReference"}],"$objectType":"clustermgmt.v4.config.ClusterReferenceListSpec"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/3cC4FF91-3dEE-DDc6-154A-Be41ADfBdEe1/$actions/disassociate-cluster"
  /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/apply:
    post:
      tags:
      - ClusterProfiles
      summary: Apply cluster profile
      description: Apply profile to all the attached clusters
      operationId: applyClusterProfile
      parameters:
      - name: extId
        in: path
        description: Cluster Profile UUID
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b12f386a-b86f-4dd5-b60e-e1c2b2814812
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 16f09eaf-8279-4bd4-9b21-d466cdbb138c
      - name: $dryrun
        in: query
        description: |
          A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          description: |
            A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
          example: false
      requestBody:
        description: "Payload for applying profile, which will accept a list of cluster\
          \ UUIDs"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterReferenceListSpec'
        required: true
      responses:
        "202":
          description: Task ID to monitor the apply profile operation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/apply\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/apply\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/apply\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Apply Cluster Profile
        roleList:
        - Prism Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClusterProfilesApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ClusterReferenceListSpec;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.ApplyClusterProfileApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClusterProfilesApi clusterProfilesApi = new ClusterProfilesApi(apiClient);\n\
          \n        ClusterReferenceListSpec clusterReferenceListSpec = new ClusterReferenceListSpec();\n\
          \n        // ClusterReferenceListSpec object initializations here...\n \
          \       clusterReferenceListSpec.setClusters(new ArrayList<>());  // required\
          \ field\n        \n        String extId = \"A1ef46AD-FDcc-0FfE-E407-2aeADff9aE5B\"\
          ;\n        \n        boolean dryrun = true;\n\n        try {\n         \
          \   ApplyClusterProfileApiResponse applyClusterProfileApiResponse = clusterProfilesApi.applyClusterProfile(extId,\
          \ dryrun, clusterReferenceListSpec);\n            System.out.println(applyClusterProfileApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClusterProfilesApi, ClusterReferenceListSpec\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clusterProfilesApi = new ClusterProfilesApi(apiClientInstance);\n\n\
          function sample() {\n    let clusterReferenceListSpec = new ClusterReferenceListSpec();\n\
          \n    // ClusterReferenceListSpec object initializations here...\n    clusterReferenceListSpec.setClusters([]);\
          \  // required field\n\n    \n    let extId = \"F53dBE38-dd7D-EE7a-ffE0-0Af393FD3bcc\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $dryrun\"] = true;\n\n\n\n\n    clusterProfilesApi.applyClusterProfile(extId,\
          \ clusterReferenceListSpec, opts).then(({data, response}) => {\n       \
          \ console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    cluster_profiles_api = ntnx_clustermgmt_py_client.ClusterProfilesApi(api_client=client)\n\
          \    clusterReferenceListSpec = ntnx_clustermgmt_py_client.ClusterReferenceListSpec()\n\
          \n    # ClusterReferenceListSpec object initializations here...\n    clusterReferenceListSpec.clusters\
          \ = []  # required field\n    \n    ext_id = \"A724f0Ac-F1D2-cdbB-C4cc-FCDccfdEd6ab\"\
          \n    \n    dryrun = True\n\n\n    try:\n        api_response = cluster_profiles_api.apply_cluster_profile(extId=ext_id,\
          \ _dryrun=dryrun, body=clusterReferenceListSpec)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClusterProfilesApiInstance\
          \ *api.ClusterProfilesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClusterProfilesApiInstance = api.NewClusterProfilesApi(ApiClientInstance)\n\
          \n    clusterReferenceListSpec := import1.NewClusterReferenceListSpec()\n\
          \n    // ClusterReferenceListSpec object initializations here...\n\n   \
          \ \n    extId := \"86DD8Aec-AeDE-E4C3-D5ED-Dee7C08FfECD\"\n    \n    dryrun_\
          \ := true\n\n\n    response, error := ClusterProfilesApiInstance.ApplyClusterProfile(&extId,\
          \ &dryrun_, clusterReferenceListSpec)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/b1cbb31b-4B2e-fEEB-E3DA-adED7Fb09f9f/$actions/apply?$dryrun=true" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"clusters":[{"uuid":"string","name":"TestClusterName","$objectType":"clustermgmt.v4.config.ClusterReference"}],"$objectType":"clustermgmt.v4.config.ClusterReferenceListSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"clusters":[{"uuid":"string","name":"TestClusterName","$objectType":"clustermgmt.v4.config.ClusterReference"}],"$objectType":"clustermgmt.v4.config.ClusterReferenceListSpec"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/cluster-profiles/3bCF8cf3-5dEe-9c52-42A6-e8CA87BDDeEC/$actions/apply?$dryrun=true"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/associate-categories:
    post:
      tags:
      - Clusters
      summary: Associate categories to the cluster
      description: "Attach categories to the cluster identified by {clusterExtId}."
      operationId: associateCategoriesToCluster
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 689abe2c-b97c-43f0-9964-747571caa6dc
      requestBody:
        description: The specifications required for updating categories to the entity.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.CategoryEntityReferences'
        required: true
      responses:
        "202":
          description: Associated categories to the cluster.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/associate-categories\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/associate-categories\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/associate-categories\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Associate Cluster Categories
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.CategoryEntityReferences;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.AssociateCategoriesToClusterApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        CategoryEntityReferences\
          \ categoryEntityReferences = new CategoryEntityReferences();\n\n       \
          \ // CategoryEntityReferences object initializations here...\n        categoryEntityReferences.setCategories(new\
          \ ArrayList<>());  // required field\n        \n        String clusterExtId\
          \ = \"feC0EaDB-7d3f-Cfab-1Cfc-BdFF5848FBe6\";\n\n        try {\n       \
          \     AssociateCategoriesToClusterApiResponse associateCategoriesToClusterApiResponse\
          \ = clustersApi.associateCategoriesToCluster(clusterExtId, categoryEntityReferences);\n\
          \            System.out.println(associateCategoriesToClusterApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, CategoryEntityReferences } from\
          \ \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let categoryEntityReferences = new CategoryEntityReferences();\n\
          \n    // CategoryEntityReferences object initializations here...\n    categoryEntityReferences.setCategories([]);\
          \  // required field\n\n    \n    let clusterExtId = \"1CaB57bC-eDEC-b2BA-79C6-FFCC36Ce4175\"\
          ;\n\n\n\n\n\n    clustersApi.associateCategoriesToCluster(clusterExtId,\
          \ categoryEntityReferences).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    categoryEntityReferences = ntnx_clustermgmt_py_client.CategoryEntityReferences()\n\
          \n    # CategoryEntityReferences object initializations here...\n    categoryEntityReferences.categories\
          \ = []  # required field\n    \n    cluster_ext_id = \"dACED261-0fbb-CfAB-b2Fb-fBE5D5f02cdE\"\
          \n\n\n    try:\n        api_response = clusters_api.associate_categories_to_cluster(clusterExtId=cluster_ext_id,\
          \ body=categoryEntityReferences)\n        print(api_response)\n    except\
          \ ntnx_clustermgmt_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ categoryEntityReferences := import1.NewCategoryEntityReferences()\n\n\
          \    // CategoryEntityReferences object initializations here...\n\n    \n\
          \    clusterExtId := \"7df1dfd9-CFFC-C8A4-5f8d-Fd1fC9a35bca\"\n\n\n    response,\
          \ error := ClustersApiInstance.AssociateCategoriesToCluster(&clusterExtId,\
          \ categoryEntityReferences)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/A2CC8DfA-Cc4F-FB2F-4CbF-ccDB8cCEc5cA/$actions/associate-categories" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":["string"],"$objectType":"clustermgmt.v4.config.CategoryEntityReferences"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":["string"],"$objectType":"clustermgmt.v4.config.CategoryEntityReferences"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/FeA3Dbb8-5B10-eBAb-99E5-d8dC81EA0FdE/$actions/associate-categories"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/disassociate-categories:
    post:
      tags:
      - Clusters
      summary: Disassociate categories from the cluster
      description: "Detach categories from the cluster identified by {clusterExtId}."
      operationId: disassociateCategoriesFromCluster
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 6a82edee-808e-4be2-b713-6d2213c045bb
      requestBody:
        description: The specifications required for updating categories to the entity.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.CategoryEntityReferences'
        required: true
      responses:
        "202":
          description: Disassociated categories from the cluster.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/disassociate-categories\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/disassociate-categories\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/disassociate-categories\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Disassociate Cluster Categories
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.CategoryEntityReferences;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.DisassociateCategoriesFromClusterApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        CategoryEntityReferences\
          \ categoryEntityReferences = new CategoryEntityReferences();\n\n       \
          \ // CategoryEntityReferences object initializations here...\n        categoryEntityReferences.setCategories(new\
          \ ArrayList<>());  // required field\n        \n        String clusterExtId\
          \ = \"29ccacfa-3aBB-DBd6-4561-bDbaff3d8bF8\";\n\n        try {\n       \
          \     DisassociateCategoriesFromClusterApiResponse disassociateCategoriesFromClusterApiResponse\
          \ = clustersApi.disassociateCategoriesFromCluster(clusterExtId, categoryEntityReferences);\n\
          \            System.out.println(disassociateCategoriesFromClusterApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, CategoryEntityReferences } from\
          \ \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let categoryEntityReferences = new CategoryEntityReferences();\n\
          \n    // CategoryEntityReferences object initializations here...\n    categoryEntityReferences.setCategories([]);\
          \  // required field\n\n    \n    let clusterExtId = \"eb138C5A-d2a0-FBB4-6CEd-A2BB2D08B01e\"\
          ;\n\n\n\n\n\n    clustersApi.disassociateCategoriesFromCluster(clusterExtId,\
          \ categoryEntityReferences).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    categoryEntityReferences = ntnx_clustermgmt_py_client.CategoryEntityReferences()\n\
          \n    # CategoryEntityReferences object initializations here...\n    categoryEntityReferences.categories\
          \ = []  # required field\n    \n    cluster_ext_id = \"deCe6Da1-edE6-f3ee-A4B8-EdE5adB8CE8e\"\
          \n\n\n    try:\n        api_response = clusters_api.disassociate_categories_from_cluster(clusterExtId=cluster_ext_id,\
          \ body=categoryEntityReferences)\n        print(api_response)\n    except\
          \ ntnx_clustermgmt_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ categoryEntityReferences := import1.NewCategoryEntityReferences()\n\n\
          \    // CategoryEntityReferences object initializations here...\n\n    \n\
          \    clusterExtId := \"FfCFFECB-A85D-BBEa-A451-Bf8C0FE211D5\"\n\n\n    response,\
          \ error := ClustersApiInstance.DisassociateCategoriesFromCluster(&clusterExtId,\
          \ categoryEntityReferences)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/7234cA0d-AEbe-AbCb-DA02-0cdAfD1cDdBE/$actions/disassociate-categories" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"categories":["string"],"$objectType":"clustermgmt.v4.config.CategoryEntityReferences"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"categories":["string"],"$objectType":"clustermgmt.v4.config.CategoryEntityReferences"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/BBcffFCb-C3AB-D6b9-fAAe-270AabE4b0fd/$actions/disassociate-categories"
  /clustermgmt/v4.0/config/clusters/{extId}:
    get:
      tags:
      - Clusters
      summary: Get details of a cluster
      description: "Fetches the cluster entity details identified by {extId}."
      operationId: getClusterById
      parameters:
      - name: extId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 678373f4-c346-45bb-b3c6-fce7bec87b2a
      - name: $expand
        in: query
        description: |
          A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported.
          - clusterProfile
          - storageSummary
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Cluster entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.Cluster'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster
        roleList:
        - Developer
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Objects Admin
        - Network Infra Admin
        - VPC Admin
        - Consumer
        - Storage Admin
        - Storage Viewer
        - Files Admin
        - Cluster Admin
        - Cluster Viewer
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
        - Kubernetes Admin
        - Monitoring Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetClusterApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String extId = \"0be8fBcc-97Cf-AE43-bcCa-6EAAE9ABc570\";\n\n  \
          \      try {\n            GetClusterApiResponse getClusterApiResponse =\
          \ clustersApi.getClusterById(extId, null);\n            System.out.println(getClusterApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"3eAf377e-B6B3-EC3d-1ced-c89fcbDaC4Df\";\n\
          \n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $expand\"] = \"string_sample_data\";\n\n\n\n\n    clustersApi.getClusterById(extId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    ext_id = \"9BbCfEDe-c69C-AEEb-aBDD-2daD8EEC8b4B\"\n\n\n    try:\n\
          \        api_response = clusters_api.get_cluster_by_id(extId=ext_id)\n \
          \       print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    extId := \"6Ed15dCb-F9B5-23bb-9dfD-cE2A4eCACBeC\"\n\n\n    response,\
          \ error := ClustersApiInstance.GetClusterById(&extId, nil)\n    if error\
          \ != nil {\n        fmt.Println(error)\n        return\n    }\n    data,\
          \ _ := response.GetData().(import1.Cluster)\n    fmt.Println(data)\n\n}\n\
          \n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/a112B7b5-45Df-1FdB-eAEd-ee7D84FDC36A?$expand=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/d3bEC0aF-feA1-ADDe-Ac50-DFaddC709EDA?$expand=string_sample_data"
    put:
      tags:
      - Clusters
      summary: Update cluster
      description: Update cluster operation.
      operationId: updateClusterById
      parameters:
      - name: extId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a1419a38-333a-4c2c-8309-8b93d7dbc10f
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Cluster resource to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.Cluster'
        required: true
      responses:
        "202":
          description: Cluster resource is updated.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Cluster
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.Cluster;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.GetClusterApiResponse;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UpdateClusterApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        Cluster\
          \ cluster = new Cluster();\n\n        // Cluster object initializations\
          \ here...\n        \n        String extId = \"DbBfbFdc-D8E4-b9D8-fa27-aAA634eCBf69\"\
          ;\n\n        // perform GET call\n        GetClusterApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = clustersApi.getClusterById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateClusterApiResponse updateClusterApiResponse\
          \ = clustersApi.updateClusterById(extId, cluster, opts);\n            System.out.println(updateClusterApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, Cluster, GetClusterApiResponse\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let cluster = new Cluster();\n\n    // Cluster object initializations\
          \ here...\n\n    \n    let extId = \"cEcaB1A3-1B2f-B3f9-CEB9-DBCc4fA0fFEe\"\
          ;\n\n\n    // Perform Get call\n    clustersApi.getClusterById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        clustersApi.updateClusterById(extId,\
          \ cluster, {\"If-Match\" : etagValue}).then(({data, response}) => {\n  \
          \          console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    cluster = ntnx_clustermgmt_py_client.Cluster()\n\n    # Cluster object\
          \ initializations here...\n    \n    ext_id = \"7BF24FE1-2DcA-7Ec2-A12a-EC3AABfdfdFF\"\
          \n\n    try:\n        api_response = clusters_api.get_cluster_by_id(extId=ext_id)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_clustermgmt_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = clusters_api.update_cluster_by_id(extId=ext_id,\
          \ body=cluster, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_clustermgmt_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ cluster := import1.NewCluster()\n\n    // Cluster object initializations\
          \ here...\n\n    \n    extId := \"Dd7bA2EE-9C6C-de1b-Da0B-Ab53AEae8ee3\"\
          \n\n    getResponse, err := ClustersApiInstance.GetClusterById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ClustersApiInstance.UpdateClusterById(&extId, cluster,\
          \ args)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/3BA3dE95-8Be3-cfB3-02a2-BaFF7abda1Dd" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"test_cluster_name","nodes":{"numberOfNodes":0,"nodeList":[{"controllerVmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"nodeUuid":"string","hostIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"$objectType":"clustermgmt.v4.config.NodeListItemReference"}],"$objectType":"clustermgmt.v4.config.NodeReference"},"config":{"incarnationId":0,"buildInfo":{"buildType":"release/opt","version":"6.7","fullVersion":"el7.3-release-fraser-6.5.5.6-stable-e36389d5f36fa8e7cacfdccdc2049f85206c6d7c","commitId":"da8e2cbac08b1d4171e451b7ce008c4f1430d54d","shortCommitId":"f978e71","$objectType":"clustermgmt.v4.config.BuildReference"},"hypervisorTypes":["$UNKNOWN"],"clusterFunction":["$UNKNOWN"],"timezone":"UTC/IST","authorizedPublicKeyList":[{"name":"Testpublickeyname","key":"Testkey","$objectType":"clustermgmt.v4.config.PublicKey"}],"redundancyFactor":0,"clusterSoftwareMap":[{"softwareType":"$UNKNOWN","version":"string","$objectType":"clustermgmt.v4.config.SoftwareMapReference"}],"clusterArch":"$UNKNOWN","faultToleranceState":{"currentMaxFaultTolerance":0,"desiredMaxFaultTolerance":0,"domainAwarenessLevel":"$UNKNOWN","currentClusterFaultTolerance":"$UNKNOWN","desiredClusterFaultTolerance":"$UNKNOWN","redundancyStatus":{"isCassandraPreparationDone":true,"isZookeeperPreparationDone":true,"$objectType":"clustermgmt.v4.config.RedundancyStatusDetails"},"$objectType":"clustermgmt.v4.config.FaultToleranceState"},"isRemoteSupportEnabled":true,"operationMode":"$UNKNOWN","isLts":true,"isPasswordRemoteLoginEnabled":true,"encryptionInTransitStatus":"$UNKNOWN","encryptionOption":["$UNKNOWN"],"encryptionScope":["$UNKNOWN"],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"isAvailable":true,"$objectType":"clustermgmt.v4.config.ClusterConfigReference"},"network":{"externalAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalDataServiceIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalSubnet":"10.49.144.0/255.255.240.0","internalSubnet":"192.138.5.0/255.255.255.128","nfsSubnetWhitelist":["string"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"masqueradingIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"masqueradingPort":0,"managementServer":{"ip":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"type":"$UNKNOWN","isDrsEnabled":true,"isRegistered":true,"isInUse":true,"$objectType":"clustermgmt.v4.config.ManagementServerRef"},"fqdn":"string","keyManagementServerType":"$UNKNOWN","backplane":{"isSegmentationEnabled":true,"vlanTag":0,"subnet":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"netmask":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"clustermgmt.v4.config.BackplaneNetworkParams"},"httpProxyList":[{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"username":"string","password":"string","name":"string","proxyTypes":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.HttpProxyConfig"}],"httpProxyWhiteList":[{"targetType":"$UNKNOWN","target":"string","$objectType":"clustermgmt.v4.config.HttpProxyWhiteListConfig"}],"$objectType":"clustermgmt.v4.config.ClusterNetworkReference"},"upgradeStatus":"$UNKNOWN","vmCount":0,"inefficientVmCount":0,"containerName":"Testcontainer_name","categories":["string"],"clusterProfileExtId":"string","backupEligibilityScore":0,"$objectType":"clustermgmt.v4.config.Cluster"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"test_cluster_name","nodes":{"numberOfNodes":0,"nodeList":[{"controllerVmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"nodeUuid":"string","hostIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"$objectType":"clustermgmt.v4.config.NodeListItemReference"}],"$objectType":"clustermgmt.v4.config.NodeReference"},"config":{"incarnationId":0,"buildInfo":{"buildType":"release/opt","version":"6.7","fullVersion":"el7.3-release-fraser-6.5.5.6-stable-e36389d5f36fa8e7cacfdccdc2049f85206c6d7c","commitId":"da8e2cbac08b1d4171e451b7ce008c4f1430d54d","shortCommitId":"f978e71","$objectType":"clustermgmt.v4.config.BuildReference"},"hypervisorTypes":["$UNKNOWN"],"clusterFunction":["$UNKNOWN"],"timezone":"UTC/IST","authorizedPublicKeyList":[{"name":"Testpublickeyname","key":"Testkey","$objectType":"clustermgmt.v4.config.PublicKey"}],"redundancyFactor":0,"clusterSoftwareMap":[{"softwareType":"$UNKNOWN","version":"string","$objectType":"clustermgmt.v4.config.SoftwareMapReference"}],"clusterArch":"$UNKNOWN","faultToleranceState":{"currentMaxFaultTolerance":0,"desiredMaxFaultTolerance":0,"domainAwarenessLevel":"$UNKNOWN","currentClusterFaultTolerance":"$UNKNOWN","desiredClusterFaultTolerance":"$UNKNOWN","redundancyStatus":{"isCassandraPreparationDone":true,"isZookeeperPreparationDone":true,"$objectType":"clustermgmt.v4.config.RedundancyStatusDetails"},"$objectType":"clustermgmt.v4.config.FaultToleranceState"},"isRemoteSupportEnabled":true,"operationMode":"$UNKNOWN","isLts":true,"isPasswordRemoteLoginEnabled":true,"encryptionInTransitStatus":"$UNKNOWN","encryptionOption":["$UNKNOWN"],"encryptionScope":["$UNKNOWN"],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"isAvailable":true,"$objectType":"clustermgmt.v4.config.ClusterConfigReference"},"network":{"externalAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalDataServiceIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalSubnet":"10.49.144.0/255.255.240.0","internalSubnet":"192.138.5.0/255.255.255.128","nfsSubnetWhitelist":["string"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"masqueradingIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"masqueradingPort":0,"managementServer":{"ip":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"type":"$UNKNOWN","isDrsEnabled":true,"isRegistered":true,"isInUse":true,"$objectType":"clustermgmt.v4.config.ManagementServerRef"},"fqdn":"string","keyManagementServerType":"$UNKNOWN","backplane":{"isSegmentationEnabled":true,"vlanTag":0,"subnet":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"netmask":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"clustermgmt.v4.config.BackplaneNetworkParams"},"httpProxyList":[{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"username":"string","password":"string","name":"string","proxyTypes":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.HttpProxyConfig"}],"httpProxyWhiteList":[{"targetType":"$UNKNOWN","target":"string","$objectType":"clustermgmt.v4.config.HttpProxyWhiteListConfig"}],"$objectType":"clustermgmt.v4.config.ClusterNetworkReference"},"upgradeStatus":"$UNKNOWN","vmCount":0,"inefficientVmCount":0,"containerName":"Testcontainer_name","categories":["string"],"clusterProfileExtId":"string","backupEligibilityScore":0,"$objectType":"clustermgmt.v4.config.Cluster"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/ddeceAdE-29C4-5Aef-5BcD-fb7FDda3eAba"
    delete:
      tags:
      - Clusters
      summary: Delete a cluster
      description: "Deletes the cluster identified by {extId}."
      operationId: deleteClusterById
      parameters:
      - name: extId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 5058238a-6223-4df0-ace0-b27d92d36fdd
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 1185e73b-53a5-456a-b654-02277ed156dd
      - name: $dryrun
        in: query
        description: |
          A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          description: |
            A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
          example: false
      responses:
        "202":
          description: Cluster deleted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Destroy Cluster
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.1"
      - product: PE
        version: "6.8"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DeleteClusterApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String extId = \"FdDf8BD9-5bBF-aCbe-cdaD-aCbEfA2cDff4\";\n    \
          \    \n        boolean dryrun = true;\n\n        try {\n            DeleteClusterApiResponse\
          \ deleteClusterApiResponse = clustersApi.deleteClusterById(extId, dryrun);\n\
          \            System.out.println(deleteClusterApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"0dFEfb8B-eabF-eA0d-c90f-fBcA5C5baC8C\";\n\
          \n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $dryrun\"] = true;\n\n\n\n\n    clustersApi.deleteClusterById(extId, opts).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    ext_id = \"8eded9dA-A9dE-a2FF-8c2F-Fb9fbafba8f8\"\n    \n   \
          \ dryrun = True\n\n\n    try:\n        api_response = clusters_api.delete_cluster_by_id(extId=ext_id,\
          \ _dryrun=dryrun)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    extId := \"dbeD8965-0bDF-1eeA-D6Ea-6ecbccc0DEf5\"\n    \n    dryrun_\
          \ := true\n\n\n    response, error := ClustersApiInstance.DeleteClusterById(&extId,\
          \ &dryrun_)\n    if error != nil {\n        fmt.Println(error)\n       \
          \ return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/EBB1a47c-fCe8-b95b-1Cee-9bc6Ae7dFE6D?$dryrun=true" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Ae6f6896-bdD9-4FF6-7edE-EfA9AE2Ebc2C?$dryrun=true"
  /clustermgmt/v4.0/config/clusters:
    get:
      tags:
      - Clusters
      summary: Get the list of clusters
      description: Lists all cluster entities registered to Prism Central.
      operationId: listClusters
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - backupEligibilityScore
          - clusterProfileExtId
          - config/buildInfo/version
          - config/clusterFunction
          - config/encryptionInTransitStatus
          - config/encryptionOption
          - config/encryptionScope
          - config/hypervisorTypes
          - config/isAvailable
          - extId
          - name
          - network/keyManagementServerType
          - upgradeStatus
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - backupEligibilityScore
          - config/buildInfo/version
          - config/isAvailable
          - extId
          - inefficientVmCount
          - name
          - network/keyManagementServerType
          - nodes/numberOfNodes
          - upgradeStatus
          - vmCount
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $apply
        in: query
        description: |
          A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '$apply=groupby((templateName))' would get all templates grouped by templateName.
          The groupby can be applied on the following fields:
          - config/buildInfo/version
          - nodes/numberOfNodes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $expand
        in: query
        description: |
          A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported.
          - clusterProfile
          - storageSummary
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - backupEligibilityScore
          - inefficientVmCount
          - name
          - upgradeStatus
          - vmCount
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Cluster entities.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.Cluster'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster
        roleList:
        - Developer
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Super Admin
        - Objects Admin
        - Network Infra Admin
        - VPC Admin
        - Consumer
        - Storage Admin
        - Storage Viewer
        - Files Admin
        - Cluster Admin
        - Cluster Viewer
        - Virtual Machine Admin
        - Virtual Machine Operator
        - Virtual Machine Viewer
        - Kubernetes Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListClustersApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        int page = 0;\n        \n        int limit = 50;\n\n        try\
          \ {\n            ListClustersApiResponse listClustersApiResponse = clustersApi.listClusters(page,\
          \ limit, null, null, null, null, null);\n            System.out.println(listClustersApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ClustersApi } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let clustersApi = new ClustersApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$apply"] = "string_sample_data";
              opts["$expand"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              clustersApi.listClusters(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = clusters_api.list_clusters(_page=page, _limit=limit)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := ClustersApiInstance.ListClusters(&page_,\
          \ &limit_, nil, nil, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Cluster)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$expand=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - Clusters
      summary: Create a cluster
      description: Cluster create operation.
      operationId: createCluster
      parameters:
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 97115f3f-291f-4ea4-8d18-316aded1a005
      - name: $dryrun
        in: query
        description: |
          A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          description: |
            A URL query parameter that allows long running operations to execute in a dry-run mode providing ability to identify trouble spots and system failures without performing the actual operation. Additionally this mode also offers a summary snapshot of the resultant system in order to better understand how things fit together. The operation runs in dry-run mode only if the provided value is true.
          example: false
      requestBody:
        description: The required parameters for cluster create workflow.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.Cluster'
        required: true
      responses:
        "202":
          description: Cluster created.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
                  Post operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Cluster
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.Cluster;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.CreateClusterApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        Cluster\
          \ cluster = new Cluster();\n\n        // Cluster object initializations\
          \ here...\n        \n        boolean dryrun = true;\n\n        try {\n \
          \           CreateClusterApiResponse createClusterApiResponse = clustersApi.createCluster(dryrun,\
          \ cluster);\n            System.out.println(createClusterApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ClustersApi, Cluster } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let clustersApi = new ClustersApi(apiClientInstance);

          function sample() {
              let cluster = new Cluster();

              // Cluster object initializations here...


              // Construct Optional Parameters
              var opts = {};
              opts["$dryrun"] = true;




              clustersApi.createCluster(cluster, opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    cluster = ntnx_clustermgmt_py_client.Cluster()\n\n    # Cluster object\
          \ initializations here...\n    \n    dryrun = True\n\n\n    try:\n     \
          \   api_response = clusters_api.create_cluster(_dryrun=dryrun, body=cluster)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ cluster := import1.NewCluster()\n\n    // Cluster object initializations\
          \ here...\n\n    \n    dryrun_ := true\n\n\n    response, error := ClustersApiInstance.CreateCluster(&dryrun_,\
          \ cluster)\n    if error != nil {\n        fmt.Println(error)\n        return\n\
          \    }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters?$dryrun=true" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"test_cluster_name","nodes":{"numberOfNodes":0,"nodeList":[{"controllerVmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"nodeUuid":"string","hostIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"$objectType":"clustermgmt.v4.config.NodeListItemReference"}],"$objectType":"clustermgmt.v4.config.NodeReference"},"config":{"incarnationId":0,"buildInfo":{"buildType":"release/opt","version":"6.7","fullVersion":"el7.3-release-fraser-6.5.5.6-stable-e36389d5f36fa8e7cacfdccdc2049f85206c6d7c","commitId":"da8e2cbac08b1d4171e451b7ce008c4f1430d54d","shortCommitId":"f978e71","$objectType":"clustermgmt.v4.config.BuildReference"},"hypervisorTypes":["$UNKNOWN"],"clusterFunction":["$UNKNOWN"],"timezone":"UTC/IST","authorizedPublicKeyList":[{"name":"Testpublickeyname","key":"Testkey","$objectType":"clustermgmt.v4.config.PublicKey"}],"redundancyFactor":0,"clusterSoftwareMap":[{"softwareType":"$UNKNOWN","version":"string","$objectType":"clustermgmt.v4.config.SoftwareMapReference"}],"clusterArch":"$UNKNOWN","faultToleranceState":{"currentMaxFaultTolerance":0,"desiredMaxFaultTolerance":0,"domainAwarenessLevel":"$UNKNOWN","currentClusterFaultTolerance":"$UNKNOWN","desiredClusterFaultTolerance":"$UNKNOWN","redundancyStatus":{"isCassandraPreparationDone":true,"isZookeeperPreparationDone":true,"$objectType":"clustermgmt.v4.config.RedundancyStatusDetails"},"$objectType":"clustermgmt.v4.config.FaultToleranceState"},"isRemoteSupportEnabled":true,"operationMode":"$UNKNOWN","isLts":true,"isPasswordRemoteLoginEnabled":true,"encryptionInTransitStatus":"$UNKNOWN","encryptionOption":["$UNKNOWN"],"encryptionScope":["$UNKNOWN"],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"isAvailable":true,"$objectType":"clustermgmt.v4.config.ClusterConfigReference"},"network":{"externalAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalDataServiceIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalSubnet":"10.49.144.0/255.255.240.0","internalSubnet":"192.138.5.0/255.255.255.128","nfsSubnetWhitelist":["string"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"masqueradingIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"masqueradingPort":0,"managementServer":{"ip":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"type":"$UNKNOWN","isDrsEnabled":true,"isRegistered":true,"isInUse":true,"$objectType":"clustermgmt.v4.config.ManagementServerRef"},"fqdn":"string","keyManagementServerType":"$UNKNOWN","backplane":{"isSegmentationEnabled":true,"vlanTag":0,"subnet":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"netmask":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"clustermgmt.v4.config.BackplaneNetworkParams"},"httpProxyList":[{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"username":"string","password":"string","name":"string","proxyTypes":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.HttpProxyConfig"}],"httpProxyWhiteList":[{"targetType":"$UNKNOWN","target":"string","$objectType":"clustermgmt.v4.config.HttpProxyWhiteListConfig"}],"$objectType":"clustermgmt.v4.config.ClusterNetworkReference"},"upgradeStatus":"$UNKNOWN","vmCount":0,"inefficientVmCount":0,"containerName":"Testcontainer_name","categories":["string"],"clusterProfileExtId":"string","backupEligibilityScore":0,"$objectType":"clustermgmt.v4.config.Cluster"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"name":"test_cluster_name","nodes":{"numberOfNodes":0,"nodeList":[{"controllerVmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"nodeUuid":"string","hostIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"$objectType":"clustermgmt.v4.config.NodeListItemReference"}],"$objectType":"clustermgmt.v4.config.NodeReference"},"config":{"incarnationId":0,"buildInfo":{"buildType":"release/opt","version":"6.7","fullVersion":"el7.3-release-fraser-6.5.5.6-stable-e36389d5f36fa8e7cacfdccdc2049f85206c6d7c","commitId":"da8e2cbac08b1d4171e451b7ce008c4f1430d54d","shortCommitId":"f978e71","$objectType":"clustermgmt.v4.config.BuildReference"},"hypervisorTypes":["$UNKNOWN"],"clusterFunction":["$UNKNOWN"],"timezone":"UTC/IST","authorizedPublicKeyList":[{"name":"Testpublickeyname","key":"Testkey","$objectType":"clustermgmt.v4.config.PublicKey"}],"redundancyFactor":0,"clusterSoftwareMap":[{"softwareType":"$UNKNOWN","version":"string","$objectType":"clustermgmt.v4.config.SoftwareMapReference"}],"clusterArch":"$UNKNOWN","faultToleranceState":{"currentMaxFaultTolerance":0,"desiredMaxFaultTolerance":0,"domainAwarenessLevel":"$UNKNOWN","currentClusterFaultTolerance":"$UNKNOWN","desiredClusterFaultTolerance":"$UNKNOWN","redundancyStatus":{"isCassandraPreparationDone":true,"isZookeeperPreparationDone":true,"$objectType":"clustermgmt.v4.config.RedundancyStatusDetails"},"$objectType":"clustermgmt.v4.config.FaultToleranceState"},"isRemoteSupportEnabled":true,"operationMode":"$UNKNOWN","isLts":true,"isPasswordRemoteLoginEnabled":true,"encryptionInTransitStatus":"$UNKNOWN","encryptionOption":["$UNKNOWN"],"encryptionScope":["$UNKNOWN"],"pulseStatus":{"isEnabled":true,"piiScrubbingLevel":"$UNKNOWN","$objectType":"clustermgmt.v4.config.PulseStatus"},"isAvailable":true,"$objectType":"clustermgmt.v4.config.ClusterConfigReference"},"network":{"externalAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalDataServiceIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"externalSubnet":"10.49.144.0/255.255.240.0","internalSubnet":"192.138.5.0/255.255.255.128","nfsSubnetWhitelist":["string"],"nameServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"ntpServerIpList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"smtpServer":{"emailAddress":"string","server":{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"port":0,"username":"user1","password":"string","$objectType":"clustermgmt.v4.config.SmtpNetwork"},"type":"$UNKNOWN","$objectType":"clustermgmt.v4.config.SmtpServerRef"},"masqueradingIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"masqueradingPort":0,"managementServer":{"ip":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"type":"$UNKNOWN","isDrsEnabled":true,"isRegistered":true,"isInUse":true,"$objectType":"clustermgmt.v4.config.ManagementServerRef"},"fqdn":"string","keyManagementServerType":"$UNKNOWN","backplane":{"isSegmentationEnabled":true,"vlanTag":0,"subnet":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"netmask":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"$objectType":"clustermgmt.v4.config.BackplaneNetworkParams"},"httpProxyList":[{"ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"username":"string","password":"string","name":"string","proxyTypes":["$UNKNOWN"],"$objectType":"clustermgmt.v4.config.HttpProxyConfig"}],"httpProxyWhiteList":[{"targetType":"$UNKNOWN","target":"string","$objectType":"clustermgmt.v4.config.HttpProxyWhiteListConfig"}],"$objectType":"clustermgmt.v4.config.ClusterNetworkReference"},"upgradeStatus":"$UNKNOWN","vmCount":0,"inefficientVmCount":0,"containerName":"Testcontainer_name","categories":["string"],"clusterProfileExtId":"string","backupEligibilityScore":0,"$objectType":"clustermgmt.v4.config.Cluster"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters?$dryrun=true"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp:
    get:
      tags:
      - Clusters
      summary: Get SNMP config details of a cluster
      description: "Fetches SNMP config details of the cluster identified by {clusterExtId}."
      operationId: getSnmpConfigByClusterId
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cfb6452a-4a1c-4537-88af-a8b5f177f208
      responses:
        "200":
          description: The requested SNMP configuration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpConfig'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Snmp Configuration
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetSnmpConfigByClusterIdApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"eaDF3Bfa-ddaF-cf4d-1a46-0e9BDeeBaE5e\"\
          ;\n\n        try {\n            GetSnmpConfigByClusterIdApiResponse getSnmpConfigByClusterIdApiResponse\
          \ = clustersApi.getSnmpConfigByClusterId(clusterExtId);\n            System.out.println(getSnmpConfigByClusterIdApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"C99BDfe8-6d39-fAf0-eDE0-C4E6FAdB1eEe\"\
          ;\n\n\n\n\n\n    clustersApi.getSnmpConfigByClusterId(clusterExtId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"e6C10A4F-22C6-DCCC-Dda1-ABbc18d42F3e\"\n\n\
          \n    try:\n        api_response = clusters_api.get_snmp_config_by_cluster_id(clusterExtId=cluster_ext_id)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"cdd49bA9-efD8-4A8F-82ed-cEd3C8EcF7b4\"\n\n\n \
          \   response, error := ClustersApiInstance.GetSnmpConfigByClusterId(&clusterExtId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.SnmpConfig)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Bbc14171-Be48-aEF8-0b3b-a8df9ffee5a7/snmp" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/8C036fFC-Ab96-87eE-11f4-c901dced2CcF/snmp"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/update-status:
    post:
      tags:
      - Clusters
      summary: Update SNMP status
      description: "Updates the status of SNMP configuration associated with the cluster\
        \ identified by {clusterExtId}."
      operationId: updateSnmpStatus
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 8373620d-2e53-4bc0-bb86-3ae0fd292905
      requestBody:
        description: SNMP status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpStatusParam'
        required: true
      responses:
        "202":
          description: SNMP status updated.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/update-status\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/update-status\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/update-status\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Cluster Snmp Status
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpStatusParam;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UpdateSnmpStatusApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        SnmpStatusParam\
          \ snmpStatusParam = new SnmpStatusParam();\n\n        // SnmpStatusParam\
          \ object initializations here...\n        snmpStatusParam.setIsEnabled(true);\
          \  // required field\n        \n        String clusterExtId = \"FEE31f30-54Cf-E404-aeD4-C1D4C3B8D1Da\"\
          ;\n\n        try {\n            UpdateSnmpStatusApiResponse updateSnmpStatusApiResponse\
          \ = clustersApi.updateSnmpStatus(clusterExtId, snmpStatusParam);\n     \
          \       System.out.println(updateSnmpStatusApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, SnmpStatusParam } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let snmpStatusParam = new SnmpStatusParam();\n\n    // SnmpStatusParam\
          \ object initializations here...\n    snmpStatusParam.setIsEnabled(true);\
          \  // required field\n\n    \n    let clusterExtId = \"1B72efaf-Babe-FfCA-bfA9-Bd6c9EEeBFED\"\
          ;\n\n\n\n\n\n    clustersApi.updateSnmpStatus(clusterExtId, snmpStatusParam).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    snmpStatusParam = ntnx_clustermgmt_py_client.SnmpStatusParam()\n\n\
          \    # SnmpStatusParam object initializations here...\n    snmpStatusParam.is_enabled\
          \ = True  # required field\n    \n    cluster_ext_id = \"D2eDb1bf-6aBF-CdEc-d9E6-62F62cB1EFfa\"\
          \n\n\n    try:\n        api_response = clusters_api.update_snmp_status(clusterExtId=cluster_ext_id,\
          \ body=snmpStatusParam)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ snmpStatusParam := import1.NewSnmpStatusParam()\n\n    // SnmpStatusParam\
          \ object initializations here...\n\n    \n    clusterExtId := \"4C06C1aD-a55c-19DC-696E-c108b8acdb8b\"\
          \n\n\n    response, error := ClustersApiInstance.UpdateSnmpStatus(&clusterExtId,\
          \ snmpStatusParam)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/eCfba2bC-cEDb-cf8d-314e-EBCeFe5CC2aA/snmp/$actions/update-status" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"isEnabled":true,"$objectType":"clustermgmt.v4.config.SnmpStatusParam"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"isEnabled":true,"$objectType":"clustermgmt.v4.config.SnmpStatusParam"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/92Da5AaB-EA3c-fBfD-aED3-D54Bf55Fe2eE/snmp/$actions/update-status"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/add-transports:
    post:
      tags:
      - Clusters
      summary: Add SNMP transport ports and protocol details
      description: "Adds transport ports and protocol details to the SNMP configuration\
        \ associated with the cluster identified by {clusterExtId}."
      operationId: addSnmpTransport
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 468d421d-b2c6-496d-8140-6bd21a2bf26a
      requestBody:
        description: SNMP transports to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTransport'
        required: true
      responses:
        "202":
          description: SNMP transport ports and protocols are added.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/add-transports\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/add-transports\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/add-transports\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Add Cluster Snmp Transport
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpProtocol;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpTransport;\nimport\
          \ com.nutanix.dp1.clu.clustermgmt.v4.config.AddSnmpTransportsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        SnmpTransport\
          \ snmpTransport = new SnmpTransport();\n\n        // SnmpTransport object\
          \ initializations here...\n        snmpTransport.setPort(1);  // required\
          \ field\n        snmpTransport.setProtocol(SnmpProtocol.UNKNOWN);  // required\
          \ field\n        \n        String clusterExtId = \"16a6cEcc-bDC9-3EaD-E670-16FcAdCa1cfd\"\
          ;\n\n        try {\n            AddSnmpTransportsApiResponse addSnmpTransportsApiResponse\
          \ = clustersApi.addSnmpTransport(clusterExtId, snmpTransport);\n       \
          \     System.out.println(addSnmpTransportsApiResponse.toString());\n\n \
          \       } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, SnmpProtocol, SnmpTransport }\
          \ from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let snmpTransport = new SnmpTransport();\n\n    // SnmpTransport\
          \ object initializations here...\n    snmpTransport.setPort(1);  // required\
          \ field\n    snmpTransport.setProtocol(SnmpProtocol.UNKNOWN);  // required\
          \ field\n\n    \n    let clusterExtId = \"4d1cCD4e-03c1-21ba-03Dd-8af9cd89bA59\"\
          ;\n\n\n\n\n\n    clustersApi.addSnmpTransport(clusterExtId, snmpTransport).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    snmpTransport = ntnx_clustermgmt_py_client.SnmpTransport()\n\n    #\
          \ SnmpTransport object initializations here...\n    snmpTransport.port =\
          \ 1  # required field\n    snmpTransport.protocol = ntnx_clustermgmt_py_client.SnmpProtocol._UNKNOWN\
          \  # required field\n    \n    cluster_ext_id = \"1AFBedAD-9cCb-372A-1FCc-fCdA9EdEd502\"\
          \n\n\n    try:\n        api_response = clusters_api.add_snmp_transport(clusterExtId=cluster_ext_id,\
          \ body=snmpTransport)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ snmpTransport := import1.NewSnmpTransport()\n\n    // SnmpTransport object\
          \ initializations here...\n\n    \n    clusterExtId := \"1Ee787A5-449F-eFB2-FfBF-2B5cBCcDfD76\"\
          \n\n\n    response, error := ClustersApiInstance.AddSnmpTransport(&clusterExtId,\
          \ snmpTransport)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/BBdBFe3D-bdBE-aEed-0B7A-6640AE5AD6b5/snmp/$actions/add-transports" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/D7DAab14-57Ba-cdd7-F4DD-8AAadFcF1db7/snmp/$actions/add-transports"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/remove-transports:
    post:
      tags:
      - Clusters
      summary: Remove SNMP transport ports and protocol details
      description: "Removes transport ports and protocol detail from the SNMP configuration\
        \ associated with the cluster identified by {clusterExtId}."
      operationId: removeSnmpTransport
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d91df016-21a3-454e-adff-12128ffc2277
      requestBody:
        description: SNMP transports to remove.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTransport'
        required: true
      responses:
        "202":
          description: SNMP transport ports and protocols are removed.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/remove-transports\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/remove-transports\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/remove-transports\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Remove Cluster Snmp Transport
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpProtocol;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpTransport;\nimport\
          \ com.nutanix.dp1.clu.clustermgmt.v4.config.RemoveSnmpTransportsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        SnmpTransport\
          \ snmpTransport = new SnmpTransport();\n\n        // SnmpTransport object\
          \ initializations here...\n        snmpTransport.setPort(1);  // required\
          \ field\n        snmpTransport.setProtocol(SnmpProtocol.UNKNOWN);  // required\
          \ field\n        \n        String clusterExtId = \"CDA2cAb2-D405-5Eee-DDED-BeDaE8A69fad\"\
          ;\n\n        try {\n            RemoveSnmpTransportsApiResponse removeSnmpTransportsApiResponse\
          \ = clustersApi.removeSnmpTransport(clusterExtId, snmpTransport);\n    \
          \        System.out.println(removeSnmpTransportsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, SnmpProtocol, SnmpTransport }\
          \ from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let snmpTransport = new SnmpTransport();\n\n    // SnmpTransport\
          \ object initializations here...\n    snmpTransport.setPort(1);  // required\
          \ field\n    snmpTransport.setProtocol(SnmpProtocol.UNKNOWN);  // required\
          \ field\n\n    \n    let clusterExtId = \"13ccC3D4-4bAd-3c12-D9FD-BFCAFFF72b1B\"\
          ;\n\n\n\n\n\n    clustersApi.removeSnmpTransport(clusterExtId, snmpTransport).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    snmpTransport = ntnx_clustermgmt_py_client.SnmpTransport()\n\n    #\
          \ SnmpTransport object initializations here...\n    snmpTransport.port =\
          \ 1  # required field\n    snmpTransport.protocol = ntnx_clustermgmt_py_client.SnmpProtocol._UNKNOWN\
          \  # required field\n    \n    cluster_ext_id = \"ea5E5B16-ab95-6dba-cEdd-FA8Dd8CEb012\"\
          \n\n\n    try:\n        api_response = clusters_api.remove_snmp_transport(clusterExtId=cluster_ext_id,\
          \ body=snmpTransport)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ snmpTransport := import1.NewSnmpTransport()\n\n    // SnmpTransport object\
          \ initializations here...\n\n    \n    clusterExtId := \"B2Ca4bFa-5F8D-3DEb-6BA1-5DCcbbAB4aEE\"\
          \n\n\n    response, error := ClustersApiInstance.RemoveSnmpTransport(&clusterExtId,\
          \ snmpTransport)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/dbd39fFE-f5D1-9c3E-29cC-eb2cAf4AFEA3/snmp/$actions/remove-transports" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"protocol":"$UNKNOWN","port":0,"$objectType":"clustermgmt.v4.config.SnmpTransport"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/4168d6dF-DD0b-Ad0C-EFda-0FFBE9FeED05/snmp/$actions/remove-transports"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users:
    post:
      tags:
      - Clusters
      summary: Add SNMP user
      description: "Adds SNMP user configuration to the cluster identified by {clusterExtId}."
      operationId: createSnmpUser
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 5637136b-ffd9-4bc3-a79b-81424470115a
      requestBody:
        description: SNMP user to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpUser'
        required: true
      responses:
        "202":
          description: SNMP user is added.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Cluster Snmp User
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpAuthType;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpUser;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.CreateSnmpUserApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        SnmpUser\
          \ snmpUser = new SnmpUser();\n\n        // SnmpUser object initializations\
          \ here...\n        snmpUser.setAuthKey(\"Test_SNMP_user_authentication_key.\"\
          );  // required field\n        snmpUser.setAuthType(SnmpAuthType.UNKNOWN);\
          \  // required field\n        snmpUser.setUsername(\"Test UserName\"); \
          \ // required field\n        \n        String clusterExtId = \"ed2ef57A-A0DB-2dEA-5C8f-BC7C3bBB2eaa\"\
          ;\n\n        try {\n            CreateSnmpUserApiResponse createSnmpUserApiResponse\
          \ = clustersApi.createSnmpUser(clusterExtId, snmpUser);\n            System.out.println(createSnmpUserApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, SnmpAuthType, SnmpUser } from\
          \ \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let snmpUser = new SnmpUser();\n\n    // SnmpUser object initializations\
          \ here...\n    snmpUser.setAuthKey(\"Test_SNMP_user_authentication_key.\"\
          );  // required field\n    snmpUser.setAuthType(SnmpAuthType.UNKNOWN); \
          \ // required field\n    snmpUser.setUsername(\"Test UserName\");  // required\
          \ field\n\n    \n    let clusterExtId = \"F50DeffC-2Ead-CCcf-bFbE-b1ED11B9EacD\"\
          ;\n\n\n\n\n\n    clustersApi.createSnmpUser(clusterExtId, snmpUser).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    snmpUser = ntnx_clustermgmt_py_client.SnmpUser()\n\n    # SnmpUser\
          \ object initializations here...\n    snmpUser.auth_key = \"Test_SNMP_user_authentication_key.\"\
          \  # required field\n    snmpUser.auth_type = ntnx_clustermgmt_py_client.SnmpAuthType._UNKNOWN\
          \  # required field\n    snmpUser.username = \"Test UserName\"  # required\
          \ field\n    \n    cluster_ext_id = \"EC2CECAD-DC16-dFEa-74bf-ad9a6ee6Bc5d\"\
          \n\n\n    try:\n        api_response = clusters_api.create_snmp_user(clusterExtId=cluster_ext_id,\
          \ body=snmpUser)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ snmpUser := import1.NewSnmpUser()\n\n    // SnmpUser object initializations\
          \ here...\n\n    \n    clusterExtId := \"DBc2b7Bd-29b7-1a51-613C-f99b5DAfDf8D\"\
          \n\n\n    response, error := ClustersApiInstance.CreateSnmpUser(&clusterExtId,\
          \ snmpUser)\n    if error != nil {\n        fmt.Println(error)\n       \
          \ return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/ffFEcBDC-A0eA-6F5c-9cCD-0e5ccDCabdDa/snmp/users" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/DbbFEd3f-6b5c-Fb8a-bFF7-e5578DEFEcec/snmp/users"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}:
    get:
      tags:
      - Clusters
      summary: Get SNMP user information
      description: "Fetches SNMP user configuration details identified by {extId}\
        \ associated with the cluster identified by {clusterExtId}."
      operationId: getSnmpUserById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a84b2518-420b-42a9-82cc-71de36e53824
      - name: extId
        in: path
        description: SNMP user UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: dec8a406-f1ec-4ead-9257-1fc113b6c5d7
      responses:
        "200":
          description: SNMP user retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpUser'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Snmp User
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetSnmpUserApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"A632AF0f-5cd1-bfF4-DAc3-ACfdcDB5A9c4\"\
          ;\n        \n        String extId = \"edcAF0fb-2A83-Cdf1-CaFE-BFbAFDf1A69D\"\
          ;\n\n        try {\n            GetSnmpUserApiResponse getSnmpUserApiResponse\
          \ = clustersApi.getSnmpUserById(clusterExtId, extId);\n            System.out.println(getSnmpUserApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"45debACC-cbdB-8b6B-DC7e-F1F548D03Ad2\"\
          ;\n    \n    let extId = \"1AC577fd-A755-b55D-e4EA-B6deCFabf371\";\n\n\n\
          \n\n\n    clustersApi.getSnmpUserById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"D38c0c4a-2ccD-EDfC-aBA3-f1F1e7e74aaE\"\n \
          \   \n    ext_id = \"3AaBCDcD-bbBB-1b64-fa3B-dedFF2bE8A12\"\n\n\n    try:\n\
          \        api_response = clusters_api.get_snmp_user_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"E9AE9bee-Ba2b-ddAa-C3E5-262c1eFbCaCD\"\n    \n\
          \    extId := \"AE72F7fA-EbeA-166E-5ff1-6bbC7A90acdB\"\n\n\n    response,\
          \ error := ClustersApiInstance.GetSnmpUserById(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.SnmpUser)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Fd2E3E6e-F78D-fAb4-86fe-C7eCeDd3c9Ec/snmp/users/1ffDECCE-bE3D-2Aef-CDAB-f90FfF33Fb6d" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/baaCBE5d-D6bD-daA9-Fd1F-A75b3a5D2A0A/snmp/users/bFec79af-fCdb-1d80-bD6B-EBDDCCC3EDbd"
    put:
      tags:
      - Clusters
      summary: Update SNMP user
      description: "Updates SNMP user configuration identified by {extId} associated\
        \ with the cluster identified by {clusterExtId}."
      operationId: updateSnmpUserById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 958b2dd0-ffed-40c6-8c8d-f6ffe17375c4
      - name: extId
        in: path
        description: SNMP user UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cc4612bc-2ef2-4376-904b-43a3c23a6af4
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: SNMP user to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpUser'
        required: true
      responses:
        "202":
          description: SNMP user is updated.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Cluster Snmp User
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpAuthType;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpUser;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetSnmpUserApiResponse;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UpdateSnmpUserApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        SnmpUser\
          \ snmpUser = new SnmpUser();\n\n        // SnmpUser object initializations\
          \ here...\n        snmpUser.setAuthKey(\"Test_SNMP_user_authentication_key.\"\
          );  // required field\n        snmpUser.setAuthType(SnmpAuthType.UNKNOWN);\
          \  // required field\n        snmpUser.setUsername(\"Test UserName\"); \
          \ // required field\n        \n        String clusterExtId = \"C10aEBcd-3A6B-abdC-Dad8-fac0bFcc3dCA\"\
          ;\n        \n        String extId = \"F2CFe385-72EA-D8ed-6C2d-D3cBfFDB0Fcf\"\
          ;\n\n        // perform GET call\n        GetSnmpUserApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = clustersApi.getSnmpUserById(clusterExtId,\
          \ extId);\n        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateSnmpUserApiResponse updateSnmpUserApiResponse\
          \ = clustersApi.updateSnmpUserById(clusterExtId, extId, snmpUser, opts);\n\
          \            System.out.println(updateSnmpUserApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, SnmpAuthType, SnmpUser, GetSnmpUserApiResponse\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let snmpUser = new SnmpUser();\n\n    // SnmpUser object initializations\
          \ here...\n    snmpUser.setAuthKey(\"Test_SNMP_user_authentication_key.\"\
          );  // required field\n    snmpUser.setAuthType(SnmpAuthType.UNKNOWN); \
          \ // required field\n    snmpUser.setUsername(\"Test UserName\");  // required\
          \ field\n\n    \n    let clusterExtId = \"BBaEf6Fc-C64a-dFF5-AFB6-d61ab6dcaeDa\"\
          ;\n    \n    let extId = \"2e3A1FCa-EDb6-f8bD-Ab0E-bEDcda66cDbA\";\n\n\n\
          \    // Perform Get call\n    clustersApi.getSnmpUserById(clusterExtId,\
          \ extId).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        // Extract E-Tag\
          \ Header\n        let etagValue = ApiClient.getEtag(data);\n\n        clustersApi.updateSnmpUserById(clusterExtId,\
          \ extId, snmpUser, {\"If-Match\" : etagValue}).then(({data, response}) =>\
          \ {\n            console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    snmpUser = ntnx_clustermgmt_py_client.SnmpUser()\n\n    # SnmpUser\
          \ object initializations here...\n    snmpUser.auth_key = \"Test_SNMP_user_authentication_key.\"\
          \  # required field\n    snmpUser.auth_type = ntnx_clustermgmt_py_client.SnmpAuthType._UNKNOWN\
          \  # required field\n    snmpUser.username = \"Test UserName\"  # required\
          \ field\n    \n    cluster_ext_id = \"100C7dCA-Ff3e-Df3c-CEAf-acA2e7be59Cd\"\
          \n    \n    ext_id = \"7017e8E0-5835-4cca-D8Ab-efdFebe9cecf\"\n\n    try:\n\
          \        api_response = clusters_api.get_snmp_user_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n    # Extract E-Tag Header\n    etag_value =\
          \ ntnx_clustermgmt_py_client.ApiClient.get_etag(api_response)\n\n    try:\n\
          \        api_response = clusters_api.update_snmp_user_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id, body=snmpUser, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ snmpUser := import1.NewSnmpUser()\n\n    // SnmpUser object initializations\
          \ here...\n\n    \n    clusterExtId := \"FDfbe4ec-aDCb-dA0f-7cCE-1bcdeEAfd859\"\
          \n    \n    extId := \"a1cad4fa-16Dc-Cba3-ebF5-1DeCdEb3AF5c\"\n\n    getResponse,\
          \ err := ClustersApiInstance.GetSnmpUserById(&clusterExtId, &extId)\n  \
          \  if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ClustersApiInstance.UpdateSnmpUserById(&clusterExtId,\
          \ &extId, snmpUser, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/fACABDaA-101d-5Ef2-daFc-FAf97Db17bBb/snmp/users/Ff6EBFFb-E24D-0a3A-b450-E0dAB8D9f6fA" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"username":"TestUserName","authType":"$UNKNOWN","authKey":"Test_SNMP_user_authentication_key.","privType":"$UNKNOWN","privKey":"Test_SNMP_user_encryption_key.","$objectType":"clustermgmt.v4.config.SnmpUser"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/D7FAe1EF-4aAD-0cFc-eABF-4AFece3adea6/snmp/users/ebEF4e85-eCbb-BdB2-CDcA-5cDff9cFeD0F"
    delete:
      tags:
      - Clusters
      summary: Delete SNMP user
      description: "Deletes SNMP user configuration identified by {extId} associated\
        \ with the cluster identified by {clusterExtId}."
      operationId: deleteSnmpUserById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 0e50dd9f-fcb0-4d42-b008-4a3c44a03650
      - name: extId
        in: path
        description: SNMP user UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e66e72b3-3649-48c5-bfab-7cf9b82cf36a
      responses:
        "202":
          description: SNMP user is deleted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Cluster Snmp User
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DeleteSnmpUserApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"AA3F15Af-DA4d-B9f5-4eca-9B09C3c89BAe\"\
          ;\n        \n        String extId = \"4AD5BB20-0C0E-74Ea-B822-AbeCDbCBbEDA\"\
          ;\n\n        try {\n            DeleteSnmpUserApiResponse deleteSnmpUserApiResponse\
          \ = clustersApi.deleteSnmpUserById(clusterExtId, extId);\n            System.out.println(deleteSnmpUserApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"7424E3Dc-FFC8-4fad-Db2F-74FB2CC2b7fD\"\
          ;\n    \n    let extId = \"FA3AA2DA-1554-F1bD-eFcc-EF8cbefcf04a\";\n\n\n\
          \n\n\n    clustersApi.deleteSnmpUserById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"BC4EcDB9-7a0B-1CFb-42e8-A04b80d453BB\"\n \
          \   \n    ext_id = \"1CB8dEaf-3116-cFDd-AAb5-ddd6eA76DfCE\"\n\n\n    try:\n\
          \        api_response = clusters_api.delete_snmp_user_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"EeCABef0-fBcB-eEa5-23ca-AeAc6a0b6202\"\n    \n\
          \    extId := \"9dFdD2Ce-dDeD-DedB-c58E-BA91b5BeDfef\"\n\n\n    response,\
          \ error := ClustersApiInstance.DeleteSnmpUserById(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/8a81cAc1-6C6D-cF0a-93D9-bF92F3fe5BEa/snmp/users/EFBb7Af0-170D-e5Ce-32ED-8c0D87b7EE30" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/A5fBBf9F-fffC-5DED-D124-cF1Ae43CD513/snmp/users/C4bAbeaC-bCdE-fA3c-be34-afA6Cd4Ff4C3"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps:
    post:
      tags:
      - Clusters
      summary: Add SNMP trap
      description: "Add SNMP trap configuration associated with the cluster identified\
        \ by {clusterExtId}."
      operationId: createSnmpTrap
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 35f07f45-1c55-42bb-bd76-9d549e8f3f0a
      requestBody:
        description: SNMP trap to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTrap'
        required: true
      responses:
        "202":
          description: SNMP trap is added.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Cluster Snmp Trap
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.common.v1.config.IPAddress;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpTrapVersion;\nimport\
          \ com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpTrap;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.CreateSnmpTrapApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        SnmpTrap\
          \ snmpTrap = new SnmpTrap();\n\n        // SnmpTrap object initializations\
          \ here...\n        snmpTrap.setAddress(new IPAddress());  // required field\n\
          \        snmpTrap.setVersion(SnmpTrapVersion.UNKNOWN);  // required field\n\
          \        \n        String clusterExtId = \"A3B95cDB-C9c6-Fbaf-0Ffe-AdEBc0BBDE0A\"\
          ;\n\n        try {\n            CreateSnmpTrapApiResponse createSnmpTrapApiResponse\
          \ = clustersApi.createSnmpTrap(clusterExtId, snmpTrap);\n            System.out.println(createSnmpTrapApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, IPAddress, SnmpTrapVersion, SnmpTrap\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let snmpTrap = new SnmpTrap();\n\n    // SnmpTrap object initializations\
          \ here...\n    snmpTrap.setAddress(new IPAddress());  // required field\n\
          \    snmpTrap.setVersion(SnmpTrapVersion.UNKNOWN);  // required field\n\n\
          \    \n    let clusterExtId = \"FcE0bb2f-Bb71-Fc2f-BA1C-61dd83fE88ad\";\n\
          \n\n\n\n\n    clustersApi.createSnmpTrap(clusterExtId, snmpTrap).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    snmpTrap = ntnx_clustermgmt_py_client.SnmpTrap()\n\n    # SnmpTrap\
          \ object initializations here...\n    snmpTrap.address = ntnx_clustermgmt_py_client.IPAddress()\
          \  # required field\n    snmpTrap.version = ntnx_clustermgmt_py_client.SnmpTrapVersion._UNKNOWN\
          \  # required field\n    \n    cluster_ext_id = \"C6EDfcB8-AFD5-FBBa-8cAC-bFCBF8faFfAc\"\
          \n\n\n    try:\n        api_response = clusters_api.create_snmp_trap(clusterExtId=cluster_ext_id,\
          \ body=snmpTrap)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ snmpTrap := import1.NewSnmpTrap()\n\n    // SnmpTrap object initializations\
          \ here...\n\n    \n    clusterExtId := \"DCCf4EB6-2Fcb-6eFb-7Dd8-E4cc552EfA1c\"\
          \n\n\n    response, error := ClustersApiInstance.CreateSnmpTrap(&clusterExtId,\
          \ snmpTrap)\n    if error != nil {\n        fmt.Println(error)\n       \
          \ return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/cAc4Bb16-03cc-c09e-9fc1-f8c9a9aCd1cc/snmp/traps" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/eC1cf227-6d55-7d24-7bfe-1abC13BBDefC/snmp/traps"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}:
    get:
      tags:
      - Clusters
      summary: Get SNMP trap configuration details
      description: " Fetches SNMP trap configuration details identified by {extId}\
        \ associated with the cluster identified by {clusterExtId}."
      operationId: getSnmpTrapById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ce7461ff-3709-4b03-a6dd-507e4e1d4838
      - name: extId
        in: path
        description: SNMP trap UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d7572ca2-da2c-4fc0-8019-d35b3d41d482
      responses:
        "200":
          description: SNMP trap retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTrap'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Snmp Trap
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetSnmpTrapApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"3a2cab7b-eC2b-9197-DA8c-1bc817AE66ca\"\
          ;\n        \n        String extId = \"A06fdfcE-EAe3-F84e-BdB9-0c71FEbEeBAD\"\
          ;\n\n        try {\n            GetSnmpTrapApiResponse getSnmpTrapApiResponse\
          \ = clustersApi.getSnmpTrapById(clusterExtId, extId);\n            System.out.println(getSnmpTrapApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"Df4Cbb0f-aEBD-8cef-d018-B0860E2B3e6A\"\
          ;\n    \n    let extId = \"eEAEbB58-DaBa-9A71-be9c-FabEddF1Dedb\";\n\n\n\
          \n\n\n    clustersApi.getSnmpTrapById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"eDBCcbfc-E06E-c952-d5Eb-D7Ae5FC7c2EC\"\n \
          \   \n    ext_id = \"6c6aAEcb-F74D-9e4C-EAFE-A15BCbc8BdbA\"\n\n\n    try:\n\
          \        api_response = clusters_api.get_snmp_trap_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"FA20444E-adc8-0b11-2dC8-1FCe3dD4Ca02\"\n    \n\
          \    extId := \"888BB2cD-A93d-C50B-b1CB-eDCbf09D22Fa\"\n\n\n    response,\
          \ error := ClustersApiInstance.GetSnmpTrapById(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.SnmpTrap)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/4E4cc15d-0B9F-59ab-cb6a-807D0FCFBEC4/snmp/traps/6F1bA065-e3De-CC8B-F219-CbCbdcaBDfbB" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/afe956ef-D5bf-Be6e-abab-cC45031e39E6/snmp/traps/EE6b0f3e-6e8e-bCdF-3BA3-F2a4474afA6B"
    put:
      tags:
      - Clusters
      summary: Update SNMP trap
      description: "Update SNMP trap configuration identified by {extId} associated\
        \ with the cluster identified by {clusterExtId}."
      operationId: updateSnmpTrapById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 2443f2f9-71ed-4760-9831-9cd0ca31f214
      - name: extId
        in: path
        description: SNMP trap UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 0b3b92b8-f697-44d3-b296-16a0907879b3
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: SNMP trap to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTrap'
        required: true
      responses:
        "202":
          description: SNMP trap is updated.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Cluster Snmp Trap
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.common.v1.config.IPAddress;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpTrapVersion;\nimport\
          \ com.nutanix.dp1.clu.clustermgmt.v4.config.SnmpTrap;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetSnmpTrapApiResponse;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UpdateSnmpTrapApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        SnmpTrap\
          \ snmpTrap = new SnmpTrap();\n\n        // SnmpTrap object initializations\
          \ here...\n        snmpTrap.setAddress(new IPAddress());  // required field\n\
          \        snmpTrap.setVersion(SnmpTrapVersion.UNKNOWN);  // required field\n\
          \        \n        String clusterExtId = \"aB88cCFB-237B-EadA-aeBc-e3DB79FbeEa4\"\
          ;\n        \n        String extId = \"e7dcc19F-19BC-9AbE-Da4d-bc8e9AAcD1AC\"\
          ;\n\n        // perform GET call\n        GetSnmpTrapApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = clustersApi.getSnmpTrapById(clusterExtId,\
          \ extId);\n        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateSnmpTrapApiResponse updateSnmpTrapApiResponse\
          \ = clustersApi.updateSnmpTrapById(clusterExtId, extId, snmpTrap, opts);\n\
          \            System.out.println(updateSnmpTrapApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, IPAddress, SnmpTrapVersion, SnmpTrap,\
          \ GetSnmpTrapApiResponse } from \"@nutanix-api/clustermgmt-js-client\";\n\
          \n// Configure the client\nlet apiClientInstance = new ApiClient();\n//\
          \ IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let snmpTrap = new SnmpTrap();\n\n    // SnmpTrap object initializations\
          \ here...\n    snmpTrap.setAddress(new IPAddress());  // required field\n\
          \    snmpTrap.setVersion(SnmpTrapVersion.UNKNOWN);  // required field\n\n\
          \    \n    let clusterExtId = \"Bb6Cf1Eb-4974-ACE2-dAaE-D3EdEBFD5bea\";\n\
          \    \n    let extId = \"b31fbDdf-A7FA-3fDD-7Fb6-FAFaE6dDaDBC\";\n\n\n \
          \   // Perform Get call\n    clustersApi.getSnmpTrapById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        clustersApi.updateSnmpTrapById(clusterExtId,\
          \ extId, snmpTrap, {\"If-Match\" : etagValue}).then(({data, response}) =>\
          \ {\n            console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    snmpTrap = ntnx_clustermgmt_py_client.SnmpTrap()\n\n    # SnmpTrap\
          \ object initializations here...\n    snmpTrap.address = ntnx_clustermgmt_py_client.IPAddress()\
          \  # required field\n    snmpTrap.version = ntnx_clustermgmt_py_client.SnmpTrapVersion._UNKNOWN\
          \  # required field\n    \n    cluster_ext_id = \"dADfec56-7dCB-7aEE-F9da-f4ac0DFacB04\"\
          \n    \n    ext_id = \"825aA288-6b9A-CAbD-48Dc-e8bFfA80Dc2b\"\n\n    try:\n\
          \        api_response = clusters_api.get_snmp_trap_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n    # Extract E-Tag Header\n    etag_value =\
          \ ntnx_clustermgmt_py_client.ApiClient.get_etag(api_response)\n\n    try:\n\
          \        api_response = clusters_api.update_snmp_trap_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id, body=snmpTrap, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ snmpTrap := import1.NewSnmpTrap()\n\n    // SnmpTrap object initializations\
          \ here...\n\n    \n    clusterExtId := \"42A87F25-Cf0f-40fE-BdCd-BfcAC1C3A5F6\"\
          \n    \n    extId := \"bA872b4e-eB0b-caB1-eaA9-7AfEb760Ce2e\"\n\n    getResponse,\
          \ err := ClustersApiInstance.GetSnmpTrapById(&clusterExtId, &extId)\n  \
          \  if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ClustersApiInstance.UpdateSnmpTrapById(&clusterExtId,\
          \ &extId, snmpTrap, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/e4AC1Fb1-2aA5-AC05-037a-B9896fEDDeAD/snmp/traps/9f0Bcd32-FF2a-d6bf-bBAC-FDFC4b5faf6B" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"username":"TestUserName","protocol":"$UNKNOWN","port":0,"shouldInform":true,"engineId":"TestsnmpengineId","version":"$UNKNOWN","recieverName":"TestReceiverName","communityString":"snmp-servercommunitypublicRO192.168.1.0255.255.255.0","$objectType":"clustermgmt.v4.config.SnmpTrap"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/fdcC1cf6-fbC3-D0da-CBa4-c338CADBcC50/snmp/traps/2AC4EC39-CC50-13Cd-F4c3-d5e99ecdCCeA"
    delete:
      tags:
      - Clusters
      summary: Delete SNMP trap
      description: "Deletes SNMP trap configuration identified by {extId} associated\
        \ with the cluster identified by {clusterExtId}."
      operationId: deleteSnmpTrapById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7663dfff-2784-4932-96a4-9570dc7fefb7
      - name: extId
        in: path
        description: SNMP trap UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b6c81993-9ee1-4070-9708-f31926417eab
      responses:
        "202":
          description: SNMP trap is deleted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Cluster Snmp Trap
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DeleteSnmpTrapApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"DCa3EdDd-5fcE-FfE8-Ad9d-656cfDEDEe7D\"\
          ;\n        \n        String extId = \"661bA5e1-bbf5-3B1C-E2Cf-3ACB49F3bC3b\"\
          ;\n\n        try {\n            DeleteSnmpTrapApiResponse deleteSnmpTrapApiResponse\
          \ = clustersApi.deleteSnmpTrapById(clusterExtId, extId);\n            System.out.println(deleteSnmpTrapApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"97A0f69E-d5dE-c6BD-EA7e-cBeeFab4AcAA\"\
          ;\n    \n    let extId = \"eDF24CFA-Cb7F-E03A-84fd-CE42f2acEBcc\";\n\n\n\
          \n\n\n    clustersApi.deleteSnmpTrapById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"cBaBFcf7-eeCe-1Ddc-A68e-DF53faaadbde\"\n \
          \   \n    ext_id = \"6b2ef4E1-DfFC-dB6b-85d3-1aDdcf16AfF8\"\n\n\n    try:\n\
          \        api_response = clusters_api.delete_snmp_trap_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"8b9b9b7a-de0C-E9Bb-e65f-a6faA1A35CBB\"\n    \n\
          \    extId := \"e69Ca89d-3BEc-aCaF-ada6-B1cb1D6Bbf92\"\n\n\n    response,\
          \ error := ClustersApiInstance.DeleteSnmpTrapById(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/9edBfc4C-AfDb-C33F-7ACD-5Fce4DefEaAf/snmp/traps/bebf98E3-Eb1c-BaC0-F3A7-F2BBBE53D3Fc" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/C400DEbB-60fF-3CF0-AEcD-EbC0c4a4Dea2/snmp/traps/1ff4c56a-AF9B-1FF8-7b6e-40AD1deEf9BC"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers:
    get:
      tags:
      - Clusters
      summary: Get the list of RSYSLOG server configurations
      description: "Lists the RSYSLOG server configurations associated with the cluster\
        \ identified by {clusterExtId}."
      operationId: listRsyslogServersByClusterId
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4cf0f6f9-46fe-4cbb-a331-e4b8c98928e9
      responses:
        "200":
          description: The requested RSYSLOG configuration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    maxItems: 10
                    minItems: 0
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogServer'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Rsyslog Server
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListRsyslogServersByClusterIdApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"de50c4DD-fdaf-8DDb-df5f-cD4deCB1AcF1\"\
          ;\n\n        try {\n            ListRsyslogServersByClusterIdApiResponse\
          \ listRsyslogServersByClusterIdApiResponse = clustersApi.listRsyslogServersByClusterId(clusterExtId);\n\
          \            System.out.println(listRsyslogServersByClusterIdApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"Cf2A1FC2-Af5B-FD4c-eeC5-9FbdbE3c4AFE\"\
          ;\n\n\n\n\n\n    clustersApi.listRsyslogServersByClusterId(clusterExtId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"aeaeB1Ab-CcA9-72fF-B4a5-7b53bDfAb7eB\"\n\n\
          \n    try:\n        api_response = clusters_api.list_rsyslog_servers_by_cluster_id(clusterExtId=cluster_ext_id)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"79B1703f-CfF4-5Abd-fCF9-9e9De4DCDD5e\"\n\n\n \
          \   response, error := ClustersApiInstance.ListRsyslogServersByClusterId(&clusterExtId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().([]import1.RsyslogServer)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/c826Bd6A-b6eF-CcA4-1adf-B0F92A0e11e2/rsyslog-servers" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/CcCB4B9a-EC2E-Ea1B-76cC-bbBC566a0d0C/rsyslog-servers"
    post:
      tags:
      - Clusters
      summary: Add RSYSLOG server configuration
      description: "Adds RSYSLOG server configuration to the cluster identified by\
        \ {clusterExtId}."
      operationId: createRsyslogServer
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: bac84870-a0eb-4ea8-a753-81b5a40b1032
      requestBody:
        description: RSYSLOG server to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogServer'
        required: true
      responses:
        "202":
          description: RSYSLOG server is added.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Cluster Rsyslog Server
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.common.v1.config.IPAddress;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.RsyslogNetworkProtocol;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.RsyslogServer;\nimport\
          \ com.nutanix.dp1.clu.clustermgmt.v4.config.CreateRsyslogServerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        RsyslogServer\
          \ rsyslogServer = new RsyslogServer();\n\n        // RsyslogServer object\
          \ initializations here...\n        rsyslogServer.setIpAddress(new IPAddress());\
          \  // required field\n        rsyslogServer.setNetworkProtocol(RsyslogNetworkProtocol.UNKNOWN);\
          \  // required field\n        rsyslogServer.setPort(1);  // required field\n\
          \        rsyslogServer.setServerName(\"testServer1\");  // required field\n\
          \        \n        String clusterExtId = \"6DAbdAc5-Af87-dbaf-27FB-4282a97C8eAB\"\
          ;\n\n        try {\n            CreateRsyslogServerApiResponse createRsyslogServerApiResponse\
          \ = clustersApi.createRsyslogServer(clusterExtId, rsyslogServer);\n    \
          \        System.out.println(createRsyslogServerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, IPAddress, RsyslogNetworkProtocol,\
          \ RsyslogServer } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure\
          \ the client\nlet apiClientInstance = new ApiClient();\n// IPv4/IPv6 address\
          \ or FQDN of the cluster\napiClientInstance.host = 'localhost';\n// Port\
          \ to which to connect to\napiClientInstance.port = '9440';\n// Max retry\
          \ attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let rsyslogServer = new RsyslogServer();\n\n    // RsyslogServer\
          \ object initializations here...\n    rsyslogServer.setIpAddress(new IPAddress());\
          \  // required field\n    rsyslogServer.setNetworkProtocol(RsyslogNetworkProtocol.UNKNOWN);\
          \  // required field\n    rsyslogServer.setPort(1);  // required field\n\
          \    rsyslogServer.setServerName(\"testServer1\");  // required field\n\n\
          \    \n    let clusterExtId = \"F7DdfFfD-2d60-fBdA-C4F3-91Cfeb6fDFe7\";\n\
          \n\n\n\n\n    clustersApi.createRsyslogServer(clusterExtId, rsyslogServer).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    rsyslogServer = ntnx_clustermgmt_py_client.RsyslogServer()\n\n    #\
          \ RsyslogServer object initializations here...\n    rsyslogServer.ip_address\
          \ = ntnx_clustermgmt_py_client.IPAddress()  # required field\n    rsyslogServer.network_protocol\
          \ = ntnx_clustermgmt_py_client.RsyslogNetworkProtocol._UNKNOWN  # required\
          \ field\n    rsyslogServer.port = 1  # required field\n    rsyslogServer.server_name\
          \ = \"testServer1\"  # required field\n    \n    cluster_ext_id = \"B0d7fece-205F-AaeA-6bEd-cb0eb6F65DDc\"\
          \n\n\n    try:\n        api_response = clusters_api.create_rsyslog_server(clusterExtId=cluster_ext_id,\
          \ body=rsyslogServer)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ rsyslogServer := import1.NewRsyslogServer()\n\n    // RsyslogServer object\
          \ initializations here...\n\n    \n    clusterExtId := \"eb29EdBa-fBA2-291e-520e-BFdFaDb16aca\"\
          \n\n\n    response, error := ClustersApiInstance.CreateRsyslogServer(&clusterExtId,\
          \ rsyslogServer)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/96fdcD21-ff5A-2Dc9-bba1-3ABFDF54E1De/rsyslog-servers" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Af9F80c4-3bC6-bEFe-62DD-895cdF2eBE1D/rsyslog-servers"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}:
    get:
      tags:
      - Clusters
      summary: Get RSYSLOG server configuration
      description: "Fetches the RSYSLOG server configuration identified by {extId}\
        \ associated with the cluster identified by {clusterExtId}."
      operationId: getRsyslogServerById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: daf742e0-a688-4559-83d4-d31274d21475
      - name: extId
        in: path
        description: RSYSLOG server UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 84f12841-5b49-45b0-8314-77de5c122f9e
      responses:
        "200":
          description: The requested RSYSLOG server configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogServer'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Rsyslog Server
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetRsyslogServerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"bBB6EDbF-aF28-Fbca-bCcC-BbC83d6f83cB\"\
          ;\n        \n        String extId = \"A4BEc8Be-4D0c-4b01-1c0c-48BeDB8AF3Ef\"\
          ;\n\n        try {\n            GetRsyslogServerApiResponse getRsyslogServerApiResponse\
          \ = clustersApi.getRsyslogServerById(clusterExtId, extId);\n           \
          \ System.out.println(getRsyslogServerApiResponse.toString());\n\n      \
          \  } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"EFd8eF16-AB7d-E0ea-E1cD-E72d50Fe69Db\"\
          ;\n    \n    let extId = \"A8C2ecDd-D0f7-5cBa-8AAc-BcdEadAfD70C\";\n\n\n\
          \n\n\n    clustersApi.getRsyslogServerById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"91F48BB2-eBDF-5faF-4e62-75d7dC5DEcA6\"\n \
          \   \n    ext_id = \"3Cdb81aD-daEF-d7f2-cf95-1dCFEAecfa3f\"\n\n\n    try:\n\
          \        api_response = clusters_api.get_rsyslog_server_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"dfDcBbD1-a5dE-a8aE-Cd7E-B0CecBCeaf4d\"\n    \n\
          \    extId := \"5dEB5e92-FC56-AC2F-2b2e-f66fCAda6700\"\n\n\n    response,\
          \ error := ClustersApiInstance.GetRsyslogServerById(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.RsyslogServer)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/efE0cfAD-f49c-5Da1-e05a-FACceaa92Cd1/rsyslog-servers/1c6702bD-eFEf-F4A3-ddE6-CE87aeAA579F" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/B6FBEe8c-B58b-fB57-D0aa-2E1A35ccd60C/rsyslog-servers/7cd2ea7C-C03e-E351-baDA-Dad8A2DeEbeC"
    put:
      tags:
      - Clusters
      summary: Update RSYSLOG server configuration
      description: Update RSYSLOG server configuration except RSYSLOG server name
        as it is a primary key of the entity.
      operationId: updateRsyslogServerById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 3b4868c4-da97-4e2c-8dfd-cd5459984ca1
      - name: extId
        in: path
        description: RSYSLOG server UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d540ab6d-1850-43f4-80e3-c13a86cc0149
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: RSYSLOG server to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogServer'
        required: true
      responses:
        "202":
          description: RSYSLOG server is updated.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Cluster Rsyslog Server
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.common.v1.config.IPAddress;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.RsyslogNetworkProtocol;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.RsyslogServer;\nimport\
          \ com.nutanix.dp1.clu.clustermgmt.v4.config.GetRsyslogServerApiResponse;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UpdateRsyslogServerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        RsyslogServer\
          \ rsyslogServer = new RsyslogServer();\n\n        // RsyslogServer object\
          \ initializations here...\n        rsyslogServer.setIpAddress(new IPAddress());\
          \  // required field\n        rsyslogServer.setNetworkProtocol(RsyslogNetworkProtocol.UNKNOWN);\
          \  // required field\n        rsyslogServer.setPort(1);  // required field\n\
          \        rsyslogServer.setServerName(\"testServer1\");  // required field\n\
          \        \n        String clusterExtId = \"eDf0C31c-fBdb-9CfF-c2Cb-aC65bf36a5C3\"\
          ;\n        \n        String extId = \"ae9AC59F-7beb-1dc0-821a-Dd3Bfb01c4aB\"\
          ;\n\n        // perform GET call\n        GetRsyslogServerApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = clustersApi.getRsyslogServerById(clusterExtId,\
          \ extId);\n        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateRsyslogServerApiResponse updateRsyslogServerApiResponse\
          \ = clustersApi.updateRsyslogServerById(clusterExtId, extId, rsyslogServer,\
          \ opts);\n            System.out.println(updateRsyslogServerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, IPAddress, RsyslogNetworkProtocol,\
          \ RsyslogServer, GetRsyslogServerApiResponse } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let rsyslogServer = new RsyslogServer();\n\n    // RsyslogServer\
          \ object initializations here...\n    rsyslogServer.setIpAddress(new IPAddress());\
          \  // required field\n    rsyslogServer.setNetworkProtocol(RsyslogNetworkProtocol.UNKNOWN);\
          \  // required field\n    rsyslogServer.setPort(1);  // required field\n\
          \    rsyslogServer.setServerName(\"testServer1\");  // required field\n\n\
          \    \n    let clusterExtId = \"bd4Df15a-1Eea-FA1e-CEae-BCaa10E101C6\";\n\
          \    \n    let extId = \"aA68B622-68d9-C4FA-7DD5-3BfefC25dEDA\";\n\n\n \
          \   // Perform Get call\n    clustersApi.getRsyslogServerById(clusterExtId,\
          \ extId).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        // Extract E-Tag\
          \ Header\n        let etagValue = ApiClient.getEtag(data);\n\n        clustersApi.updateRsyslogServerById(clusterExtId,\
          \ extId, rsyslogServer, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    rsyslogServer = ntnx_clustermgmt_py_client.RsyslogServer()\n\n    #\
          \ RsyslogServer object initializations here...\n    rsyslogServer.ip_address\
          \ = ntnx_clustermgmt_py_client.IPAddress()  # required field\n    rsyslogServer.network_protocol\
          \ = ntnx_clustermgmt_py_client.RsyslogNetworkProtocol._UNKNOWN  # required\
          \ field\n    rsyslogServer.port = 1  # required field\n    rsyslogServer.server_name\
          \ = \"testServer1\"  # required field\n    \n    cluster_ext_id = \"8FDCeB7F-CDed-c3c2-edaF-B9bFb75eFCDB\"\
          \n    \n    ext_id = \"a37efdB1-FD6e-bd8e-eb2b-f8A976CAd0Cb\"\n\n    try:\n\
          \        api_response = clusters_api.get_rsyslog_server_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n    # Extract E-Tag Header\n    etag_value =\
          \ ntnx_clustermgmt_py_client.ApiClient.get_etag(api_response)\n\n    try:\n\
          \        api_response = clusters_api.update_rsyslog_server_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id, body=rsyslogServer, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ rsyslogServer := import1.NewRsyslogServer()\n\n    // RsyslogServer object\
          \ initializations here...\n\n    \n    clusterExtId := \"Cbec2daA-dd5D-bC6F-CaAA-88dfCc05C92d\"\
          \n    \n    extId := \"972e06D9-9cCA-aACc-edbe-3cFACfD7AdAC\"\n\n    getResponse,\
          \ err := ClustersApiInstance.GetRsyslogServerById(&clusterExtId, &extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := ClustersApiInstance.UpdateRsyslogServerById(&clusterExtId,\
          \ &extId, rsyslogServer, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/1D16C75c-a7f6-C96A-8D2a-b64197bbA79d/rsyslog-servers/7EBBee1f-FcCd-bfaF-0aAd-cAE52afcaaDd" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"serverName":"testServer1","ipAddress":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"port":0,"networkProtocol":"$UNKNOWN","modules":[{"name":"$UNKNOWN","logSeverityLevel":"$UNKNOWN","shouldLogMonitorFiles":true,"$objectType":"clustermgmt.v4.config.RsyslogModuleItem"}],"$objectType":"clustermgmt.v4.config.RsyslogServer"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/c49774d6-e3E6-7FCa-3b5A-bCfDB8d6Fc0C/rsyslog-servers/8B9BAa3a-5aa6-d50e-dEFB-3a34bf721aDb"
    delete:
      tags:
      - Clusters
      summary: Delete RSYSLOG server configuration
      description: "Deletes RSYSLOG server configuration identified by {extId} associated\
        \ with the cluster identified by {clusterExtId}."
      operationId: deleteRsyslogServerById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: cab9d667-7e5e-48a1-8349-93b77f24d044
      - name: extId
        in: path
        description: RSYSLOG server UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: be1ae4ac-2778-4bd0-bb29-25ea7b111e49
      responses:
        "202":
          description: RSYSLOG server is deleted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Cluster Rsyslog Server
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DeleteRsyslogServerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"b9FdCa34-173E-DFA0-b1ad-D0cB9DDEEE8D\"\
          ;\n        \n        String extId = \"eCA2Acbe-F0eA-1ec3-e15d-6dcedCe5a901\"\
          ;\n\n        try {\n            DeleteRsyslogServerApiResponse deleteRsyslogServerApiResponse\
          \ = clustersApi.deleteRsyslogServerById(clusterExtId, extId);\n        \
          \    System.out.println(deleteRsyslogServerApiResponse.toString());\n\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"Fe6eD3F0-9DdF-63FB-CA4c-42B6811efB09\"\
          ;\n    \n    let extId = \"dd9BbfFB-89eD-Be6F-C3fE-6Bb807bFd7Ae\";\n\n\n\
          \n\n\n    clustersApi.deleteRsyslogServerById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"dFFfbe30-dD0b-6b2d-2a4a-Ad9aB781E2CD\"\n \
          \   \n    ext_id = \"23Ed5EcC-CdcA-9DAe-fdAB-DFB5BBab8Dcb\"\n\n\n    try:\n\
          \        api_response = clusters_api.delete_rsyslog_server_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"FcB40FaB-aaBf-dadb-FefD-05eac4F7e3D0\"\n    \n\
          \    extId := \"d9Fd6ECD-CaeB-FfAA-3cFa-DAdbccF1b43B\"\n\n\n    response,\
          \ error := ClustersApiInstance.DeleteRsyslogServerById(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/444B2ee1-f073-8EC9-EEBa-e6DDdD7CaAdD/rsyslog-servers/d1EC8C7F-4CAE-FcA8-8AdB-f6e0Bf5Bbd85" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/bc6B9c4F-d49C-Fbfc-aACc-dbA0B99Da4f4/rsyslog-servers/F41aa1D8-11Cf-cEd7-c4e8-faAeECbbB1de"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units:
    get:
      tags:
      - Clusters
      summary: Get the list of rackable units
      description: "Lists the rackable units of the cluster identified by {clusterExtId}."
      operationId: listRackableUnitsByClusterId
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 066d1d0c-08dc-49af-b8b5-0e00b8416a0b
      responses:
        "200":
          description: The requested rackable unit entities.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    maxItems: 10
                    minItems: 0
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.RackableUnit'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Rackable Unit
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListRackableUnitsByClusterIdApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"c5C6fDC3-A3bF-4F36-cFaa-D2aF61CcaF79\"\
          ;\n\n        try {\n            ListRackableUnitsByClusterIdApiResponse\
          \ listRackableUnitsByClusterIdApiResponse = clustersApi.listRackableUnitsByClusterId(clusterExtId);\n\
          \            System.out.println(listRackableUnitsByClusterIdApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"afD6ebcC-5B96-bd3c-FA7d-CDDd6b3AD9Cd\"\
          ;\n\n\n\n\n\n    clustersApi.listRackableUnitsByClusterId(clusterExtId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"8eECD7bF-eDBc-c6CC-50D1-c12FAEeBeFaA\"\n\n\
          \n    try:\n        api_response = clusters_api.list_rackable_units_by_cluster_id(clusterExtId=cluster_ext_id)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"668e01d0-BF9D-2fFb-4BfC-bA5DecBeF0cd\"\n\n\n \
          \   response, error := ClustersApiInstance.ListRackableUnitsByClusterId(&clusterExtId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().([]import1.RackableUnit)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/1dBdCaAd-bc8f-d5aF-fc7D-f38d6C93Ebdb/rackable-units" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Fa275Aac-8f6F-dcbC-FCaB-CD7B0B4CFC9C/rackable-units"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units/{extId}:
    get:
      tags:
      - Clusters
      summary: Get the rackable unit details
      description: "Fetches the rackable unit entity details identified by {extId}\
        \  of the cluster identified by {clusterExtId}."
      operationId: getRackableUnitById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 41ade2ef-7400-41c0-830a-4c1f6e065b74
      - name: extId
        in: path
        description: Rackable unit UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c1b7d355-1a9f-4631-9d4b-cdf2adba841e
      responses:
        "200":
          description: The requested rackable unit entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.RackableUnit'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Rackable Unit
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetRackableUnitApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"8b4bCFf0-ACde-d9db-AFad-05Cf4dbE523f\"\
          ;\n        \n        String extId = \"3eCCd3Df-4bC3-836C-8D64-FfDcdEf7F3Fb\"\
          ;\n\n        try {\n            GetRackableUnitApiResponse getRackableUnitApiResponse\
          \ = clustersApi.getRackableUnitById(clusterExtId, extId);\n            System.out.println(getRackableUnitApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"cdF6ABfd-e79D-a8B6-EDF7-cDee596a22fB\"\
          ;\n    \n    let extId = \"8A1a1Dcd-Aa5e-aAa9-Cc3B-a8BEdBC6D7EB\";\n\n\n\
          \n\n\n    clustersApi.getRackableUnitById(clusterExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"fbd9CcFf-c26d-CEDE-BebC-9dfF2C63bCe8\"\n \
          \   \n    ext_id = \"5d6D8bDD-5adF-1a5f-fBFE-e75b6e9FaDCd\"\n\n\n    try:\n\
          \        api_response = clusters_api.get_rackable_unit_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"ff36CdbB-caB8-14BE-ecdB-99BCDcd98FC4\"\n    \n\
          \    extId := \"dFA8cdaa-Ea1b-B6cb-Ed7c-AEDaBbcbeEbF\"\n\n\n    response,\
          \ error := ClustersApiInstance.GetRackableUnitById(&clusterExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.RackableUnit)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/eccf7e7E-Fc06-c4d8-D2A3-5e5F457dC0d5/rackable-units/Cf60b1CA-9B98-1a6d-fa7b-ffd4bb31bF34" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/DfD61E20-B1d7-EF8d-3ada-6c4E5180bf8f/rackable-units/b85FDa48-FD5b-A429-DdFf-CeD5b35b579a"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}:
    get:
      tags:
      - Clusters
      summary: Get the details of host associated with the cluster
      description: "Fetches the details of the host identified by {extId} associated\
        \ with the cluster identified by {clusterExtId}."
      operationId: getHostById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 7748a0d0-6fbe-45f3-a69a-541aae7aafb4
      - name: extId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 2d170602-d2e7-47fe-ac4e-af4b8a7b0a65
      responses:
        "200":
          description: The requested Host entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.Host'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Host
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - VPC Admin
        - Network Infra Admin
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Storage Admin
        - Super Admin
        - Monitoring Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetHostApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"9d22Fcfc-EE5F-f8e7-ff2b-Af9Ffcde77DD\"\
          ;\n        \n        String extId = \"EddfAcB0-CdCc-F8Cb-5cEd-d7dcfB594Ba6\"\
          ;\n\n        try {\n            GetHostApiResponse getHostApiResponse =\
          \ clustersApi.getHostById(clusterExtId, extId);\n            System.out.println(getHostApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"fCFBbEB2-d97e-f99D-D65D-8FecBC6afb4d\"\
          ;\n    \n    let extId = \"FA8DFbFB-3FFA-9a96-CEFb-A29DCDcfc2DB\";\n\n\n\
          \n\n\n    clustersApi.getHostById(clusterExtId, extId).then(({data, response})\
          \ => {\n        console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"b2afB03A-5Ec8-EC05-bfCA-fcDCB6125bE1\"\n \
          \   \n    ext_id = \"e9DDA82B-5bfd-a8EB-6b3E-fb25A3Dd3C6B\"\n\n\n    try:\n\
          \        api_response = clusters_api.get_host_by_id(clusterExtId=cluster_ext_id,\
          \ extId=ext_id)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"76DCb506-a7Ea-fAaf-7E4E-26E2ecDbB91D\"\n    \n\
          \    extId := \"9CA30F9b-47bA-bC0f-f3bd-13Cad3f8fAFC\"\n\n\n    response,\
          \ error := ClustersApiInstance.GetHostById(&clusterExtId, &extId)\n    if\
          \ error != nil {\n        fmt.Println(error)\n        return\n    }\n  \
          \  data, _ := response.GetData().(import1.Host)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Fce9cA2B-4cbC-1CBE-2dE8-2D9bE963F2bB/hosts/D9eBbFcB-F151-75e8-0dcf-1f2fDfcBB17D" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/3eAdA2DB-b2fE-8bf2-9E59-021dAB8caFE5/hosts/3C3E6E73-4Cee-9103-BBFD-638fBFfd8e0D"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts:
    get:
      tags:
      - Clusters
      summary: Get the list of hosts associated with a cluster
      description: "Lists all the hosts associated with the cluster identified by\
        \ {clusterExtId}."
      operationId: listHostsByClusterId
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: aeaa6dca-4399-4027-b2f2-da94917aca32
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - bootTimeUsecs
          - cluster/name
          - cluster/uuid
          - cpuCapacityHz
          - cpuFrequencyHz
          - cpuModel
          - defaultVhdContainerUuid
          - defaultVhdLocation
          - defaultVmContainerUuid
          - defaultVmLocation
          - extId
          - gpuDriverVersion
          - gpuList
          - hostName
          - hypervisor/type
          - memorySizeBytes
          - numberOfCpuCores
          - numberOfCpuSockets
          - numberOfCpuThreads
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - cluster/name
          - extId
          - hostName
          - hostType
          - hypervisor/type
          - memorySizeBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $apply
        in: query
        description: |
          A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '$apply=groupby((templateName))' would get all templates grouped by templateName.
          The groupby can be applied on the following fields:
          - cluster/name
          - hypervisor/type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - blockModel
          - blockSerial
          - bootTimeUsecs
          - cluster
          - cpuCapacityHz
          - cpuFrequencyHz
          - cpuModel
          - defaultVhdContainerUuid
          - defaultVhdLocation
          - defaultVmContainerUuid
          - defaultVmLocation
          - failoverClusterFqdn
          - failoverClusterNodeStatus
          - gpuDriverVersion
          - gpuList
          - hostName
          - hostType
          - isRebootPending
          - maintenanceState
          - memorySizeBytes
          - nodeStatus
          - numberOfCpuCores
          - numberOfCpuSockets
          - numberOfCpuThreads
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Host entities.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.Host'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Host
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
        - VPC Admin
        - Network Infra Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListHostsByClusterIdApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"f0e4BE9d-FB1a-5FeB-dB3b-dA7C0d2cb96e\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListHostsByClusterIdApiResponse listHostsByClusterIdApiResponse\
          \ = clustersApi.listHostsByClusterId(clusterExtId, page, limit, null, null,\
          \ null, null);\n            System.out.println(listHostsByClusterIdApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"2be1E06b-37f8-B70D-AC7d-E1e842c902ad\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n    opts[\"$apply\"\
          ] = \"string_sample_data\";\n    opts[\"$select\"] = \"string_sample_data\"\
          ;\n\n\n\n\n    clustersApi.listHostsByClusterId(clusterExtId, opts).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"aCdf1Fcc-264d-F0B7-4b02-f1B56F68bD4e\"\n \
          \   \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = clusters_api.list_hosts_by_cluster_id(clusterExtId=cluster_ext_id, _page=page,\
          \ _limit=limit)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"bcC3Cacd-B4bA-BFa0-f52c-51CF7ABeDe25\"\n    \n\
          \    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := ClustersApiInstance.ListHostsByClusterId(&clusterExtId,\
          \ &page_, &limit_, nil, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Host)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/2aFb3CfB-fe2d-34F6-b0e8-Ba205DA7DdcA/hosts?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/7a17A3bb-4FF8-79Cb-6b5A-A8Ed8CCd0aaB/hosts?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/discover-unconfigured-nodes:
    post:
      tags:
      - Clusters
      summary: Discover unconfigured nodes
      description: "Get the unconfigured node details such as node UUID, node position,\
        \ node IP, foundation version and more."
      operationId: discoverUnconfiguredNodes
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b5e5b85d-4d5c-46ff-a02c-f6b5af603038
      requestBody:
        description: Discover unconfigured node details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeDiscoveryParams'
        required: true
      responses:
        "202":
          description: Returns the task UUID which can be used to track the progress
            and the node discovery information.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/discover-unconfigured-nodes\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/discover-unconfigured-nodes\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/discover-unconfigured-nodes\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Discover Cluster Unconfigured Nodes
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.NodeDiscoveryParams;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.DiscoverUnconfiguredNodesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        NodeDiscoveryParams\
          \ nodeDiscoveryParams = new NodeDiscoveryParams();\n\n        // NodeDiscoveryParams\
          \ object initializations here...\n        \n        String clusterExtId\
          \ = \"169ce2b7-faaD-Dddd-E95c-Acf79DCF8eC9\";\n\n        try {\n       \
          \     DiscoverUnconfiguredNodesApiResponse discoverUnconfiguredNodesApiResponse\
          \ = clustersApi.discoverUnconfiguredNodes(clusterExtId, nodeDiscoveryParams);\n\
          \            System.out.println(discoverUnconfiguredNodesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, NodeDiscoveryParams } from \"\
          @nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet clustersApi\
          \ = new ClustersApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ nodeDiscoveryParams = new NodeDiscoveryParams();\n\n    // NodeDiscoveryParams\
          \ object initializations here...\n\n    \n    let clusterExtId = \"dEf9DFAb-19bF-B6Bd-55E1-DACfBe0fEdFB\"\
          ;\n\n\n\n\n\n    clustersApi.discoverUnconfiguredNodes(clusterExtId, nodeDiscoveryParams).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    nodeDiscoveryParams = ntnx_clustermgmt_py_client.NodeDiscoveryParams()\n\
          \n    # NodeDiscoveryParams object initializations here...\n    \n    cluster_ext_id\
          \ = \"DaeCF51F-62Fa-83Ce-dBE2-8C0Ecd8DEf2F\"\n\n\n    try:\n        api_response\
          \ = clusters_api.discover_unconfigured_nodes(clusterExtId=cluster_ext_id,\
          \ body=nodeDiscoveryParams)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ nodeDiscoveryParams := import1.NewNodeDiscoveryParams()\n\n    // NodeDiscoveryParams\
          \ object initializations here...\n\n    \n    clusterExtId := \"CAe94Be0-fCBE-F1B5-adBa-1CAA55B1386f\"\
          \n\n\n    response, error := ClustersApiInstance.DiscoverUnconfiguredNodes(&clusterExtId,\
          \ nodeDiscoveryParams)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/A1DAa0Db-CAFc-e4B7-Feb2-9Ad7bBeBDFA4/$actions/discover-unconfigured-nodes" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"addressType":"$UNKNOWN","ipFilterList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"}],"uuidFilterList":["string"],"timeout":0,"interfaceFilterList":["TestInterfacename"],"isManualDiscovery":true,"$objectType":"clustermgmt.v4.config.NodeDiscoveryParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"addressType":"$UNKNOWN","ipFilterList":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"}],"uuidFilterList":["string"],"timeout":0,"interfaceFilterList":["TestInterfacename"],"isManualDiscovery":true,"$objectType":"clustermgmt.v4.config.NodeDiscoveryParams"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/24FB3CBe-6Ba2-531d-EdAD-ABdfFC91Ac1F/$actions/discover-unconfigured-nodes"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/fetch-node-networking-details:
    post:
      tags:
      - Clusters
      summary: Get network information of unconfigured nodes
      description: Get a dictionary of cluster networks and available uplinks on the
        given nodes. This API is not supported for XEN hypervisor type.
      operationId: fetchNodeNetworkingDetails
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 2b37de6c-251b-4f35-90e4-812e62101c1b
      requestBody:
        description: Node specific details required to fetch node networking information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeDetails'
        required: true
      responses:
        "202":
          description: Returns the task UUID which can be used to track the progress
            and contains node networking information.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/fetch-node-networking-details\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/fetch-node-networking-details\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/fetch-node-networking-details\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Fetch Cluster Node Networking Details
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.NodeDetails;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.FetchNodeNetworkingDetailsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        NodeDetails\
          \ nodeDetails = new NodeDetails();\n\n        // NodeDetails object initializations\
          \ here...\n        nodeDetails.setNodeList(new ArrayList<>());  // required\
          \ field\n        \n        String clusterExtId = \"FB0FB630-efc8-eBcE-00dc-54ccaBd2ECFF\"\
          ;\n\n        try {\n            FetchNodeNetworkingDetailsApiResponse fetchNodeNetworkingDetailsApiResponse\
          \ = clustersApi.fetchNodeNetworkingDetails(clusterExtId, nodeDetails);\n\
          \            System.out.println(fetchNodeNetworkingDetailsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, NodeDetails } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let nodeDetails = new NodeDetails();\n\n    // NodeDetails object\
          \ initializations here...\n    nodeDetails.setNodeList([]);  // required\
          \ field\n\n    \n    let clusterExtId = \"D8aedA6E-DDF8-7Fdf-E2bf-Ef3cD83fca34\"\
          ;\n\n\n\n\n\n    clustersApi.fetchNodeNetworkingDetails(clusterExtId, nodeDetails).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    nodeDetails = ntnx_clustermgmt_py_client.NodeDetails()\n\n    # NodeDetails\
          \ object initializations here...\n    nodeDetails.node_list = []  # required\
          \ field\n    \n    cluster_ext_id = \"ABecdF5b-FaB8-64Ba-EAa5-a7fF2e5cb860\"\
          \n\n\n    try:\n        api_response = clusters_api.fetch_node_networking_details(clusterExtId=cluster_ext_id,\
          \ body=nodeDetails)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ nodeDetails := import1.NewNodeDetails()\n\n    // NodeDetails object initializations\
          \ here...\n\n    \n    clusterExtId := \"b88EaFAD-E0e1-Abdd-2Eb1-9dA3deE3cECD\"\
          \n\n\n    response, error := ClustersApiInstance.FetchNodeNetworkingDetails(&clusterExtId,\
          \ nodeDetails)\n    if error != nil {\n        fmt.Println(error)\n    \
          \    return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/Df0eb4EC-ffDD-9ded-2e2b-e060A962D8AE/$actions/fetch-node-networking-details" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"nodeList":[{"nodeUuid":"string","blockId":"TestBlockID","nodePosition":"A/B","cvmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"model":"NX-1065-G8","isComputeOnly":true,"isLightCompute":true,"hypervisorType":"$UNKNOWN","hypervisorVersion":"Nutanix20220304.480","nosVersion":"7.0","currentNetworkInterface":"eth0/eth1","isRoboMixedHypervisor":true,"$objectType":"clustermgmt.v4.config.NodeListNetworkingDetails"}],"requestType":"expand_cluster/npe","$objectType":"clustermgmt.v4.config.NodeDetails"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"nodeList":[{"nodeUuid":"string","blockId":"TestBlockID","nodePosition":"A/B","cvmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"model":"NX-1065-G8","isComputeOnly":true,"isLightCompute":true,"hypervisorType":"$UNKNOWN","hypervisorVersion":"Nutanix20220304.480","nosVersion":"7.0","currentNetworkInterface":"eth0/eth1","isRoboMixedHypervisor":true,"$objectType":"clustermgmt.v4.config.NodeListNetworkingDetails"}],"requestType":"expand_cluster/npe","$objectType":"clustermgmt.v4.config.NodeDetails"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/09Cd1Bdb-E6fd-EeEE-9eFf-6AFBcbDDF4Ea/$actions/fetch-node-networking-details"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/expand-cluster:
    post:
      tags:
      - Clusters
      summary: Add node on a cluster
      description: Add node on a cluster. This API is not supported for XEN hypervisor
        type.
      operationId: expandCluster
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 8ffb9b8b-a242-4d44-9052-d03a0e58b44d
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: f7b3d025-8e89-4940-870d-c2752371136a
      requestBody:
        description: Property of the node to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ExpandClusterParams'
        required: true
      responses:
        "202":
          description: Node added to cluster.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/expand-cluster\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/expand-cluster\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/expand-cluster\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Expand Cluster
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.NodeParam;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.ExpandClusterParams;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.ExpandClusterApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        ExpandClusterParams\
          \ expandClusterParams = new ExpandClusterParams();\n\n        // ExpandClusterParams\
          \ object initializations here...\n        expandClusterParams.setNodeParams(new\
          \ NodeParam());  // required field\n        \n        String clusterExtId\
          \ = \"b8DaeA2A-DD05-E288-8cEd-DEFAaFbC02eB\";\n\n        try {\n       \
          \     ExpandClusterApiResponse expandClusterApiResponse = clustersApi.expandCluster(clusterExtId,\
          \ expandClusterParams);\n            System.out.println(expandClusterApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, NodeParam, ExpandClusterParams\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let expandClusterParams = new ExpandClusterParams();\n\n    //\
          \ ExpandClusterParams object initializations here...\n    expandClusterParams.setNodeParams(new\
          \ NodeParam());  // required field\n\n    \n    let clusterExtId = \"aba7eaAe-CFCa-9fAD-662b-7B1bddeaD5ad\"\
          ;\n\n\n\n\n\n    clustersApi.expandCluster(clusterExtId, expandClusterParams).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    expandClusterParams = ntnx_clustermgmt_py_client.ExpandClusterParams()\n\
          \n    # ExpandClusterParams object initializations here...\n    expandClusterParams.node_params\
          \ = ntnx_clustermgmt_py_client.NodeParam()  # required field\n    \n   \
          \ cluster_ext_id = \"5Ca5b26c-2fDa-88F3-ABAD-AE1E6Ceb7DF0\"\n\n\n    try:\n\
          \        api_response = clusters_api.expand_cluster(clusterExtId=cluster_ext_id,\
          \ body=expandClusterParams)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ expandClusterParams := import1.NewExpandClusterParams()\n\n    // ExpandClusterParams\
          \ object initializations here...\n\n    \n    clusterExtId := \"c34BF5fE-C9Ed-12aF-cefC-DBA343DA9F9B\"\
          \n\n\n    response, error := ClustersApiInstance.ExpandCluster(&clusterExtId,\
          \ expandClusterParams)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/eefc7Cae-baaA-ADe9-dfbE-cAf2bf75Cecf/$actions/expand-cluster" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"nodeParams":{"blockList":[{"blockId":"8F3K144","rackName":"syd47-f01c64-au421","$objectType":"clustermgmt.v4.config.BlockItem"}],"nodeList":[{"nodeUuid":"string","blockId":"9F3K144","nodePosition":"B","hypervisorType":"$UNKNOWN","isRoboMixedHypervisor":true,"hypervisorHostname":"hestia03-2","hypervisorVersion":"Nutanix20220304.480","nosVersion":"7.0","isLightCompute":true,"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"cvmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"model":"NX-1065-G8","currentNetworkInterface":"eth0/eth1/Networkadapter1","networks":[{"name":"string","networks":["string"],"uplinks":{"active":[{"mac":"01:2B:3C:4D:5E:6F","name":"Main-Uplink","value":"10.0.0.1","$objectType":"clustermgmt.v4.config.UplinksField"}],"standby":[{"mac":"01:2B:3C:4D:5E:6F","name":"Main-Uplink","value":"10.0.0.1","$objectType":"clustermgmt.v4.config.UplinksField"}],"$objectType":"clustermgmt.v4.config.Uplinks"},"$objectType":"clustermgmt.v4.config.UplinkNetworkItem"}],"$objectType":"clustermgmt.v4.config.NodeItem"}],"computeNodeList":[{"nodeUuid":"string","blockId":"RU-987654321","nodePosition":"B","hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"hypervisorHostname":"hv-cluster-01","model":"NX-5000","$objectType":"clustermgmt.v4.config.ComputeNodeItem"}],"hypervisorIsos":[{"type":"$UNKNOWN","md5Sum":"Foremptystring==>d41d8cd98f00b204e9800998ecf8427e","$objectType":"clustermgmt.v4.config.HypervisorIsoMap"}],"hypervSku":"datacenter_gui","bundleInfo":{"name":"TestBundleName","$objectType":"clustermgmt.v4.config.BundleInfo"},"shouldSkipHostNetworking":true,"$objectType":"clustermgmt.v4.config.NodeParam"},"configParams":{"shouldSkipDiscovery":true,"shouldSkipImaging":true,"shouldValidateRackAwareness":true,"isNosCompatible":true,"isComputeOnly":true,"isNeverScheduleable":true,"targetHypervisor":"kvm","hyperv":{"domainDetails":{"userName":"TestUserName","password":"TestUserPassword","clusterName":"TestClusterName","$objectType":"clustermgmt.v4.config.UserInfo"},"failoverClusterDetails":{"userName":"TestUserName","password":"TestUserPassword","clusterName":"TestClusterName","$objectType":"clustermgmt.v4.config.UserInfo"},"$objectType":"clustermgmt.v4.config.HypervCredentials"},"$objectType":"clustermgmt.v4.config.ConfigParams"},"shouldSkipAddNode":true,"shouldSkipPreExpandChecks":true,"$objectType":"clustermgmt.v4.config.ExpandClusterParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"nodeParams":{"blockList":[{"blockId":"8F3K144","rackName":"syd47-f01c64-au421","$objectType":"clustermgmt.v4.config.BlockItem"}],"nodeList":[{"nodeUuid":"string","blockId":"9F3K144","nodePosition":"B","hypervisorType":"$UNKNOWN","isRoboMixedHypervisor":true,"hypervisorHostname":"hestia03-2","hypervisorVersion":"Nutanix20220304.480","nosVersion":"7.0","isLightCompute":true,"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"cvmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"model":"NX-1065-G8","currentNetworkInterface":"eth0/eth1/Networkadapter1","networks":[{"name":"string","networks":["string"],"uplinks":{"active":[{"mac":"01:2B:3C:4D:5E:6F","name":"Main-Uplink","value":"10.0.0.1","$objectType":"clustermgmt.v4.config.UplinksField"}],"standby":[{"mac":"01:2B:3C:4D:5E:6F","name":"Main-Uplink","value":"10.0.0.1","$objectType":"clustermgmt.v4.config.UplinksField"}],"$objectType":"clustermgmt.v4.config.Uplinks"},"$objectType":"clustermgmt.v4.config.UplinkNetworkItem"}],"$objectType":"clustermgmt.v4.config.NodeItem"}],"computeNodeList":[{"nodeUuid":"string","blockId":"RU-987654321","nodePosition":"B","hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"hypervisorHostname":"hv-cluster-01","model":"NX-5000","$objectType":"clustermgmt.v4.config.ComputeNodeItem"}],"hypervisorIsos":[{"type":"$UNKNOWN","md5Sum":"Foremptystring==>d41d8cd98f00b204e9800998ecf8427e","$objectType":"clustermgmt.v4.config.HypervisorIsoMap"}],"hypervSku":"datacenter_gui","bundleInfo":{"name":"TestBundleName","$objectType":"clustermgmt.v4.config.BundleInfo"},"shouldSkipHostNetworking":true,"$objectType":"clustermgmt.v4.config.NodeParam"},"configParams":{"shouldSkipDiscovery":true,"shouldSkipImaging":true,"shouldValidateRackAwareness":true,"isNosCompatible":true,"isComputeOnly":true,"isNeverScheduleable":true,"targetHypervisor":"kvm","hyperv":{"domainDetails":{"userName":"TestUserName","password":"TestUserPassword","clusterName":"TestClusterName","$objectType":"clustermgmt.v4.config.UserInfo"},"failoverClusterDetails":{"userName":"TestUserName","password":"TestUserPassword","clusterName":"TestClusterName","$objectType":"clustermgmt.v4.config.UserInfo"},"$objectType":"clustermgmt.v4.config.HypervCredentials"},"$objectType":"clustermgmt.v4.config.ConfigParams"},"shouldSkipAddNode":true,"shouldSkipPreExpandChecks":true,"$objectType":"clustermgmt.v4.config.ExpandClusterParams"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/f68188fd-F26d-d38f-beDE-ccaa2E4ADf1C/$actions/expand-cluster"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/check-hypervisor-requirements:
    post:
      tags:
      - Clusters
      summary: Get hypervisor ISO upload information
      description: Provides information on whether hypervisor ISO upload is required
        or not. This API is not supported for XEN hypervisor type.
      operationId: checkHypervisorRequirements
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 178f99c3-dc1e-4ed3-b82e-615b498e2c8b
      requestBody:
        description: Parameters to get information on whether hypervisor ISO upload
          is required or not.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorUploadParam'
        required: true
      responses:
        "202":
          description: Provides information on whether hypervisor ISO upload is required
            or not. This API is not supported for XEN hypervisor type.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/check-hypervisor-requirements\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/check-hypervisor-requirements\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/check-hypervisor-requirements\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Check Cluster Hypervisor Requirements
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.HypervisorUploadParam;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.CheckHypervisorRequirementsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        HypervisorUploadParam\
          \ hypervisorUploadParam = new HypervisorUploadParam();\n\n        // HypervisorUploadParam\
          \ object initializations here...\n        hypervisorUploadParam.setNodeList(new\
          \ ArrayList<>());  // required field\n        \n        String clusterExtId\
          \ = \"fAADfAd2-6c7e-3dFd-6a35-bdBadBB33B17\";\n\n        try {\n       \
          \     CheckHypervisorRequirementsApiResponse checkHypervisorRequirementsApiResponse\
          \ = clustersApi.checkHypervisorRequirements(clusterExtId, hypervisorUploadParam);\n\
          \            System.out.println(checkHypervisorRequirementsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, HypervisorUploadParam } from \"\
          @nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet clustersApi\
          \ = new ClustersApi(apiClientInstance);\n\nfunction sample() {\n    let\
          \ hypervisorUploadParam = new HypervisorUploadParam();\n\n    // HypervisorUploadParam\
          \ object initializations here...\n    hypervisorUploadParam.setNodeList([]);\
          \  // required field\n\n    \n    let clusterExtId = \"4aF04DfF-09A2-dFDF-aF92-Bb0a6AFbccBA\"\
          ;\n\n\n\n\n\n    clustersApi.checkHypervisorRequirements(clusterExtId, hypervisorUploadParam).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    hypervisorUploadParam = ntnx_clustermgmt_py_client.HypervisorUploadParam()\n\
          \n    # HypervisorUploadParam object initializations here...\n    hypervisorUploadParam.node_list\
          \ = []  # required field\n    \n    cluster_ext_id = \"dBC5ebeD-aBc7-A0D8-1aa7-1dAd171bb1Bf\"\
          \n\n\n    try:\n        api_response = clusters_api.check_hypervisor_requirements(clusterExtId=cluster_ext_id,\
          \ body=hypervisorUploadParam)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ hypervisorUploadParam := import1.NewHypervisorUploadParam()\n\n    //\
          \ HypervisorUploadParam object initializations here...\n\n    \n    clusterExtId\
          \ := \"dBB0bf4F-ecDb-bE0b-c18C-c9fBDfbbd174\"\n\n\n    response, error :=\
          \ ClustersApiInstance.CheckHypervisorRequirements(&clusterExtId, hypervisorUploadParam)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/EA83eDdd-eEFa-e33B-4aBc-1Cd7dA2fFdbF/$actions/check-hypervisor-requirements" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"nodeList":[{"nodeUuid":"string","hypervisorVersion":"Nutanix20220304.480","nosVersion":"7.0","model":"NX-8155-G","blockId":"8F3K144","isLightCompute":true,"hypervisorType":"$UNKNOWN","isRoboMixedHypervisor":true,"isMinimumComputeNode":true,"$objectType":"clustermgmt.v4.config.HypervisorUploadNodeListItem"}],"$objectType":"clustermgmt.v4.config.HypervisorUploadParam"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"nodeList":[{"nodeUuid":"string","hypervisorVersion":"Nutanix20220304.480","nosVersion":"7.0","model":"NX-8155-G","blockId":"8F3K144","isLightCompute":true,"hypervisorType":"$UNKNOWN","isRoboMixedHypervisor":true,"isMinimumComputeNode":true,"$objectType":"clustermgmt.v4.config.HypervisorUploadNodeListItem"}],"$objectType":"clustermgmt.v4.config.HypervisorUploadParam"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/C1cFA2eA-3EF9-CfAD-4CD9-1eD68e5EcD02/$actions/check-hypervisor-requirements"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/validate-node:
    post:
      tags:
      - Clusters
      summary: Validates hypervisor bundle and node uplinks
      description: Validates hypervisor bundle and node uplinks of the node. This
        API is not supported for XEN hypervisor type.
      operationId: validateNode
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d32cec99-4daf-45da-8b1d-c7b12bfcbdac
      requestBody:
        description: Request body for node validation. It can be OneOf between hypervisor
          bundle and node uplinks.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ValidateNodeParam'
        required: true
      responses:
        "202":
          description: Task generated for node validation.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/validate-node\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/validate-node\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/validate-node\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Validate Cluster Node
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ValidateNodeParam;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.ValidateNodeApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        ValidateNodeParam\
          \ validateNodeParam = new ValidateNodeParam();\n\n        // ValidateNodeParam\
          \ object initializations here...\n        validateNodeParam.setSpec(SOME_RAW_DATA);\
          \  // required field\n        \n        String clusterExtId = \"14bd9Da0-BcaD-07dC-b6c0-9DCfdFe3AcfF\"\
          ;\n\n        try {\n            ValidateNodeApiResponse validateNodeApiResponse\
          \ = clustersApi.validateNode(clusterExtId, validateNodeParam);\n       \
          \     System.out.println(validateNodeApiResponse.toString());\n\n      \
          \  } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, ValidateNodeParam } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let validateNodeParam = new ValidateNodeParam();\n\n    // ValidateNodeParam\
          \ object initializations here...\n    validateNodeParam.setSpec(SOME_RAW_DATA);\
          \  // required field\n\n    \n    let clusterExtId = \"e3Eb2bD1-B0d3-Ae8f-a025-e031DEf088cA\"\
          ;\n\n\n\n\n\n    clustersApi.validateNode(clusterExtId, validateNodeParam).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    validateNodeParam = ntnx_clustermgmt_py_client.ValidateNodeParam()\n\
          \n    # ValidateNodeParam object initializations here...\n    validateNodeParam.spec\
          \ = SOME_RAW_DATA  # required field\n    \n    cluster_ext_id = \"f4D763eA-aaeF-CeDD-ECE6-3b11B3E42ABd\"\
          \n\n\n    try:\n        api_response = clusters_api.validate_node(clusterExtId=cluster_ext_id,\
          \ body=validateNodeParam)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ validateNodeParam := import1.NewValidateNodeParam()\n\n    // ValidateNodeParam\
          \ object initializations here...\n\n    \n    clusterExtId := \"BBB9CaeF-CFe9-CACc-6f3F-9eccf0bC39B2\"\
          \n\n\n    response, error := ClustersApiInstance.ValidateNode(&clusterExtId,\
          \ validateNodeParam)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/75Cb39de-fcF3-eaee-E2cF-EC14eBb8C85C/$actions/validate-node" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"spec":{"bundleInfo":{"name":"TestBundleName","$objectType":"clustermgmt.v4.config.BundleInfo"},"nodeList":[{"nodeUuid":"string","blockId":"RU-123456789","nodePosition":"A","hypervisorType":"$UNKNOWN","isRoboMixedHypervisor":true,"hypervisorHostname":"string","hypervisorVersion":"Nutanix20220304.480","nosVersion":"6.5.4","isLightCompute":true,"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"cvmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"model":"string","currentNetworkInterface":"string","$objectType":"clustermgmt.v4.config.NodeInfo"}],"$objectType":"clustermgmt.v4.config.BundleParam"},"$objectType":"clustermgmt.v4.config.ValidateNodeParam"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"spec":{"bundleInfo":{"name":"TestBundleName","$objectType":"clustermgmt.v4.config.BundleInfo"},"nodeList":[{"nodeUuid":"string","blockId":"RU-123456789","nodePosition":"A","hypervisorType":"$UNKNOWN","isRoboMixedHypervisor":true,"hypervisorHostname":"string","hypervisorVersion":"Nutanix20220304.480","nosVersion":"6.5.4","isLightCompute":true,"ipmiIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"digitalCertificateMapList":[{"key":"TestDigitalcertificateKeyName","value":"TestDigitalcertificateKeyValue","$objectType":"clustermgmt.v4.config.DigitalCertificateMapReference"}],"cvmIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"hypervisorIp":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"$objectType":"common.v1.config.IPAddress"},"model":"string","currentNetworkInterface":"string","$objectType":"clustermgmt.v4.config.NodeInfo"}],"$objectType":"clustermgmt.v4.config.BundleParam"},"$objectType":"clustermgmt.v4.config.ValidateNodeParam"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/8CA9DBdC-D6D8-C416-9DCc-Ce6f4bB8bECD/$actions/validate-node"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/remove-node:
    post:
      tags:
      - Clusters
      summary: Remove nodes from the cluster
      description: "Removes nodes from cluster identified by {extId}."
      operationId: removeNode
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 54f963ae-834d-4ea0-9151-393d770bd825
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: c058eaeb-5b41-4b26-acbd-f456be1ac97d
      requestBody:
        description: Parameters to remove nodes from cluster.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeRemovalParams'
        required: true
      responses:
        "202":
          description: Task generated for node removal.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/remove-node\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/remove-node\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/remove-node\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Remove Cluster Node
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.NodeRemovalParams;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.RemoveNodeApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        NodeRemovalParams\
          \ nodeRemovalParams = new NodeRemovalParams();\n\n        // NodeRemovalParams\
          \ object initializations here...\n        nodeRemovalParams.setNodeUuids(new\
          \ ArrayList<>());  // required field\n        \n        String clusterExtId\
          \ = \"Cb3f57bF-FC4B-89aD-fa6f-4FFc402AdA2B\";\n\n        try {\n       \
          \     RemoveNodeApiResponse removeNodeApiResponse = clustersApi.removeNode(clusterExtId,\
          \ nodeRemovalParams);\n            System.out.println(removeNodeApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, NodeRemovalParams } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let nodeRemovalParams = new NodeRemovalParams();\n\n    // NodeRemovalParams\
          \ object initializations here...\n    nodeRemovalParams.setNodeUuids([]);\
          \  // required field\n\n    \n    let clusterExtId = \"bafaBadF-3a9c-e4DE-BFC9-eE47Bf30B41B\"\
          ;\n\n\n\n\n\n    clustersApi.removeNode(clusterExtId, nodeRemovalParams).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    nodeRemovalParams = ntnx_clustermgmt_py_client.NodeRemovalParams()\n\
          \n    # NodeRemovalParams object initializations here...\n    nodeRemovalParams.node_uuids\
          \ = []  # required field\n    \n    cluster_ext_id = \"FEbd8Ad7-E8FB-729B-dbea-58DaD8ed4dB9\"\
          \n\n\n    try:\n        api_response = clusters_api.remove_node(clusterExtId=cluster_ext_id,\
          \ body=nodeRemovalParams)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ nodeRemovalParams := import1.NewNodeRemovalParams()\n\n    // NodeRemovalParams\
          \ object initializations here...\n\n    \n    clusterExtId := \"fEACcAaD-aDC8-EE1f-C6dd-CB917CFfae69\"\
          \n\n\n    response, error := ClustersApiInstance.RemoveNode(&clusterExtId,\
          \ nodeRemovalParams)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/BBBFDd1F-dDDC-68bE-a5aC-0d053eA1Be8c/$actions/remove-node" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"shouldSkipPrechecks":true,"shouldSkipRemove":true,"nodeUuids":["string"],"extraParams":{"shouldSkipUpgradeCheck":true,"shouldSkipSpaceCheck":true,"shouldSkipAddCheck":true,"$objectType":"clustermgmt.v4.config.NodeRemovalExtraParam"},"$objectType":"clustermgmt.v4.config.NodeRemovalParams"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"shouldSkipPrechecks":true,"shouldSkipRemove":true,"nodeUuids":["string"],"extraParams":{"shouldSkipUpgradeCheck":true,"shouldSkipSpaceCheck":true,"shouldSkipAddCheck":true,"$objectType":"clustermgmt.v4.config.NodeRemovalExtraParam"},"$objectType":"clustermgmt.v4.config.NodeRemovalParams"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/BcfB7cb9-e543-AaBF-AeBe-BC9C4afC9Bd6/$actions/remove-node"
  /clustermgmt/v4.0/config/task-response/{extId}:
    get:
      tags:
      - Clusters
      summary: Get task response based on the type of request
      description: Get task response based on the type of request.
      operationId: fetchTaskResponse
      parameters:
      - name: extId
        in: path
        description: The external identifier of the task.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 98981bbf-451e-4266-a85f-c2121b755193
      - name: taskResponseType
        in: query
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.TaskResponseType'
      responses:
        "200":
          description: Get the response based on the search type.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.TaskResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/task-response/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/task-response/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/task-response/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Fetch Task Response
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 1
        timeUnit: seconds
      - type: large
        count: 1
        timeUnit: seconds
      - type: xlarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.FetchTaskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String extId = \"f8EDEFa5-Cbbf-2DA5-A9dF-cf5BFADdDcCd\";\n    \
          \    \n        Object taskResponseType = SOME_RAW_DATA;\n\n        try {\n\
          \            FetchTaskApiResponse fetchTaskApiResponse = clustersApi.fetchTaskResponse(extId,\
          \ taskResponseType);\n            System.out.println(fetchTaskApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"d2CDb528-238c-b8dC-4bE5-075faeaAFa2C\";\n\
          \    \n    let taskResponseType = SOME_RAW_DATA;\n\n\n\n\n\n    clustersApi.fetchTaskResponse(extId,\
          \ taskResponseType).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    ext_id = \"BD54c8Fe-aAEd-0Cd9-7F6a-EEF95B7CdCdC\"\n    \n   \
          \ task_response_type = SOME_RAW_DATA\n\n\n    try:\n        api_response\
          \ = clusters_api.fetch_task_response(extId=ext_id, _taskResponseType=task_response_type)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    extId := \"FCbC9deA-FA17-F1ca-CcdC-6f326FAbFeE4\"\n    \n    taskResponseType\
          \ := SOME_RAW_DATA\n\n\n    response, error := ClustersApiInstance.FetchTaskResponse(&extId,\
          \ &taskResponseType)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.TaskResponse)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/task-response/24819bDD-CbAc-ebcD-DdBb-e66A68FfaEAC?taskResponseType=SOME_RAW_DATA" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/task-response/4f9AbcDA-74c9-E1AB-4BBf-6fA0cFe68379?taskResponseType=SOME_RAW_DATA"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/virtual-gpu-profiles:
    get:
      tags:
      - Clusters
      summary: List Virtual GPU profiles.
      description: List Virtual GPU profiles.
      operationId: listVirtualGpuProfiles
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 300376a4-3017-4378-b9f9-dda8edc1f768
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - virtualGpuConfig/deviceId
          - virtualGpuConfig/deviceName
          - virtualGpuConfig/frameBufferSizeBytes
          - virtualGpuConfig/isInUse
          - virtualGpuConfig/maxInstancesPerVm
          - virtualGpuConfig/type
          - virtualGpuConfig/vendorName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - virtualGpuConfig/deviceId
          - virtualGpuConfig/frameBufferSizeBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested virtual GPU profiles in a cluster.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualGpuProfile'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/virtual-gpu-profiles\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/virtual-gpu-profiles\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/virtual-gpu-profiles\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Vgpu Profiles
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListVirtualGpuProfilesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"EaD74e30-f4EF-AaD8-BcAE-Ff7aaEbaFD9F\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVirtualGpuProfilesApiResponse listVirtualGpuProfilesApiResponse\
          \ = clustersApi.listVirtualGpuProfiles(clusterExtId, page, limit, null,\
          \ null);\n            System.out.println(listVirtualGpuProfilesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"5Dfed0AD-ee94-b1B6-214B-adcDe3aFE97a\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n\n\n\n\n    clustersApi.listVirtualGpuProfiles(clusterExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"bbFBD2Ee-E1c4-D7D3-25AD-De5Fd2Ec4ec4\"\n \
          \   \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = clusters_api.list_virtual_gpu_profiles(clusterExtId=cluster_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"1CB5CC3c-234d-B21b-aDEc-f4CBCFDE4E1E\"\n    \n\
          \    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := ClustersApiInstance.ListVirtualGpuProfiles(&clusterExtId,\
          \ &page_, &limit_, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.VirtualGpuProfile)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/5b8efEca-23A8-e5dA-7BCd-B1A5d29adFdF/virtual-gpu-profiles?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/8BCAE4CB-dD2B-c8aa-DAcF-aae1b5e8cF57/virtual-gpu-profiles?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/physical-gpu-profiles:
    get:
      tags:
      - Clusters
      summary: List Physical GPU profiles.
      description: List Physical GPU profiles.
      operationId: listPhysicalGpuProfiles
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 4b0e3efc-dace-4249-b662-60799462603f
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - physicalGpuConfig/deviceId
          - physicalGpuConfig/deviceName
          - physicalGpuConfig/frameBufferSizeBytes
          - physicalGpuConfig/isInUse
          - physicalGpuConfig/type
          - physicalGpuConfig/vendorName
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - physicalGpuConfig/deviceId
          - physicalGpuConfig/frameBufferSizeBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested physical GPU profiles in a cluster.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.PhysicalGpuProfile'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/physical-gpu-profiles\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/physical-gpu-profiles\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/physical-gpu-profiles\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Pgpu Profiles
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListPhysicalGpuProfilesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"6673fdfF-2FDC-8AcA-CF7F-ACbAaC1cfBae\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListPhysicalGpuProfilesApiResponse listPhysicalGpuProfilesApiResponse\
          \ = clustersApi.listPhysicalGpuProfiles(clusterExtId, page, limit, null,\
          \ null);\n            System.out.println(listPhysicalGpuProfilesApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"B3B8f4eD-Af5D-2d64-37De-3ABcc4DcDb7f\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n\n\n\n\n    clustersApi.listPhysicalGpuProfiles(clusterExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"EaACEDfd-cCc3-e9Db-fb7c-AA9D87dfd4c3\"\n \
          \   \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = clusters_api.list_physical_gpu_profiles(clusterExtId=cluster_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"CcCbc4fa-0fcf-E6Ae-fb55-BdBf0e4AbD0B\"\n    \n\
          \    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := ClustersApiInstance.ListPhysicalGpuProfiles(&clusterExtId,\
          \ &page_, &limit_, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.PhysicalGpuProfile)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/b0a5Eaaa-725a-5bE7-Bd0f-59F77bdaEaCa/physical-gpu-profiles?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/BAf3eCB7-f6eD-9Af7-ca7c-D1dD8AEE2FC1/physical-gpu-profiles?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0"
  /clustermgmt/v4.0/config/hosts:
    get:
      tags:
      - Clusters
      summary: Get the list of all host entities
      description: Lists all host entities across clusters registered to Prism Central.
      operationId: listHosts
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - bootTimeUsecs
          - cluster/name
          - cluster/uuid
          - cpuCapacityHz
          - cpuFrequencyHz
          - cpuModel
          - defaultVhdContainerUuid
          - defaultVhdLocation
          - defaultVmContainerUuid
          - defaultVmLocation
          - extId
          - gpuDriverVersion
          - gpuList
          - hostName
          - hypervisor/type
          - memorySizeBytes
          - numberOfCpuCores
          - numberOfCpuSockets
          - numberOfCpuThreads
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - cluster/name
          - extId
          - hostName
          - hostType
          - hypervisor/type
          - memorySizeBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $apply
        in: query
        description: |
          A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '$apply=groupby((templateName))' would get all templates grouped by templateName.
          The groupby can be applied on the following fields:
          - cluster/name
          - hypervisor/type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - blockModel
          - blockSerial
          - bootTimeUsecs
          - cluster
          - cpuCapacityHz
          - cpuFrequencyHz
          - cpuModel
          - defaultVhdContainerUuid
          - defaultVhdLocation
          - defaultVmContainerUuid
          - defaultVmLocation
          - failoverClusterFqdn
          - failoverClusterNodeStatus
          - gpuDriverVersion
          - gpuList
          - hostName
          - hostType
          - isRebootPending
          - maintenanceState
          - memorySizeBytes
          - nodeStatus
          - numberOfCpuCores
          - numberOfCpuSockets
          - numberOfCpuThreads
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested Host entities.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.Host'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/hosts
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/hosts
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/hosts
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Host
        roleList:
        - Prism Admin
        - Prism Viewer
        - Super Admin
        - Storage Admin
        - VPC Admin
        - Network Infra Admin
        - Cluster Admin
        - Cluster Viewer
        - Virtual Machine Admin
        - Virtual Machine Operator
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListHostsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        int page = 0;\n        \n        int limit = 50;\n\n        try\
          \ {\n            ListHostsApiResponse listHostsApiResponse = clustersApi.listHosts(page,\
          \ limit, null, null, null, null);\n            System.out.println(listHostsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, ClustersApi } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let clustersApi = new ClustersApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$apply"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              clustersApi.listHosts(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = clusters_api.list_hosts(_page=page, _limit=limit)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := ClustersApiInstance.ListHosts(&page_,\
          \ &limit_, nil, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Host)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/hosts?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/hosts?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics:
    get:
      tags:
      - Clusters
      summary: Get the list of host NICs
      description: "Lists all host NICs for the host identified by {hostExtId} belonging\
        \ to the cluster identified by {clusterExtId}."
      operationId: listHostNicsByHostId
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: d3428887-5d53-45cb-96e8-0cc684a2cf89
      - name: hostExtId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b455f6ec-5bf6-4386-a5c7-e94f181ecb2f
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - discoveryProtocol
          - extId
          - interfaceStatus
          - isDhcpEnabled
          - linkSpeedInKbps
          - macAddress
          - mtuInBytes
          - name
          - nodeUuid
          - rxRingSizeInBytes
          - switchDeviceId
          - switchMacAddress
          - switchPortId
          - switchVlanId
          - txRingSizeInBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - extId
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - discoveryProtocol
          - hostDescription
          - interfaceStatus
          - isDhcpEnabled
          - linkSpeedInKbps
          - macAddress
          - mtuInBytes
          - name
          - nodeUuid
          - rxRingSizeInBytes
          - switchDeviceId
          - switchMacAddress
          - switchManagementIp
          - switchPortId
          - switchVlanId
          - txRingSizeInBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested host NIC entities.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.HostNic'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Host Nic
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListHostNicsByHostIdApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"1EA21Ef3-d2C0-B0CE-e5F7-aBfB9dfFACdA\"\
          ;\n        \n        String hostExtId = \"3A951b17-ca47-EF29-ff7c-5f5fCCc906aC\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListHostNicsByHostIdApiResponse listHostNicsByHostIdApiResponse\
          \ = clustersApi.listHostNicsByHostId(clusterExtId, hostExtId, page, limit,\
          \ null, null, null);\n            System.out.println(listHostNicsByHostIdApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"AE1D1b6D-C4EA-FaC1-3F1b-EE08BDE36ebf\"\
          ;\n    \n    let hostExtId = \"fc0E72fe-D2eE-fc69-8DC1-C52E9f7B949b\";\n\
          \n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n    opts[\"$select\"\
          ] = \"string_sample_data\";\n\n\n\n\n    clustersApi.listHostNicsByHostId(clusterExtId,\
          \ hostExtId, opts).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"6AafBeF0-da4d-AE3d-911c-54C84CE66B5d\"\n \
          \   \n    host_ext_id = \"F5fF34Ec-cEB7-Ce5F-a3dB-5caEbD7CaA15\"\n    \n\
          \    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = clusters_api.list_host_nics_by_host_id(clusterExtId=cluster_ext_id,\
          \ hostExtId=host_ext_id, _page=page, _limit=limit)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"d1b1baF5-d7a9-0acB-CE2b-BA9a0cB9B7DF\"\n    \n\
          \    hostExtId := \"C1deabde-dFaE-06Bb-bad4-d1DBdFc03afb\"\n    \n    page_\
          \ := 0\n    \n    limit_ := 50\n\n\n    response, error := ClustersApiInstance.ListHostNicsByHostId(&clusterExtId,\
          \ &hostExtId, &page_, &limit_, nil, nil, nil)\n    if error != nil {\n \
          \       fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().([]import1.HostNic)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/4caaFFDC-7fdF-243d-EF3B-77db6cb4abEB/hosts/b069B8ec-bB24-aCCF-1777-FCdeaAC19EcA/host-nics?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/1CdCE8Fc-08Ca-82bc-EBD6-D08DAD45DEab/hosts/5BcAf7BA-eaEB-7Dd3-fCAa-affbB1B2b3B3/host-nics?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics/{extId}:
    get:
      tags:
      - Clusters
      summary: Get host NIC
      description: "Get the host NIC entity of the host identified by {hostExtId}\
        \ belonging to the cluster identified by {clusterExtId}."
      operationId: getHostNicById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: ef0d30bb-1cc6-4323-b1ad-c97512583b69
      - name: hostExtId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 6fd7f110-a288-4fc8-af14-9b9daa1430a7
      - name: extId
        in: path
        description: Host NIC UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 89179bbd-ac9a-4ee2-8983-9a112e5a648d
      responses:
        "200":
          description: The requested host NIC entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.HostNic'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Host Nic
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetHostNicApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"4C1Bd6da-cb0e-6e8A-A7f0-AED3dEe2B5fa\"\
          ;\n        \n        String hostExtId = \"e29B3F1b-B14F-f1Fc-861A-b60bcb8ffFBb\"\
          ;\n        \n        String extId = \"aA8DA857-ADE3-A5c7-DffB-e63D11AEA4FF\"\
          ;\n\n        try {\n            GetHostNicApiResponse getHostNicApiResponse\
          \ = clustersApi.getHostNicById(clusterExtId, hostExtId, extId);\n      \
          \      System.out.println(getHostNicApiResponse.toString());\n\n       \
          \ } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"dCee8bdB-cC15-9c52-A8fc-1f7bEdFa5eCb\"\
          ;\n    \n    let hostExtId = \"A8B5E713-EbEf-8B5c-DEb3-1Bf0B6daADDa\";\n\
          \    \n    let extId = \"edeB7b3A-eAE0-FF0B-0AdB-b7EcBC14ed5B\";\n\n\n\n\
          \n\n    clustersApi.getHostNicById(clusterExtId, hostExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"bbccfd1B-ADC6-5758-A71F-fdfd95aCEbe8\"\n \
          \   \n    host_ext_id = \"f3BE8Df9-B595-215C-65df-b60d1eCbbb67\"\n    \n\
          \    ext_id = \"E09d3d1e-c4ba-EfeD-efCF-c4DBbed4AEdb\"\n\n\n    try:\n \
          \       api_response = clusters_api.get_host_nic_by_id(clusterExtId=cluster_ext_id,\
          \ hostExtId=host_ext_id, extId=ext_id)\n        print(api_response)\n  \
          \  except ntnx_clustermgmt_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"bA8FcFd2-88Ce-CdCe-BFaE-305FBEe3ca51\"\n    \n\
          \    hostExtId := \"f9dF4CCf-a6Cb-CB39-E8Bc-DE1abB3f3EF6\"\n    \n    extId\
          \ := \"eF5eb9ca-DceC-dABA-D24E-aBFe036EEEbC\"\n\n\n    response, error :=\
          \ ClustersApiInstance.GetHostNicById(&clusterExtId, &hostExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.HostNic)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/7CbaaAb6-8EA5-9E3a-b7eF-F0FD01Bb30e5/hosts/47FDDa5A-35F0-D812-f2Db-4BC74ACAa792/host-nics/6cFDaf4D-b19c-F6da-bBef-BdcfFd6dFf45" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/027eeAdc-a9eb-cAaB-dcAA-89D8EBe0cbDC/hosts/A7eaff56-fe93-cFB6-EE1b-DcecFaBCcbB5/host-nics/Ab8B86fb-DE4E-c50F-D2FA-D87eeAEe5eaE"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics:
    get:
      tags:
      - Clusters
      summary: Get the list of virtual NICs
      description: "Lists all virtual NICs for the host identified by {extId} belonging\
        \ to the cluster identified by {clusterExtId}."
      operationId: listVirtualNicsByHostId
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f964c33f-6972-4480-a55f-53a1035e4c9a
      - name: hostExtId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: faa8dfcd-5284-4dc8-9051-7a38c44486f3
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - extId
          - interfaceStatus
          - isDhcpEnabled
          - linkSpeedInKbps
          - macAddress
          - mtuInBytes
          - name
          - nodeUuid
          - vlanId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - extId
          - name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - hostDescription
          - interfaceStatus
          - isDhcpEnabled
          - linkSpeedInKbps
          - macAddress
          - mtuInBytes
          - name
          - nodeUuid
          - vlanId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested virtual NIC entities of the host.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualNic'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Host Virtual Nic
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListVirtualNicsByHostIdApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"BcCEeC27-A72C-7eCe-5C82-FcFcBECFd8c1\"\
          ;\n        \n        String hostExtId = \"36bEABFE-2fBd-dfeF-CbbC-c6F0dffABFBB\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVirtualNicsByHostIdApiResponse listVirtualNicsByHostIdApiResponse\
          \ = clustersApi.listVirtualNicsByHostId(clusterExtId, hostExtId, page, limit,\
          \ null, null, null);\n            System.out.println(listVirtualNicsByHostIdApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"61a92bbF-Cfd8-fbbE-Cc13-E2F2aFC66eea\"\
          ;\n    \n    let hostExtId = \"c90Fa0Bf-Ef6D-5dB6-aa3C-FD1e6EE81DAe\";\n\
          \n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n    opts[\"$orderby\"] = \"string_sample_data\";\n    opts[\"$select\"\
          ] = \"string_sample_data\";\n\n\n\n\n    clustersApi.listVirtualNicsByHostId(clusterExtId,\
          \ hostExtId, opts).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"bD41bfF2-FFCC-eADa-fEAf-FEc4edEda6B4\"\n \
          \   \n    host_ext_id = \"FffdBFBB-3Aca-FEDD-B97D-E5CaFFEccb4a\"\n    \n\
          \    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = clusters_api.list_virtual_nics_by_host_id(clusterExtId=cluster_ext_id,\
          \ hostExtId=host_ext_id, _page=page, _limit=limit)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"4fc3C0E6-f3aE-aBb4-fBcd-9B1d24CcafCa\"\n    \n\
          \    hostExtId := \"D7ceACCB-db4b-16cc-fa81-c253Fcc4dBBC\"\n    \n    page_\
          \ := 0\n    \n    limit_ := 50\n\n\n    response, error := ClustersApiInstance.ListVirtualNicsByHostId(&clusterExtId,\
          \ &hostExtId, &page_, &limit_, nil, nil, nil)\n    if error != nil {\n \
          \       fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().([]import1.VirtualNic)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/1b0dEd5a-ea0b-eEDb-EfFe-300ee9D12C1C/hosts/7041fdF0-AE4A-DCf7-bF0c-A5D1e9AEEE96/virtual-nics?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/bD23eFda-3Af0-a1ec-Bf1A-83AaAA29dEe5/hosts/FbAdABcD-1d2D-A2ba-bdDe-fC51AFC2FC3d/virtual-nics?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics/{extId}:
    get:
      tags:
      - Clusters
      summary: Get virtual NIC
      description: "Get the virtual NIC entity of the host identified by {hostExtId}\
        \ belonging to the cluster identified by {clusterExtId}."
      operationId: getVirtualNicById
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c13ddce3-32c6-4931-858c-961afa8afc50
      - name: hostExtId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: b5579ee6-d06c-452d-818d-645d321fc690
      - name: extId
        in: path
        description: Virtual NIC UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: bed32ec0-73ec-4e39-b6c3-24243574438c
      responses:
        "200":
          description: The requested virtual NIC entity.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualNic'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Host Virtual Nic
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetVirtualNicApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"cca1CbdB-cDcf-fa0a-e0B4-9acceCDDdeF2\"\
          ;\n        \n        String hostExtId = \"52E9E3F8-acF3-1a72-87FB-6b8A3aCEf5B2\"\
          ;\n        \n        String extId = \"bd7FA50A-D02F-f2Ce-AbD0-5E13C0AEBc5c\"\
          ;\n\n        try {\n            GetVirtualNicApiResponse getVirtualNicApiResponse\
          \ = clustersApi.getVirtualNicById(clusterExtId, hostExtId, extId);\n   \
          \         System.out.println(getVirtualNicApiResponse.toString());\n\n \
          \       } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"fCD4A9bb-cecB-eFF4-36c9-eAbcF3Aaacb4\"\
          ;\n    \n    let hostExtId = \"C5fad98d-afDa-feE6-DBCc-2ff0E7Df6eAB\";\n\
          \    \n    let extId = \"c2A2D01E-Ac0a-360E-E8cD-aB5AFFC37B9F\";\n\n\n\n\
          \n\n    clustersApi.getVirtualNicById(clusterExtId, hostExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"8CFcddcb-aaBb-9BF3-7cFD-7A5CBAbBC7dF\"\n \
          \   \n    host_ext_id = \"dFb878aE-97FF-Efeb-fEBa-e2ce9188DfeB\"\n    \n\
          \    ext_id = \"fDfeBfB2-Ffef-DB8e-9A92-9faFfb3F1FFb\"\n\n\n    try:\n \
          \       api_response = clusters_api.get_virtual_nic_by_id(clusterExtId=cluster_ext_id,\
          \ hostExtId=host_ext_id, extId=ext_id)\n        print(api_response)\n  \
          \  except ntnx_clustermgmt_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"dCedc9Db-66ee-BCa6-6C05-BCa28eDaa7af\"\n    \n\
          \    hostExtId := \"Ab3e68Ee-eff0-c3fa-AaF3-c19BE8B71dB7\"\n    \n    extId\
          \ := \"A31Acf3d-EF5f-bdaf-F2be-2bbD5cFDAcD1\"\n\n\n    response, error :=\
          \ ClustersApiInstance.GetVirtualNicById(&clusterExtId, &hostExtId, &extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.VirtualNic)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/bC0Fd31c-4b1F-ecaE-fAe6-8Ab229D19bb2/hosts/C0De74d7-C3ca-aBa8-DaaA-FD74e61cE45C/virtual-nics/CaC3ADfc-FDa8-DAfB-C802-c0c8f6cF6EaA" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/5D4AAE4D-53ce-9ecD-eFed-DcEEcdAED2ec/hosts/A58EdF8B-Cffd-a4E6-3064-9E51CB9eEdfC/virtual-nics/e9bdAC1a-fDac-Ca3d-82e9-68fAaeDf7F2F"
  /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/enter-host-maintenance:
    post:
      tags:
      - Clusters
      summary: Enter host into maintenance mode
      description: "Enter host identified by {extId} into maintenance mode belonging\
        \ to the cluster identified by {clusterExtId}."
      operationId: enterHostMaintenance
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: c4fe2c54-7652-44dc-92e0-9aadae5a37a3
      - name: extId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 78820fa6-3756-41e7-b722-d33699cd5705
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 2ec80683-5844-4d33-808b-e133714d679b
      requestBody:
        description: Property of the host to be put into maintenance mode.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.operations.EnterHostMaintenanceSpec'
        required: true
      responses:
        "202":
          description: Host entered into maintenance mode.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/enter-host-maintenance\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/enter-host-maintenance\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/enter-host-maintenance\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Enter Cluster Host Maintenance
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: Small
        count: 1
        timeUnit: seconds
      - type: Large
        count: 1
        timeUnit: seconds
      - type: XLarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.operations.EnterHostMaintenanceSpec;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.operations.EnterHostMaintenanceApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        EnterHostMaintenanceSpec\
          \ enterHostMaintenanceSpec = new EnterHostMaintenanceSpec();\n\n       \
          \ // EnterHostMaintenanceSpec object initializations here...\n        \n\
          \        String clusterExtId = \"D4BaE8ed-2c4a-3CCb-b77D-2dCc8e971bF1\"\
          ;\n        \n        String extId = \"Be2beBDf-cDD5-d52a-B78a-98de349aAABc\"\
          ;\n\n        try {\n            EnterHostMaintenanceApiResponse enterHostMaintenanceApiResponse\
          \ = clustersApi.enterHostMaintenance(clusterExtId, extId, enterHostMaintenanceSpec);\n\
          \            System.out.println(enterHostMaintenanceApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, EnterHostMaintenanceSpec } from\
          \ \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let enterHostMaintenanceSpec = new EnterHostMaintenanceSpec();\n\
          \n    // EnterHostMaintenanceSpec object initializations here...\n\n   \
          \ \n    let clusterExtId = \"BdABf14B-c89C-dDFb-fb6C-c33Ca75C0987\";\n \
          \   \n    let extId = \"df5addeC-cea5-7ab0-d4F7-80cdC8dFCE7C\";\n\n\n\n\n\
          \n    clustersApi.enterHostMaintenance(clusterExtId, extId, enterHostMaintenanceSpec).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    enterHostMaintenanceSpec = ntnx_clustermgmt_py_client.EnterHostMaintenanceSpec()\n\
          \n    # EnterHostMaintenanceSpec object initializations here...\n    \n\
          \    cluster_ext_id = \"cf6fbC0c-f5c9-d56c-3AE9-BEB84EB7BEaB\"\n    \n \
          \   ext_id = \"6beFcf9a-5Fcd-cC5E-9aba-35eefdaCdcBc\"\n\n\n    try:\n  \
          \      api_response = clusters_api.enter_host_maintenance(clusterExtId=cluster_ext_id,\
          \ extId=ext_id, body=enterHostMaintenanceSpec)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/operations\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ enterHostMaintenanceSpec := import1.NewEnterHostMaintenanceSpec()\n\n\
          \    // EnterHostMaintenanceSpec object initializations here...\n\n    \n\
          \    clusterExtId := \"65BfF60A-eaaC-be8E-4c53-d5Bbcd07BDDB\"\n    \n  \
          \  extId := \"e5DEE7D6-bfdd-501d-ea6a-1E6eAA10f995\"\n\n\n    response,\
          \ error := ClustersApiInstance.EnterHostMaintenance(&clusterExtId, &extId,\
          \ enterHostMaintenanceSpec)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/operations/clusters/0d3D277c-cFEF-FAEC-dacc-Deff6FcBfabB/hosts/5bbbc5E1-BeDE-EC4c-DFa7-b5ddDEbFD7CA/$actions/enter-host-maintenance" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"vcenterInfo":{"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"credentials":{"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"},"$objectType":"clustermgmt.v4.config.VcenterInfo"},"timeoutSeconds":0,"shouldRollbackOnFailure":true,"shouldShutdownNonMigratableUvms":false,"$objectType":"clustermgmt.v4.operations.EnterHostMaintenanceSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"vcenterInfo":{"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"credentials":{"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"},"$objectType":"clustermgmt.v4.config.VcenterInfo"},"timeoutSeconds":0,"shouldRollbackOnFailure":true,"shouldShutdownNonMigratableUvms":false,"$objectType":"clustermgmt.v4.operations.EnterHostMaintenanceSpec"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/operations/clusters/9c55aafc-1a3E-bf5E-A57C-b15FAeE4dB21/hosts/9f66aBE0-eb5F-7AAE-4fDD-7e7B7A7C2Cd5/$actions/enter-host-maintenance"
  /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/exit-host-maintenance:
    post:
      tags:
      - Clusters
      summary: Exit host from maintenance mode
      description: "Exit host identified by {extId} from maintenance mode belonging\
        \ to the cluster identified by {clusterExtId}."
      operationId: exitHostMaintenance
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 14e8abdc-1add-43fe-859d-ae666f049493
      - name: extId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 2bcc7eeb-a488-4a49-9b85-2dc8b93e7f5c
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 4c85d3e3-08fa-4222-badb-46cf3d43908e
      requestBody:
        description: Property of the host to be exited from maintenance mode.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.operations.HostMaintenanceCommonSpec'
        required: true
      responses:
        "202":
          description: Host exited from maintenance mode.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/exit-host-maintenance\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/exit-host-maintenance\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/exit-host-maintenance\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Exit Cluster Host Maintenance
        roleList:
        - Cluster Admin
        - Prism Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: Small
        count: 1
        timeUnit: seconds
      - type: Large
        count: 1
        timeUnit: seconds
      - type: XLarge
        count: 1
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.operations.HostMaintenanceCommonSpec;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.operations.ExitHostMaintenanceApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        HostMaintenanceCommonSpec\
          \ hostMaintenanceCommonSpec = new HostMaintenanceCommonSpec();\n\n     \
          \   // HostMaintenanceCommonSpec object initializations here...\n      \
          \  \n        String clusterExtId = \"5bEC29E4-1a8E-B56a-EA52-A54A32a8cCE0\"\
          ;\n        \n        String extId = \"4E1ADb4F-aD8f-eFDF-b4E3-0c7ebdeB6cC7\"\
          ;\n\n        try {\n            ExitHostMaintenanceApiResponse exitHostMaintenanceApiResponse\
          \ = clustersApi.exitHostMaintenance(clusterExtId, extId, hostMaintenanceCommonSpec);\n\
          \            System.out.println(exitHostMaintenanceApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi, HostMaintenanceCommonSpec } from\
          \ \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let hostMaintenanceCommonSpec = new HostMaintenanceCommonSpec();\n\
          \n    // HostMaintenanceCommonSpec object initializations here...\n\n  \
          \  \n    let clusterExtId = \"30ECC03E-C5bB-09E2-8Df9-ec85Ed1fd6AF\";\n\
          \    \n    let extId = \"0e7455f5-af8F-08a6-d0e9-ce0CFbc41a4A\";\n\n\n\n\
          \n\n    clustersApi.exitHostMaintenance(clusterExtId, extId, hostMaintenanceCommonSpec).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    hostMaintenanceCommonSpec = ntnx_clustermgmt_py_client.HostMaintenanceCommonSpec()\n\
          \n    # HostMaintenanceCommonSpec object initializations here...\n    \n\
          \    cluster_ext_id = \"94A6Fab8-Fbf0-5F13-C144-5Bc7D449960b\"\n    \n \
          \   ext_id = \"1dAC6976-CD4D-fEaF-D6Bb-ebAdB01bECbB\"\n\n\n    try:\n  \
          \      api_response = clusters_api.exit_host_maintenance(clusterExtId=cluster_ext_id,\
          \ extId=ext_id, body=hostMaintenanceCommonSpec)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/operations\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ hostMaintenanceCommonSpec := import1.NewHostMaintenanceCommonSpec()\n\n\
          \    // HostMaintenanceCommonSpec object initializations here...\n\n   \
          \ \n    clusterExtId := \"FaABADF3-BcbF-B40C-beDa-bABDBB7C18D6\"\n    \n\
          \    extId := \"f5a5a3b7-bD86-6Efe-a0ea-A2e22AfADdaD\"\n\n\n    response,\
          \ error := ClustersApiInstance.ExitHostMaintenance(&clusterExtId, &extId,\
          \ hostMaintenanceCommonSpec)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/operations/clusters/2fcd4ebd-c5AF-bafB-E9de-f2BCFC5f5EFE/hosts/DdE68fdA-fbAA-A247-D7cF-cBF2eCD8A28C/$actions/exit-host-maintenance" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"vcenterInfo":{"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"credentials":{"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"},"$objectType":"clustermgmt.v4.config.VcenterInfo"},"timeoutSeconds":0,"$objectType":"clustermgmt.v4.operations.HostMaintenanceCommonSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"vcenterInfo":{"address":{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"},"credentials":{"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"},"$objectType":"clustermgmt.v4.config.VcenterInfo"},"timeoutSeconds":0,"$objectType":"clustermgmt.v4.operations.HostMaintenanceCommonSpec"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/operations/clusters/cbcdbCed-6Cbb-EAAe-bbB6-4E3ddfFba2Ba/hosts/BeE8f4F3-eaB0-AfE3-61cb-9daFD10bab0f/$actions/exit-host-maintenance"
  /clustermgmt/v4.0/stats/clusters/{extId}:
    get:
      tags:
      - Clusters
      summary: Get cluster statistics
      description: "Get the statistics data of the cluster identified by {clusterExtId}."
      operationId: getClusterStats
      parameters:
      - name: extId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f724e758-b2db-4af8-a4e3-81e0b3103f30
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 41
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - aggregateHypervisorMemoryUsagePpm
          - aggregateHypervisorMemoryUsagePpmLowerBuf
          - aggregateHypervisorMemoryUsagePpmUpperBuf
          - controllerAvgIoLatencyUsecs
          - controllerAvgIoLatencyUsecsLowerBuf
          - controllerAvgIoLatencyUsecsUpperBuf
          - controllerAvgReadIoLatencyUsecs
          - controllerAvgReadIoLatencyUsecsLowerBuf
          - controllerAvgReadIoLatencyUsecsUpperBuf
          - controllerAvgWriteIoLatencyUsecs
          - controllerAvgWriteIoLatencyUsecsLowerBuf
          - controllerAvgWriteIoLatencyUsecsUpperBuf
          - controllerNumIops
          - controllerNumIopsLowerBuf
          - controllerNumIopsUpperBuf
          - controllerNumReadIops
          - controllerNumReadIopsLowerBuf
          - controllerNumReadIopsUpperBuf
          - controllerNumWriteIops
          - controllerNumWriteIopsLowerBuf
          - controllerNumWriteIopsUpperBuf
          - controllerReadIoBandwidthKbps
          - controllerReadIoBandwidthKbpsLowerBuf
          - controllerReadIoBandwidthKbpsUpperBuf
          - controllerWriteIoBandwidthKbps
          - controllerWriteIoBandwidthKbpsLowerBuf
          - controllerWriteIoBandwidthKbpsUpperBuf
          - cpuCapacityHz
          - cpuUsageHz
          - freePhysicalStorageBytes
          - healthCheckScore
          - hypervisorCpuUsagePpm
          - hypervisorCpuUsagePpmLowerBuf
          - hypervisorCpuUsagePpmUpperBuf
          - ioBandwidthKbps
          - ioBandwidthKbpsLowerBuf
          - ioBandwidthKbpsUpperBuf
          - logicalStorageUsageBytes
          - memoryCapacityBytes
          - overallMemoryUsageBytes
          - overallSavingsBytes
          - overallSavingsRatio
          - powerConsumptionInstantWatt
          - recycleBinUsageBytes
          - snapshotCapacityBytes
          - storageCapacityBytes
          - storageUsageBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Get cluster statistics response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.stats.ClusterStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Cluster Stats
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.stats.ClusterStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String extId = \"e0F1cD88-55af-Df0C-6EEf-aC6d8CebaFc3\";\n    \
          \    // Datetime needs to be in RFC3339 format\n        OffsetDateTime startTime\
          \ = OffsetDateTime.now();\n        // Datetime needs to be in RFC3339 format\n\
          \        OffsetDateTime endTime = OffsetDateTime.now();\n        \n    \
          \    int samplingInterval = 1;\n        \n        Object statType = SOME_RAW_DATA;\n\
          \n        try {\n            ClusterStatsApiResponse clusterStatsApiResponse\
          \ = clustersApi.getClusterStats(extId, startTime, endTime, samplingInterval,\
          \ statType, null);\n            System.out.println(clusterStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let extId = \"e93fA7Bc-Cf0f-175C-bE65-50B414B4E09E\";\n\
          \    //Datetime needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    clustersApi.getClusterStats(extId,\
          \ $startTime, $endTime, opts).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\nimport datetime\n\nif __name__\
          \ == \"__main__\":\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    ext_id = \"A1C8Fba6-cC8e-fbC6-2cdf-5eDDcc9A2AB2\"\n    # Datetime\
          \ needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = clusters_api.get_cluster_stats(extId=ext_id,\
          \ _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    extId := \"Aab73Fee-Bc64-18fF-E1F8-bc9A7dac8bdc\"\n    // Datetime\
          \ needs to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ ClustersApiInstance.GetClusterStats(&extId, &startTime_, &endTime_, &samplingInterval_,\
          \ &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.ClusterStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/clusters/cB776AcC-D6Ea-C2b6-3Fbb-9005b93CE6D1?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/clusters/5F7bb0C4-ac9e-50e9-E8Ea-dF7DD9C8cdA4?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /clustermgmt/v4.0/stats/clusters/{clusterExtId}/hosts/{extId}:
    get:
      tags:
      - Clusters
      summary: Get host statistics
      description: "Get the statistics data of the host identified by {hostExtId}\
        \ belonging to the cluster identified by {clusterExtId}."
      operationId: getHostStats
      parameters:
      - name: clusterExtId
        in: path
        description: Cluster UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 655d31b1-53e6-4ec6-b577-a4e31397e977
      - name: extId
        in: path
        description: Host UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 643a3ec7-8377-4574-88df-85741b78682a
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 85
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - aggregateHypervisorMemoryUsagePpm
          - aggregateHypervisorMemoryUsagePpmLowerBuf
          - aggregateHypervisorMemoryUsagePpmUpperBuf
          - controllerAvgIoLatencyUsecs
          - controllerAvgIoLatencyUsecsLowerBuf
          - controllerAvgIoLatencyUsecsUpperBuf
          - controllerAvgReadIoLatencyUsecs
          - controllerAvgReadIoLatencyUsecsLowerBuf
          - controllerAvgReadIoLatencyUsecsUpperBuf
          - controllerAvgWriteIoLatencyUsecs
          - controllerAvgWriteIoLatencyUsecsLowerBuf
          - controllerAvgWriteIoLatencyUsecsUpperBuf
          - controllerNumIops
          - controllerNumIopsLowerBuf
          - controllerNumIopsUpperBuf
          - controllerNumReadIops
          - controllerNumReadIopsLowerBuf
          - controllerNumReadIopsUpperBuf
          - controllerNumWriteIops
          - controllerNumWriteIopsLowerBuf
          - controllerNumWriteIopsUpperBuf
          - controllerReadIoBandwidthKbps
          - controllerReadIoBandwidthKbpsLowerBuf
          - controllerReadIoBandwidthKbpsUpperBuf
          - controllerWriteIoBandwidthKbps
          - controllerWriteIoBandwidthKbpsLowerBuf
          - controllerWriteIoBandwidthKbpsUpperBuf
          - cpuCapacityHz
          - cpuUsageHz
          - freePhysicalStorageBytes
          - healthCheckScore
          - hypervisorCpuUsagePpm
          - hypervisorCpuUsagePpmLowerBuf
          - hypervisorCpuUsagePpmUpperBuf
          - ioBandwidthKbps
          - ioBandwidthKbpsLowerBuf
          - ioBandwidthKbpsUpperBuf
          - logicalStorageUsageBytes
          - memoryCapacityBytes
          - overallMemoryUsageBytes
          - overallMemoryUsagePpm
          - overallMemoryUsagePpmLowerBuf
          - overallMemoryUsagePpmUpperBuf
          - powerConsumptionInstantWatt
          - storageCapacityBytes
          - storageUsageBytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Get host statistics response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.stats.HostStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{clusterExtId}/hosts/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{clusterExtId}/hosts/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{clusterExtId}/hosts/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Host Stats
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.ClustersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.stats.HostStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    ClustersApi clustersApi = new ClustersApi(apiClient);\n\n        \n\
          \        String clusterExtId = \"bCd157bF-1eBD-F5C1-B4ed-C03CDBD8Dd4C\"\
          ;\n        \n        String extId = \"4fDffe5D-E90e-19Ab-a5DA-ABEafA6C0A6a\"\
          ;\n        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ startTime = OffsetDateTime.now();\n        // Datetime needs to be in\
          \ RFC3339 format\n        OffsetDateTime endTime = OffsetDateTime.now();\n\
          \        \n        int samplingInterval = 1;\n        \n        Object statType\
          \ = SOME_RAW_DATA;\n\n        try {\n            HostStatsApiResponse hostStatsApiResponse\
          \ = clustersApi.getHostStats(clusterExtId, extId, startTime, endTime, samplingInterval,\
          \ statType, null);\n            System.out.println(hostStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, ClustersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let clustersApi = new ClustersApi(apiClientInstance);\n\nfunction sample()\
          \ {\n\n    \n    let clusterExtId = \"7CF9dCC0-F841-1a5b-ae4A-AdEe2f5DaBF8\"\
          ;\n    \n    let extId = \"6BbFaDD7-bAde-db6b-C8Bd-C2caAEdE5Fbc\";\n   \
          \ //Datetime needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n  \
          \  opts[\"$select\"] = \"string_sample_data\";\n\n\n\n\n    clustersApi.getHostStats(clusterExtId,\
          \ extId, $startTime, $endTime, opts).then(({data, response}) => {\n    \
          \    console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\nimport datetime\n\nif __name__\
          \ == \"__main__\":\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    clusters_api = ntnx_clustermgmt_py_client.ClustersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"97C1CC37-E36C-671d-eD02-5a1C7dcfc2CB\"\n \
          \   \n    ext_id = \"A5CcbdcC-BaDc-Bfca-C0D7-97Acb3a0cdA3\"\n    # Datetime\
          \ needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = clusters_api.get_host_stats(clusterExtId=cluster_ext_id,\
          \ extId=ext_id, _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    ClustersApiInstance\
          \ *api.ClustersApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    ClustersApiInstance = api.NewClustersApi(ApiClientInstance)\n\n   \
          \ \n    clusterExtId := \"efc39BdC-CdfA-4568-dFED-c8E4A7D8C1A5\"\n    \n\
          \    extId := \"BB0AaA5E-B4CE-eADE-0DAc-eeec4dc0a6eb\"\n    // Datetime\
          \ needs to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ ClustersApiInstance.GetHostStats(&clusterExtId, &extId, &startTime_, &endTime_,\
          \ &samplingInterval_, &statType_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.HostStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/clusters/8AbF553a-fFD4-eB57-ecb3-a863d57eEeBF/hosts/Bdb76DbB-bdfc-bdec-c01a-e1bf3b6fe065?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/clusters/aF1ADB5F-FD58-6901-15b9-c23f8aFdAB39/hosts/AD0DC1f1-9a42-Df4F-B7ff-D2Deb5afAf8b?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1&$select=string_sample_data"
  /clustermgmt/v4.0/config/disks/{extId}:
    get:
      tags:
      - Disks
      summary: Get Disk by its external identifier
      description: Fetch the details of the Disk identified by external identifier.
      operationId: getDiskById
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 837fa976-cbab-4ffa-bbd9-feae649dbd23
      responses:
        "200":
          description: Returns the details of the requested Disk.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.Disk'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Disk
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Cluster Viewer
        - Cluster Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.DisksApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetDiskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DisksApi disksApi = new DisksApi(apiClient);\n\n        \n        String\
          \ extId = \"6ECef8bF-C9F8-e3B4-CEc6-6aBA0aBdFcB2\";\n\n        try {\n \
          \           GetDiskApiResponse getDiskApiResponse = disksApi.getDiskById(extId);\n\
          \            System.out.println(getDiskApiResponse.toString());\n\n    \
          \    } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DisksApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let disksApi = new DisksApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"822cD4aA-CAe5-6Eae-Eac5-7caADC9D36a7\";\n\n\n\n\
          \n\n    disksApi.getDiskById(extId).then(({data, response}) => {\n     \
          \   console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    disks_api = ntnx_clustermgmt_py_client.DisksApi(api_client=client)\n\
          \    \n    ext_id = \"ECD0c8Ff-dfE0-df6d-fCdE-3F8FDCec1dEb\"\n\n\n    try:\n\
          \        api_response = disks_api.get_disk_by_id(extId=ext_id)\n       \
          \ print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DisksApiInstance\
          \ *api.DisksApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DisksApiInstance = api.NewDisksApi(ApiClientInstance)\n\n    \n   \
          \ extId := \"d49EE45d-ff5e-b890-EBCE-59e5E69Bd4b2\"\n\n\n    response, error\
          \ := DisksApiInstance.GetDiskById(&extId)\n    if error != nil {\n     \
          \   fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.Disk)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/disks/F5e5deec-Eefa-2AAf-DD3D-cA3cD66bB53B" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/disks/f13bB5Da-aEbf-eAFD-60fc-4d2a14EcEcfD"
    delete:
      tags:
      - Disks
      summary: Removes Disk from a cluster
      description: Marks Disk identified by external identifier for removal.
      operationId: deleteDiskById
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 37d958a5-8141-409a-a584-e0a8c6dadb91
      responses:
        "202":
          description: Returns the task ID with reference to Disk removal. The task
            is completed when the Disk is marked for removal.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Disk
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 2
        timeUnit: seconds
      - type: small
        count: 4
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.DisksApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DeleteDiskApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DisksApi disksApi = new DisksApi(apiClient);\n\n        \n        String\
          \ extId = \"9BbbBe33-f8ce-60e7-Ec65-Ae35AF3135FB\";\n\n        try {\n \
          \           DeleteDiskApiResponse deleteDiskApiResponse = disksApi.deleteDiskById(extId);\n\
          \            System.out.println(deleteDiskApiResponse.toString());\n\n \
          \       } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DisksApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let disksApi = new DisksApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"7237F2fB-4edc-BFEb-e4dC-beaA8b55dAfA\";\n\n\n\n\
          \n\n    disksApi.deleteDiskById(extId).then(({data, response}) => {\n  \
          \      console.log(`API returned the following status code: ${response.status}`);\n\
          \        console.log(data.getData());\n    }).catch((error) => {\n     \
          \   console.log(`Error is: ${error}`);\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    disks_api = ntnx_clustermgmt_py_client.DisksApi(api_client=client)\n\
          \    \n    ext_id = \"49A6aea4-EBed-b5FA-CBbF-AEcec7bcb721\"\n\n\n    try:\n\
          \        api_response = disks_api.delete_disk_by_id(extId=ext_id)\n    \
          \    print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DisksApiInstance\
          \ *api.DisksApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DisksApiInstance = api.NewDisksApi(ApiClientInstance)\n\n    \n   \
          \ extId := \"AdFA0fed-84FE-e5bf-ffF5-Bd0a027a8Ede\"\n\n\n    response, error\
          \ := DisksApiInstance.DeleteDiskById(&extId)\n    if error != nil {\n  \
          \      fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/disks/aEA57efa-1C0C-2CAc-E47f-2c1FA7F6cEE3" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/disks/aDcfEB5A-bb1e-A84E-3Dda-BC9cfcba64Ec"
  /clustermgmt/v4.0/config/disks:
    get:
      tags:
      - Disks
      summary: Get Disks for all the clusters
      description: Fetches Disk details from all clusters registered with Prism Central.
      operationId: listDisks
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterName
          - diskAdvanceConfig/isOnline
          - hostName
          - serialNumber
          - status
          - storageTier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - clusterName
          - diskAdvanceConfig/isOnline
          - extId
          - hostName
          - serialNumber
          - status
          - storageTier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $apply
        in: query
        description: |
          A URL query parameter that allows clients to specify a sequence of transformations to the entity set, such as groupby, filter, aggregate etc. As of now only support for groupby exists.For example '$apply=groupby((templateName))' would get all templates grouped by templateName.
          The groupby can be applied on the following fields:
          - clusterName
          - diskAdvanceConfig/isOnline
          - hostName
          - status
          - storageTier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - clusterExtId
          - clusterName
          - cvmIpAddress
          - diskAdvanceConfig/hasBootPartitionsOnly
          - diskAdvanceConfig/isBootDisk
          - diskAdvanceConfig/isDataMigrated
          - diskAdvanceConfig/isDiagnosticInfoAvailable
          - diskAdvanceConfig/isErrorFoundInLog
          - diskAdvanceConfig/isMarkedForRemoval
          - diskAdvanceConfig/isMounted
          - diskAdvanceConfig/isOnline
          - diskAdvanceConfig/isPasswordProtected
          - diskAdvanceConfig/isPlannedOutage
          - diskAdvanceConfig/isSelfEncryptingDrive
          - diskAdvanceConfig/isSelfManagedNvme
          - diskAdvanceConfig/isSpdkManaged
          - diskAdvanceConfig/isSuspectedUnhealthy
          - diskAdvanceConfig/isUnderDiagnosis
          - diskAdvanceConfig/isUnhealthy
          - diskSizeBytes
          - extId
          - firmwareVersion
          - hostName
          - links
          - location
          - model
          - mountPath
          - nodeExtId
          - nodeIpAddress
          - nvmePciePath
          - physicalCapacityBytes
          - serialNumber
          - serviceVMId
          - status
          - storagePoolExtId
          - storageTier
          - targetFirmwareVersion
          - tenantId
          - vendor
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a paginated list of Disks from all clusters registered
            with Prism Central.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.Disk'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/disks
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/disks
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/disks
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Disk
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Cluster Viewer
        - Cluster Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.DisksApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListDisksApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DisksApi disksApi = new DisksApi(apiClient);\n\n        \n        int\
          \ page = 0;\n        \n        int limit = 50;\n\n        try {\n      \
          \      ListDisksApiResponse listDisksApiResponse = disksApi.listDisks(page,\
          \ limit, null, null, null, null);\n            System.out.println(listDisksApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, DisksApi } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let disksApi = new DisksApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$apply"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              disksApi.listDisks(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    disks_api = ntnx_clustermgmt_py_client.DisksApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = disks_api.list_disks(_page=page, _limit=limit)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DisksApiInstance\
          \ *api.DisksApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DisksApiInstance = api.NewDisksApi(ApiClientInstance)\n\n    \n   \
          \ page_ := 0\n    \n    limit_ := 50\n\n\n    response, error := DisksApiInstance.ListDisks(&page_,\
          \ &limit_, nil, nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.Disk)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/disks?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/disks?$apply=string_sample_data&$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
  /clustermgmt/v4.0/config/clusters/{extId}/$actions/add-disk:
    post:
      tags:
      - Disks
      summary: Adds Disk to a cluster
      description: "Repartitions and adds the Disk to a cluster, or adds an old Disk\
        \ again to a cluster that is marked for removal."
      operationId: addDisk
      parameters:
      - name: extId
        in: path
        description: The external identifier of the cluster on which Disk will be
          added.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a63f0fa0-0772-4bd9-987e-2f6f48db43be
      requestBody:
        description: Request model to add a disk to a cluster.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.DiskAdditionSpec'
        required: true
      responses:
        "202":
          description: Returns the task ID for addition of Disk to cluster. The task
            is complete when the Disk is added to the cluster.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}/$actions/add-disk\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}/$actions/add-disk\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}/$actions/add-disk\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Add Disk To Cluster
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 1
        timeUnit: seconds
      - type: small
        count: 4
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.DisksApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DiskAdditionSpec;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.AddDiskApiResponse;\nimport\
          \ org.springframework.web.client.RestClientException;\n\npublic class JavaSdkSample\
          \ {\n    public static void main(String[] args) {\n        // Configure\
          \ the client\n        ApiClient apiClient = new ApiClient();\n        //\
          \ IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DisksApi disksApi = new DisksApi(apiClient);\n\n        DiskAdditionSpec\
          \ diskAdditionSpec = new DiskAdditionSpec();\n\n        // DiskAdditionSpec\
          \ object initializations here...\n        diskAdditionSpec.setSerialNumber(\"\
          string_sample_data\");  // required field\n        \n        String extId\
          \ = \"6550E680-8b4B-DEAf-7CFA-2ACE1eAb8A48\";\n\n        try {\n       \
          \     AddDiskApiResponse addDiskApiResponse = disksApi.addDisk(extId, diskAdditionSpec);\n\
          \            System.out.println(addDiskApiResponse.toString());\n\n    \
          \    } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DisksApi, DiskAdditionSpec } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let disksApi = new DisksApi(apiClientInstance);\n\nfunction sample() {\n\
          \    let diskAdditionSpec = new DiskAdditionSpec();\n\n    // DiskAdditionSpec\
          \ object initializations here...\n    diskAdditionSpec.setSerialNumber(\"\
          string_sample_data\");  // required field\n\n    \n    let extId = \"1c7E8def-fFa1-bfCD-817f-CeDAAd0dDeFc\"\
          ;\n\n\n\n\n\n    disksApi.addDisk(extId, diskAdditionSpec).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    disks_api = ntnx_clustermgmt_py_client.DisksApi(api_client=client)\n\
          \    diskAdditionSpec = ntnx_clustermgmt_py_client.DiskAdditionSpec()\n\n\
          \    # DiskAdditionSpec object initializations here...\n    diskAdditionSpec.serial_number\
          \ = \"string_sample_data\"  # required field\n    \n    ext_id = \"A0Bb9DEc-9dD2-D0eE-DfA9-a75fDcC9D426\"\
          \n\n\n    try:\n        api_response = disks_api.add_disk(extId=ext_id,\
          \ body=diskAdditionSpec)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DisksApiInstance\
          \ *api.DisksApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DisksApiInstance = api.NewDisksApi(ApiClientInstance)\n\n    diskAdditionSpec\
          \ := import1.NewDiskAdditionSpec()\n\n    // DiskAdditionSpec object initializations\
          \ here...\n\n    \n    extId := \"fdff155b-AEC4-4D5f-5DD4-48fBF0EaBFec\"\
          \n\n\n    response, error := DisksApiInstance.AddDisk(&extId, diskAdditionSpec)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import2.TaskReference)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/cdBBe857-dbCb-0d7B-7cAd-7b268Df1C36C/$actions/add-disk" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"serialNumber":"string","diskPartitionInfo":{"partitionType":"$UNKNOWN","driveReplacementOption":"$UNKNOWN","$objectType":"clustermgmt.v4.config.DiskPartitionInfo"},"$objectType":"clustermgmt.v4.config.DiskAdditionSpec"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"serialNumber":"string","diskPartitionInfo":{"partitionType":"$UNKNOWN","driveReplacementOption":"$UNKNOWN","$objectType":"clustermgmt.v4.config.DiskPartitionInfo"},"$objectType":"clustermgmt.v4.config.DiskAdditionSpec"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/df160Af3-7bc1-C5f5-eBCA-6C0B5179cCb7/$actions/add-disk"
  /clustermgmt/v4.0/stats/disks/{extId}:
    get:
      tags:
      - Disks
      summary: Get stats for the existing Disk
      description: Fetch the stats information of the Disk identified by external
        identifier.
      operationId: getDiskStats
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Disk.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 05ce01da-87c2-4f02-a9c4-87782a43caa9
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 71
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      responses:
        "200":
          description: Returns the stats for the specified Disk in the cluster.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.stats.DiskStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/disks/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/disks/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/disks/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Disk Stats
        roleList:
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Cluster Viewer
        - Cluster Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.DisksApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.stats.GetDiskStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DisksApi disksApi = new DisksApi(apiClient);\n\n        \n        String\
          \ extId = \"Df9e19aF-fc32-21e5-BEe0-1cBdEBA6e056\";\n        // Datetime\
          \ needs to be in RFC3339 format\n        OffsetDateTime startTime = OffsetDateTime.now();\n\
          \        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ endTime = OffsetDateTime.now();\n        \n        int samplingInterval\
          \ = 1;\n        \n        Object statType = SOME_RAW_DATA;\n\n        try\
          \ {\n            GetDiskStatsApiResponse getDiskStatsApiResponse = disksApi.getDiskStats(extId,\
          \ startTime, endTime, samplingInterval, statType);\n            System.out.println(getDiskStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DisksApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let disksApi = new DisksApi(apiClientInstance);\n\nfunction sample() {\n\
          \n    \n    let extId = \"1c22Fd1B-89cf-Bd8C-1DBf-80C5FfDfaDf7\";\n    //Datetime\
          \ needs to be in RFC3339 format\n    let $startTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $endTime = \"2021-01-01T00:00:00-08:00\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $samplingInterval\"] = 1;\n    opts[\"$statType\"] = SOME_RAW_DATA;\n\n\n\
          \n\n    disksApi.getDiskStats(extId, $startTime, $endTime, opts).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\nimport datetime\n\nif __name__\
          \ == \"__main__\":\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    disks_api = ntnx_clustermgmt_py_client.DisksApi(api_client=client)\n\
          \    \n    ext_id = \"0bA2B3ce-DDd2-b80c-FC2d-9cCEc409Fb49\"\n    # Datetime\
          \ needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = disks_api.get_disk_stats(extId=ext_id,\
          \ _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DisksApiInstance\
          \ *api.DisksApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DisksApiInstance = api.NewDisksApi(ApiClientInstance)\n\n    \n   \
          \ extId := \"6Ad7cc00-c8AB-fCB5-01eA-3fDAE7307Fc5\"\n    // Datetime needs\
          \ to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ DisksApiInstance.GetDiskStats(&extId, &startTime_, &endTime_, &samplingInterval_,\
          \ &statType_)\n    if error != nil {\n        fmt.Println(error)\n     \
          \   return\n    }\n    data, _ := response.GetData().(import1.DiskStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/disks/8dCFC45C-77D8-0bAa-8A3C-EDEed1bcEaaa?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/disks/Ed4F4Beb-12fE-E8ab-48BD-A2Ae3cFCaAAe?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1"
  /clustermgmt/v4.0/ahv/config/pcie-devices:
    get:
      tags:
      - PcieDevices
      summary: Fetch the PCIe devices
      description: Fetch the PCIe devices
      operationId: listPcieDevices
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterExtId
          - configuration/classId
          - configuration/deviceId
          - configuration/progIFace
          - configuration/subClassId
          - configuration/subSystemId
          - configuration/subSystemVendorId
          - configuration/vendorId
          - extId
          - hostExtId
          - ownerVmExtId
          - state
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - clusterExtId
          - configuration
          - extId
          - hostExtId
          - ownerVmExtId
          - state
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The requested PCIe device entities
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.ahv.config.PcieDevice'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/ahv/config/pcie-devices
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/ahv/config/pcie-devices
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/ahv/config/pcie-devices
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Pcie Device
        roleList:
        - Cluster Admin
        - Cluster Viewer
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Super Admin
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "7.0"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.PcieDevicesApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.ahv.config.ListPcieDevicesApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    PcieDevicesApi pcieDevicesApi = new PcieDevicesApi(apiClient);\n\n\
          \        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListPcieDevicesApiResponse listPcieDevicesApiResponse\
          \ = pcieDevicesApi.listPcieDevices(page, limit, null, null);\n         \
          \   System.out.println(listPcieDevicesApiResponse.toString());\n\n     \
          \   } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, PcieDevicesApi } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let pcieDevicesApi = new PcieDevicesApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              pcieDevicesApi.listPcieDevices(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    pcie_devices_api = ntnx_clustermgmt_py_client.PcieDevicesApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = pcie_devices_api.list_pcie_devices(_page=page, _limit=limit)\n     \
          \   print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/ahv/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    PcieDevicesApiInstance\
          \ *api.PcieDevicesApi\n)\n\nfunc main() {\n    ApiClientInstance = client.NewApiClient()\n\
          \    // IPv4/IPv6 address or FQDN of the cluster\n    ApiClientInstance.Host\
          \ = \"localhost\"\n    // Port to which to connect to\n    ApiClientInstance.Port\
          \ = 9440\n    // Interval in ms to use during retry attempts\n    ApiClientInstance.RetryInterval\
          \ = 5 * time.Second\n    // Max retry attempts while reconnecting on a loss\
          \ of connection\n    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName\
          \ to connect to the cluster\n    ApiClientInstance.Username = \"username\"\
          \n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    PcieDevicesApiInstance = api.NewPcieDevicesApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := PcieDevicesApiInstance.ListPcieDevices(&page_, &limit_, nil, nil)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().([]import1.PcieDevice)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/ahv/config/pcie-devices?$filter=string_sample_data&$limit=50&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/ahv/config/pcie-devices?$filter=string_sample_data&$limit=50&$page=0&$select=string_sample_data"
  /clustermgmt/v4.0/config/storage-containers:
    get:
      tags:
      - StorageContainers
      summary: List Storage Containers
      description: "Lists the Storage Containers available in the cluster. \nNote:\
        \ The Storage Containers of PEs with versions prior to AOS 6.5 might have\
        \ missing attribute data, and the PEs under the self-owned RBAC category might\
        \ not be visible to non-admin users.\n"
      operationId: listStorageContainers
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - affinityHostExtId
          - clusterExtId
          - clusterName
          - compressionDelaySecs
          - containerExtId
          - name
          - ownerExtId
          - replicationFactor
          - storagePoolExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $orderby
        in: query
        description: |
          A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, '$orderby=templateName desc' would get all templates sorted by templateName in descending order.
          The orderby can be applied to the following fields:
          - affinityHostExtId
          - clusterName
          - compressionDelaySecs
          - containerExtId
          - erasureCode
          - name
          - replicationFactor
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - affinityHostExtId
          - cacheDeduplication
          - clusterExtId
          - clusterName
          - compressionDelaySecs
          - containerExtId
          - erasureCode
          - erasureCodeDelaySecs
          - extId
          - hasHigherEcFaultDomainPreference
          - isCompressionEnabled
          - isEncrypted
          - isInlineEcEnabled
          - isInternal
          - isMarkedForRemoval
          - isNfsWhitelistInherited
          - isSoftwareEncryptionEnabled
          - links
          - logicalAdvertisedCapacityBytes
          - logicalExplicitReservedCapacityBytes
          - logicalImplicitReservedCapacityBytes
          - markedForRemoval
          - maxCapacityBytes
          - name
          - nfsWhitelistAddress
          - onDiskDedup
          - ownerExtId
          - replicationFactor
          - storagePoolExtId
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the list of storage containers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageContainer'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
                  Get operation
      x-permissions:
        operationName: View Storage Container
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - Consumer
        - CSI System
        - Developer
        - Kubernetes Data Services System
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Storage Admin
        - Storage Viewer
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListStorageContainersApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListStorageContainersApiResponse listStorageContainersApiResponse\
          \ = storageContainersApi.listStorageContainers(page, limit, null, null,\
          \ null);\n            System.out.println(listStorageContainersApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, StorageContainersApi } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let storageContainersApi = new StorageContainersApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$orderby"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              storageContainersApi.listStorageContainers(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = storage_containers_api.list_storage_containers(_page=page, _limit=limit)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := StorageContainersApiInstance.ListStorageContainers(&page_, &limit_,\
          \ nil, nil, nil)\n    if error != nil {\n        fmt.Println(error)\n  \
          \      return\n    }\n    data, _ := response.GetData().([]import1.StorageContainer)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers?$filter=string_sample_data&$limit=50&$orderby=string_sample_data&$page=0&$select=string_sample_data"
    post:
      tags:
      - StorageContainers
      summary: Create a Storage Container
      description: "Creates a new Storage Container with the specified configuration\
        \ on the cluster identified by cluster’s external identifier. The location\
        \ header received in the API response contains the URL of the task object,\
        \ which can be used to further track the status of the request."
      operationId: createStorageContainer
      parameters:
      - name: X-Cluster-Id
        in: header
        description: The external identifier of the remote cluster to forward the
          request.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: da1eece0-4987-4cd3-affb-dc8ee724f1dd
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d10853b9-8b66-4d30-aa8e-c652af87ea64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageContainer'
        required: true
      responses:
        "202":
          description: Returns the status code indicating the request for creating
            a new storage container is accepted but not completed yet.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
                  Post operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
                  Post operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
                  Post operation
      x-permissions:
        operationName: Create Storage Container
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Storage Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: |2

          package sample;

          import com.nutanix.clu.java.client.ApiClient;
          import com.nutanix.clu.java.client.api.StorageContainersApi;
          import com.nutanix.dp1.clu.clustermgmt.v4.config.StorageContainer;
          import com.nutanix.dp1.clu.clustermgmt.v4.config.CreateStorageContainerApiResponse;
          import org.springframework.web.client.RestClientException;

          public class JavaSdkSample {
              public static void main(String[] args) {
                  // Configure the client
                  ApiClient apiClient = new ApiClient();
                  // IPv4/IPv6 address or FQDN of the cluster
                  apiClient.setHost("localhost");
                  // Port to which to connect to
                  apiClient.setPort(9440);
                  // Interval in ms to use during retry attempts
                  apiClient.setRetryInterval(5000);
                  // Max retry attempts while reconnecting on a loss of connection
                  apiClient.setMaxRetryAttempts(5);
                  // UserName to connect to the cluster
                  String username = "username";
                  // Password to connect to the cluster
                  String password = "password";
                  apiClient.setUsername(username);
                  apiClient.setPassword(password);

                  // Please add authorization information here if needed.
                  StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);

                  StorageContainer storageContainer = new StorageContainer();

                  // StorageContainer object initializations here...
                  storageContainer.setName("string_sample_data");  // required field

                  try {
                      CreateStorageContainerApiResponse createStorageContainerApiResponse = storageContainersApi.createStorageContainer(storageContainer);
                      System.out.println(createStorageContainerApiResponse.toString());

                  } catch (RestClientException ex) {
                      System.out.println(ex.getMessage());
                  }
              }
          }
      - lang: JavaScript
        source: |2

          import { ApiClient, StorageContainersApi, StorageContainer } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let storageContainersApi = new StorageContainersApi(apiClientInstance);

          function sample() {
              let storageContainer = new StorageContainer();

              // StorageContainer object initializations here...
              storageContainer.setName("string_sample_data");  // required field






              storageContainersApi.createStorageContainer(storageContainer).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: |2+

          import ntnx_clustermgmt_py_client

          if __name__ == "__main__":
              # Configure the client
              config = ntnx_clustermgmt_py_client.Configuration()
              # IPv4/IPv6 address or FQDN of the cluster
              config.host = "localhost"
              # Port to which to connect to
              config.port = 9440
              # Max retry attempts while reconnecting on a loss of connection
              config.max_retry_attempts = 3
              # Backoff factor to use during retry attempts
              config.backoff_factor = 3
              # UserName to connect to the cluster
              config.username = "username"
              # Password to connect to the cluster
              config.password = "password"
              # Please add authorization information here if needed.
              client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)
              storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)
              storageContainer = ntnx_clustermgmt_py_client.StorageContainer()

              # StorageContainer object initializations here...
              storageContainer.name = "string_sample_data"  # required field


              try:
                  api_response = storage_containers_api.create_storage_container(body=storageContainer)
                  print(api_response)
              except ntnx_clustermgmt_py_client.rest.ApiException as e:
                  print(e)

      - lang: Go
        source: |2+

          package main

          import (
              "fmt"
              "time"
              "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api"
              "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client"
              import1 "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config"
              import2 "github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config"
          )

          var (
              ApiClientInstance *client.ApiClient
              StorageContainersApiInstance *api.StorageContainersApi
          )

          func main() {
              ApiClientInstance = client.NewApiClient()
              // IPv4/IPv6 address or FQDN of the cluster
              ApiClientInstance.Host = "localhost"
              // Port to which to connect to
              ApiClientInstance.Port = 9440
              // Interval in ms to use during retry attempts
              ApiClientInstance.RetryInterval = 5 * time.Second
              // Max retry attempts while reconnecting on a loss of connection
              ApiClientInstance.MaxRetryAttempts = 5
              // UserName to connect to the cluster
              ApiClientInstance.Username = "username"
              // Password to connect to the cluster
              ApiClientInstance.Password = "password"
              // Please add authorization information here if needed.
              StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)

              storageContainer := import1.NewStorageContainer()

              // StorageContainer object initializations here...



              response, error := StorageContainersApiInstance.CreateStorageContainer(storageContainer)
              if error != nil {
                  fmt.Println(error)
                  return
              }
              data, _ := response.GetData().(import2.TaskReference)
              fmt.Println(data)

          }

      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'X-Cluster-Id: D1C5D2ae-Ed10-bd6D-cfcE-7CbD1faDEFBD' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"containerExtId":"string","ownerExtId":"string","name":"string","clusterExtId":"string","storagePoolExtId":"string","isMarkedForRemoval":true,"markedForRemoval":true,"maxCapacityBytes":0,"logicalExplicitReservedCapacityBytes":0,"logicalImplicitReservedCapacityBytes":0,"logicalAdvertisedCapacityBytes":0,"replicationFactor":0,"nfsWhitelistAddress":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"isNfsWhitelistInherited":true,"erasureCode":"$UNKNOWN","isInlineEcEnabled":true,"hasHigherEcFaultDomainPreference":true,"erasureCodeDelaySecs":0,"cacheDeduplication":"$UNKNOWN","onDiskDedup":"$UNKNOWN","isCompressionEnabled":true,"compressionDelaySecs":0,"isInternal":true,"isSoftwareEncryptionEnabled":true,"isEncrypted":true,"affinityHostExtId":"string","clusterName":"string","$objectType":"clustermgmt.v4.config.StorageContainer"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'X-Cluster-Id: feC5Bc92-ECa0-dDEc-b7Be-EdCBb3eFb4C7' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"containerExtId":"string","ownerExtId":"string","name":"string","clusterExtId":"string","storagePoolExtId":"string","isMarkedForRemoval":true,"markedForRemoval":true,"maxCapacityBytes":0,"logicalExplicitReservedCapacityBytes":0,"logicalImplicitReservedCapacityBytes":0,"logicalAdvertisedCapacityBytes":0,"replicationFactor":0,"nfsWhitelistAddress":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"isNfsWhitelistInherited":true,"erasureCode":"$UNKNOWN","isInlineEcEnabled":true,"hasHigherEcFaultDomainPreference":true,"erasureCodeDelaySecs":0,"cacheDeduplication":"$UNKNOWN","onDiskDedup":"$UNKNOWN","isCompressionEnabled":true,"compressionDelaySecs":0,"isInternal":true,"isSoftwareEncryptionEnabled":true,"isEncrypted":true,"affinityHostExtId":"string","clusterName":"string","$objectType":"clustermgmt.v4.config.StorageContainer"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers"
  /clustermgmt/v4.0/config/storage-containers/{extId}:
    get:
      tags:
      - StorageContainers
      summary: Get Storage Container configuration
      description: |
        Fetches the configuration details of an existing storage container identified by the external identifier.
        Note: The Storage Containers of PEs with versions prior to AOS 6.5 might have missing attribute data, and the PEs under the self-owned RBAC category might not be visible to non-admin users.
      operationId: getStorageContainerById
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Storage Container.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1c3ebeb5-67ce-4b25-b0af-32f8bb012680
      responses:
        "200":
          description: Returns the requested storage container details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageContainer'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Get operation"
      x-permissions:
        operationName: View Storage Container
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - Consumer
        - CSI System
        - Developer
        - Kubernetes Data Services System
        - Operator
        - Prism Admin
        - Prism Viewer
        - Project Admin
        - Self-Service Admin
        - Storage Admin
        - Storage Viewer
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 10
        timeUnit: seconds
      - type: small
        count: 10
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.GetStorageContainerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        \n        String extId = \"DBfAbAde-ea6a-1EbE-eeeB-dbbdeDDeBf7b\"\
          ;\n\n        try {\n            GetStorageContainerApiResponse getStorageContainerApiResponse\
          \ = storageContainersApi.getStorageContainerById(extId);\n            System.out.println(getStorageContainerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StorageContainersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let storageContainersApi = new StorageContainersApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"c42D1580-8454-AdE5-cFeB-dFFdEc1fBADE\"\
          ;\n\n\n\n\n\n    storageContainersApi.getStorageContainerById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    \n    ext_id = \"AAC3AcfF-E0D6-9cbe-Ec47-e9C6aE32cbAB\"\n\n\n    try:\n\
          \        api_response = storage_containers_api.get_storage_container_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    \n    extId := \"9Be4be16-ba9c-efA6-bBca-baf8Ee6e6CA2\"\n\n\n    response,\
          \ error := StorageContainersApiInstance.GetStorageContainerById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.StorageContainer)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/6EebEcf7-76D7-c157-7Ca8-7d169fEfCDbA" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/aefd43a0-b5fb-EAcC-FFbe-dcF538DEDabF"
    put:
      tags:
      - StorageContainers
      summary: Update a Storage Container
      description: "Updates the configuration of an existing Storage Container identified\
        \ by external identifier. The location header received in the API response\
        \ contains the URL of the task object, which can be used to further track\
        \ the status of the request."
      operationId: updateStorageContainerById
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Storage Container.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a82f6080-9776-4f34-9e35-f284c855a867
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 2b1c9be0-97a3-458f-95c8-9adf48ab4cd4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageContainer'
        required: true
      responses:
        "202":
          description: Returns the status code indicating the request to update storage
            container is accepted but not completed yet.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Put operation"
      x-permissions:
        operationName: Update Storage Container
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Storage Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.StorageContainer;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.GetStorageContainerApiResponse;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UpdateStorageContainerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        StorageContainer storageContainer = new StorageContainer();\n\n\
          \        // StorageContainer object initializations here...\n        storageContainer.setName(\"\
          string_sample_data\");  // required field\n        \n        String extId\
          \ = \"7Ecdc9d4-f791-BB11-aBEa-bEdAfB4DFbfc\";\n\n        // perform GET\
          \ call\n        GetStorageContainerApiResponse getResponse = null;\n   \
          \     try {\n            getResponse = storageContainersApi.getStorageContainerById(extId);\n\
          \        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateStorageContainerApiResponse updateStorageContainerApiResponse\
          \ = storageContainersApi.updateStorageContainerById(extId, storageContainer,\
          \ opts);\n            System.out.println(updateStorageContainerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StorageContainersApi, StorageContainer, GetStorageContainerApiResponse\
          \ } from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let storageContainersApi = new StorageContainersApi(apiClientInstance);\n\
          \nfunction sample() {\n    let storageContainer = new StorageContainer();\n\
          \n    // StorageContainer object initializations here...\n    storageContainer.setName(\"\
          string_sample_data\");  // required field\n\n    \n    let extId = \"1DF99FEc-5beE-3Acd-8FBA-CD4dC7Eb7fbe\"\
          ;\n\n\n    // Perform Get call\n    storageContainersApi.getStorageContainerById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        storageContainersApi.updateStorageContainerById(extId,\
          \ storageContainer, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    storageContainer = ntnx_clustermgmt_py_client.StorageContainer()\n\n\
          \    # StorageContainer object initializations here...\n    storageContainer.name\
          \ = \"string_sample_data\"  # required field\n    \n    ext_id = \"e9CCCd2B-Cc0C-fd9A-cbBc-Ae80f42c3aeB\"\
          \n\n    try:\n        api_response = storage_containers_api.get_storage_container_by_id(extId=ext_id)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_clustermgmt_py_client.ApiClient.get_etag(api_response)\n\
          \n    try:\n        api_response = storage_containers_api.update_storage_container_by_id(extId=ext_id,\
          \ body=storageContainer, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_clustermgmt_py_client.rest.ApiException as e:\n       \
          \ print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    storageContainer := import1.NewStorageContainer()\n\n    // StorageContainer\
          \ object initializations here...\n\n    \n    extId := \"8acCc40c-caDb-BFBD-aee3-F2EE5EDAE9f9\"\
          \n\n    getResponse, err := StorageContainersApiInstance.GetStorageContainerById(&extId)\n\
          \    if err != nil {\n        fmt.Println(err)\n        return\n    }\n\n\
          \    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := StorageContainersApiInstance.UpdateStorageContainerById(&extId,\
          \ storageContainer, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/4FEE8a9A-AD9A-2Da2-de8c-b01beFd7DA8A" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'If-Match: string_sample_data' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"containerExtId":"string","ownerExtId":"string","name":"string","clusterExtId":"string","storagePoolExtId":"string","isMarkedForRemoval":true,"markedForRemoval":true,"maxCapacityBytes":0,"logicalExplicitReservedCapacityBytes":0,"logicalImplicitReservedCapacityBytes":0,"logicalAdvertisedCapacityBytes":0,"replicationFactor":0,"nfsWhitelistAddress":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"isNfsWhitelistInherited":true,"erasureCode":"$UNKNOWN","isInlineEcEnabled":true,"hasHigherEcFaultDomainPreference":true,"erasureCodeDelaySecs":0,"cacheDeduplication":"$UNKNOWN","onDiskDedup":"$UNKNOWN","isCompressionEnabled":true,"compressionDelaySecs":0,"isInternal":true,"isSoftwareEncryptionEnabled":true,"isEncrypted":true,"affinityHostExtId":"string","clusterName":"string","$objectType":"clustermgmt.v4.config.StorageContainer"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'If-Match: string_sample_data' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"containerExtId":"string","ownerExtId":"string","name":"string","clusterExtId":"string","storagePoolExtId":"string","isMarkedForRemoval":true,"markedForRemoval":true,"maxCapacityBytes":0,"logicalExplicitReservedCapacityBytes":0,"logicalImplicitReservedCapacityBytes":0,"logicalAdvertisedCapacityBytes":0,"replicationFactor":0,"nfsWhitelistAddress":[{"ipv4":{"value":"string","prefixLength":32,"$objectType":"common.v1.config.IPv4Address"},"ipv6":{"value":"string","prefixLength":128,"$objectType":"common.v1.config.IPv6Address"},"fqdn":{"value":"string","$objectType":"common.v1.config.FQDN"},"$objectType":"common.v1.config.IPAddressOrFQDN"}],"isNfsWhitelistInherited":true,"erasureCode":"$UNKNOWN","isInlineEcEnabled":true,"hasHigherEcFaultDomainPreference":true,"erasureCodeDelaySecs":0,"cacheDeduplication":"$UNKNOWN","onDiskDedup":"$UNKNOWN","isCompressionEnabled":true,"compressionDelaySecs":0,"isInternal":true,"isSoftwareEncryptionEnabled":true,"isEncrypted":true,"affinityHostExtId":"string","clusterName":"string","$objectType":"clustermgmt.v4.config.StorageContainer"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/E5afFD1f-fdDC-A5C5-94CB-b7Cb14352Aa0"
    delete:
      tags:
      - StorageContainers
      summary: Delete a Storage Container
      description: "Deletes an existing Storage Container identified by external identifier.\
        \ The location header received in the API response contains the URL of the\
        \ task object, which can be used to further track the status of the request."
      operationId: deleteStorageContainerById
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Storage Container.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a7436b49-053f-4250-9388-434c055dfed6
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 8cf5aab0-07d7-4851-8bf1-6ffcb39e3f40
      - name: ignoreSmallFiles
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          description: Indicates whether the small files should be ignored. Storage
            containers can have small files that are measured in KBs; these files
            are ignored when the storage container is marked for removal.
          default: true
      responses:
        "202":
          description: Returns task ID indicating the request to delete a storage
            container is accepted but not completed yet.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
                  \ Delete operation"
      x-permissions:
        operationName: Delete Storage Container
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Storage Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DeleteStorageContainerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        \n        String extId = \"6d7220D6-Fcde-Ec0c-fdE0-Cb483ffBD0d6\"\
          ;\n        \n        boolean ignoreSmallFiles = true;\n\n        try {\n\
          \            DeleteStorageContainerApiResponse deleteStorageContainerApiResponse\
          \ = storageContainersApi.deleteStorageContainerById(extId, ignoreSmallFiles);\n\
          \            System.out.println(deleteStorageContainerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StorageContainersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let storageContainersApi = new StorageContainersApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"0EaeaCf3-6DE2-1CE0-EaDF-614B9FFa2bdA\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          ignoreSmallFiles\"] = true;\n\n\n\n\n    storageContainersApi.deleteStorageContainerById(extId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    \n    ext_id = \"6cCA7DdE-6dEd-ae69-c4da-FEfeEC7bcfF9\"\n    \n   \
          \ ignore_small_files = True\n\n\n    try:\n        api_response = storage_containers_api.delete_storage_container_by_id(extId=ext_id,\
          \ _ignoreSmallFiles=ignore_small_files)\n        print(api_response)\n \
          \   except ntnx_clustermgmt_py_client.rest.ApiException as e:\n        print(e)\n\
          \n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    \n    extId := \"b3Da0eC0-A27f-3Feb-BDCd-B7FC1FD368bE\"\n    \n  \
          \  ignoreSmallFiles := true\n\n\n    response, error := StorageContainersApiInstance.DeleteStorageContainerById(&extId,\
          \ &ignoreSmallFiles)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/fcE6FAcD-fcaA-CaE8-CBaf-d9Cd9aa0C978?ignoreSmallFiles=true" \
               --header 'Accept: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/Ddd4DAFc-43a1-c0ce-6F1d-EaCFfdbe9CcC?ignoreSmallFiles=true"
  /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/mount:
    post:
      tags:
      - StorageContainers
      summary: Mount Storage Container on ESX datastore
      description: "Mounts the Storage Container identified by external identifier\
        \ on an ESX datastore. The location header received in the API response contains\
        \ the URL of the task object, which can be used to further track the status\
        \ of the request."
      operationId: mountStorageContainer
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Storage Container.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: fae0e3f5-4246-4591-bfc2-9927f9e1e2c4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.DataStoreMount'
        required: true
      responses:
        "202":
          description: Returns task ID indicating the request to mount storage container
            is accepted but not completed yet.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/mount\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/mount\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/mount\
                  \ Post operation"
      x-permissions:
        operationName: Mount Storage Container Datastore
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Storage Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DataStoreMount;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.MountStorageContainerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        DataStoreMount dataStoreMount = new DataStoreMount();\n\n    \
          \    // DataStoreMount object initializations here...\n        dataStoreMount.setContainerName(\"\
          string_sample_data\");  // required field\n        \n        String extId\
          \ = \"7DFec0f8-AFE1-C48D-5A05-bA69AEFD2BFf\";\n\n        try {\n       \
          \     MountStorageContainerApiResponse mountStorageContainerApiResponse\
          \ = storageContainersApi.mountStorageContainer(extId, dataStoreMount);\n\
          \            System.out.println(mountStorageContainerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StorageContainersApi, DataStoreMount } from\
          \ \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let storageContainersApi = new StorageContainersApi(apiClientInstance);\n\
          \nfunction sample() {\n    let dataStoreMount = new DataStoreMount();\n\n\
          \    // DataStoreMount object initializations here...\n    dataStoreMount.setContainerName(\"\
          string_sample_data\");  // required field\n\n    \n    let extId = \"aAD7eeAD-ab9F-C0c9-20dF-1BcC2b2AA1ef\"\
          ;\n\n\n\n\n\n    storageContainersApi.mountStorageContainer(extId, dataStoreMount).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    dataStoreMount = ntnx_clustermgmt_py_client.DataStoreMount()\n\n  \
          \  # DataStoreMount object initializations here...\n    dataStoreMount.container_name\
          \ = \"string_sample_data\"  # required field\n    \n    ext_id = \"ad2ee572-Df37-4fE2-CA12-7DE2Be2EfA58\"\
          \n\n\n    try:\n        api_response = storage_containers_api.mount_storage_container(extId=ext_id,\
          \ body=dataStoreMount)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    dataStoreMount := import1.NewDataStoreMount()\n\n    // DataStoreMount\
          \ object initializations here...\n\n    \n    extId := \"185f1e63-5A36-d0C5-634C-Bff0Bfe28E9f\"\
          \n\n\n    response, error := StorageContainersApiInstance.MountStorageContainer(&extId,\
          \ dataStoreMount)\n    if error != nil {\n        fmt.Println(error)\n \
          \       return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/c1499BD7-1FFA-F59d-bBE6-C400FB003a59/$actions/mount" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"datastoreName":"string","containerName":"string","nodeExtIds":["string"],"isReadOnly":true,"targetPath":"string","$objectType":"clustermgmt.v4.config.DataStoreMount"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"datastoreName":"string","containerName":"string","nodeExtIds":["string"],"isReadOnly":true,"targetPath":"string","$objectType":"clustermgmt.v4.config.DataStoreMount"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/CCdFaB19-b2c9-D91F-bceA-dcbD5A54bEAA/$actions/mount"
  /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/unmount:
    post:
      tags:
      - StorageContainers
      summary: Unmount Storage Container from ESX datastore
      description: "Unmounts the Storage Container identified by external identifier\
        \ from the ESX datastore. The location header received in the API response\
        \ contains the URL of the task object, which can be used to further track\
        \ the status of the request."
      operationId: unmountStorageContainer
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Storage Container.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 1e4de542-d359-4dcc-b5a8-5f12a30f4d5c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.DataStoreUnmount'
        required: true
      responses:
        "202":
          description: Returns the task ID indicating the request to unmount storage
            container is accepted but is not completed yet.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/unmount\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/unmount\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/unmount\
                  \ Post operation"
      x-permissions:
        operationName: Unmount Storage Container Datastore
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - Prism Admin
        - Self-Service Admin
        - Storage Admin
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.DataStoreUnmount;\n\
          import com.nutanix.dp1.clu.clustermgmt.v4.config.UnmountStorageContainerApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        DataStoreUnmount dataStoreUnmount = new DataStoreUnmount();\n\n\
          \        // DataStoreUnmount object initializations here...\n        dataStoreUnmount.setDatastoreName(\"\
          string_sample_data\");  // required field\n        \n        String extId\
          \ = \"6DBCBb3f-16c4-Eba4-BFCd-4e3BBDcB6Ca1\";\n\n        try {\n       \
          \     UnmountStorageContainerApiResponse unmountStorageContainerApiResponse\
          \ = storageContainersApi.unmountStorageContainer(extId, dataStoreUnmount);\n\
          \            System.out.println(unmountStorageContainerApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StorageContainersApi, DataStoreUnmount } from\
          \ \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\nlet\
          \ apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let storageContainersApi = new StorageContainersApi(apiClientInstance);\n\
          \nfunction sample() {\n    let dataStoreUnmount = new DataStoreUnmount();\n\
          \n    // DataStoreUnmount object initializations here...\n    dataStoreUnmount.setDatastoreName(\"\
          string_sample_data\");  // required field\n\n    \n    let extId = \"E0Ac7Ccb-b6Fd-8FA3-ffcF-5e21EFDB03F1\"\
          ;\n\n\n\n\n\n    storageContainersApi.unmountStorageContainer(extId, dataStoreUnmount).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    dataStoreUnmount = ntnx_clustermgmt_py_client.DataStoreUnmount()\n\n\
          \    # DataStoreUnmount object initializations here...\n    dataStoreUnmount.datastore_name\
          \ = \"string_sample_data\"  # required field\n    \n    ext_id = \"EAeDB6DA-Bf45-F3Cc-71e9-855eaCB87fC2\"\
          \n\n\n    try:\n        api_response = storage_containers_api.unmount_storage_container(extId=ext_id,\
          \ body=dataStoreUnmount)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    dataStoreUnmount := import1.NewDataStoreUnmount()\n\n    // DataStoreUnmount\
          \ object initializations here...\n\n    \n    extId := \"99cC3231-9DaF-Ff4C-4b9b-7E896AEEB8Cb\"\
          \n\n\n    response, error := StorageContainersApiInstance.UnmountStorageContainer(&extId,\
          \ dataStoreUnmount)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/Fd7Aed44-F9dA-e0ca-4DeF-6E35AbaCAca2/$actions/unmount" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"datastoreName":"string","nodeExtIds":["string"],"$objectType":"clustermgmt.v4.config.DataStoreUnmount"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"datastoreName":"string","nodeExtIds":["string"],"$objectType":"clustermgmt.v4.config.DataStoreUnmount"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/storage-containers/B37ae14A-CdbE-CEbc-AF85-96fDd94c22Eb/$actions/unmount"
  /clustermgmt/v4.0/config/clusters/{clusterExtId}/storage-containers/datastores:
    get:
      tags:
      - StorageContainers
      summary: List datastores of a cluster
      description: Lists all the datastores associated with Storage Containers from
        a cluster.
      operationId: listDataStoresByClusterId
      parameters:
      - name: clusterExtId
        in: path
        description: The cluster from which the datastores needs to be listed.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: f234a1a1-6123-438e-a1b0-1e53dfed1a89
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - containerExtId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a list of datastores
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    maxItems: 300
                    minItems: 0
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.DataStore'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/storage-containers/datastores\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/storage-containers/datastores\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/storage-containers/datastores\
                  \ Get operation"
      x-permissions:
        operationName: View Storage Container Datastore
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Storage Admin
        - Storage Viewer
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 3
        timeUnit: seconds
      - type: small
        count: 3
        timeUnit: seconds
      - type: large
        count: 5
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.config.ListDataStoresByClusterIdApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        \n        String clusterExtId = \"4DBBaECd-Fb1D-F0EF-b28A-6EeAEbf27652\"\
          ;\n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListDataStoresByClusterIdApiResponse listDataStoresByClusterIdApiResponse\
          \ = storageContainersApi.listDataStoresByClusterId(clusterExtId, page, limit,\
          \ null);\n            System.out.println(listDataStoresByClusterIdApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StorageContainersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let storageContainersApi = new StorageContainersApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let clusterExtId = \"beea613e-3EFF-badc-Fd69-62D0199D7AA5\"\
          ;\n\n    // Construct Optional Parameters\n    var opts = {};\n    opts[\"\
          $page\"] = 0;\n    opts[\"$limit\"] = 50;\n    opts[\"$filter\"] = \"string_sample_data\"\
          ;\n\n\n\n\n    storageContainersApi.listDataStoresByClusterId(clusterExtId,\
          \ opts).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    \n    cluster_ext_id = \"7b1F5739-Add6-FeaE-B21B-E9Abb6e1F2E4\"\n \
          \   \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = storage_containers_api.list_data_stores_by_cluster_id(clusterExtId=cluster_ext_id,\
          \ _page=page, _limit=limit)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    \n    clusterExtId := \"e4EFbEeF-BA1a-ccB1-fcef-A2ECd6C2c5f0\"\n \
          \   \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error :=\
          \ StorageContainersApiInstance.ListDataStoresByClusterId(&clusterExtId,\
          \ &page_, &limit_, nil)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().([]import1.DataStore)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/3bBbDFeD-7EDC-56B8-08fF-B1Bb5bCa08de/storage-containers/datastores?$filter=string_sample_data&$limit=50&$page=0" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/clusters/eaEcB936-De83-FC88-aEC9-b6cCE6e1DCCf/storage-containers/datastores?$filter=string_sample_data&$limit=50&$page=0"
  /clustermgmt/v4.0/stats/storage-containers/{extId}:
    get:
      tags:
      - StorageContainers
      summary: Get Stats for a Storage Container
      description: Fetches the statistical information for the Storage Container identified
        by external identifier..
      operationId: getStorageContainerStats
      parameters:
      - name: extId
        in: path
        description: The external identifier of the Storage Container.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: e6fc482c-53e6-4a83-9cb5-3bf5ebd6b89a
      - name: $startTime
        in: query
        description: |
          The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The start time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00 would consider all stats starting at 1:23:45.678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $endTime
        in: query
        description: |
          The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
        required: true
        style: form
        explode: false
        schema:
          type: string
          description: |
            The end time of the period for which stats should be reported. The value should be in extended ISO-8601 format. For example, end time of 2022-04-23T013:23:45.678+09:00 would consider all stats till 13:23:45 .678 on the 23rd of April 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      - name: $samplingInterval
        in: query
        description: |
          The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
        required: false
        style: form
        explode: false
        schema:
          minimum: 1
          type: integer
          description: |
            The sampling interval in seconds at which statistical data should be collected. For example, if you want performance statistics every 30 seconds, then provide the value as 30.
          example: 83
      - name: $statType
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/common.v1.0.stats.DownSamplingOperator'
      responses:
        "200":
          description: Returns the stats for the specified Storage Container in the
            cluster.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.stats.StorageContainerStats'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/storage-containers/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/storage-containers/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/storage-containers/{extId}\
                  \ Get operation"
      x-permissions:
        operationName: View Storage Container Stats
        deploymentList:
        - ON_PREM
        - CLOUD
        roleList:
        - CSI System
        - Kubernetes Data Services System
        - Prism Admin
        - Prism Viewer
        - Self-Service Admin
        - Storage Admin
        - Storage Viewer
        - Super Admin
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 10
        timeUnit: seconds
      - type: xlarge
        count: 10
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.5"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.clu.java.client.ApiClient;\n\
          import com.nutanix.clu.java.client.api.StorageContainersApi;\nimport com.nutanix.dp1.clu.clustermgmt.v4.stats.GetStorageContainerStatsApiResponse;\n\
          import java.time.OffsetDateTime;\nimport org.springframework.web.client.RestClientException;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    StorageContainersApi storageContainersApi = new StorageContainersApi(apiClient);\n\
          \n        \n        String extId = \"BD0C32b1-BEB8-DE0B-fAb3-A7Ec24cad4cd\"\
          ;\n        // Datetime needs to be in RFC3339 format\n        OffsetDateTime\
          \ startTime = OffsetDateTime.now();\n        // Datetime needs to be in\
          \ RFC3339 format\n        OffsetDateTime endTime = OffsetDateTime.now();\n\
          \        \n        int samplingInterval = 1;\n        \n        Object statType\
          \ = SOME_RAW_DATA;\n\n        try {\n            GetStorageContainerStatsApiResponse\
          \ getStorageContainerStatsApiResponse = storageContainersApi.getStorageContainerStats(extId,\
          \ startTime, endTime, samplingInterval, statType);\n            System.out.println(getStorageContainerStatsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, StorageContainersApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let storageContainersApi = new StorageContainersApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"EdeeceFc-263E-F53D-0484-3F9C7FcACfBA\"\
          ;\n    //Datetime needs to be in RFC3339 format\n    let $startTime = \"\
          2021-01-01T00:00:00-08:00\";\n    //Datetime needs to be in RFC3339 format\n\
          \    let $endTime = \"2021-01-01T00:00:00-08:00\";\n\n    // Construct Optional\
          \ Parameters\n    var opts = {};\n    opts[\"$samplingInterval\"] = 1;\n\
          \    opts[\"$statType\"] = SOME_RAW_DATA;\n\n\n\n\n    storageContainersApi.getStorageContainerStats(extId,\
          \ $startTime, $endTime, opts).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\nimport datetime\n\nif __name__\
          \ == \"__main__\":\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    storage_containers_api = ntnx_clustermgmt_py_client.StorageContainersApi(api_client=client)\n\
          \    \n    ext_id = \"d9C9A06e-8D8D-df4C-2aBC-96fF1dAe69aE\"\n    # Datetime\
          \ needs to be in RFC3339 format\n    start_time = datetime.datetime.Now()\n\
          \    # Datetime needs to be in RFC3339 format\n    end_time = datetime.datetime.Now()\n\
          \    \n    sampling_interval = 1\n    \n    stat_type = SOME_RAW_DATA\n\n\
          \n    try:\n        api_response = storage_containers_api.get_storage_container_stats(extId=ext_id,\
          \ _startTime=start_time, _endTime=end_time, _samplingInterval=sampling_interval,\
          \ _statType=stat_type)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"time\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/stats\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    StorageContainersApiInstance\
          \ *api.StorageContainersApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    StorageContainersApiInstance = api.NewStorageContainersApi(ApiClientInstance)\n\
          \n    \n    extId := \"13a7D7fD-B1Ab-7035-94af-D3b230Ee3dbA\"\n    // Datetime\
          \ needs to be in RFC3339 format\n    startTime_ := time.Now()\n    // Datetime\
          \ needs to be in RFC3339 format\n    endTime_ := time.Now()\n    \n    samplingInterval_\
          \ := 1\n    \n    statType_ := SOME_RAW_DATA\n\n\n    response, error :=\
          \ StorageContainersApiInstance.GetStorageContainerStats(&extId, &startTime_,\
          \ &endTime_, &samplingInterval_, &statType_)\n    if error != nil {\n  \
          \      fmt.Println(error)\n        return\n    }\n    data, _ := response.GetData().(import1.StorageContainerStats)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/storage-containers/BFAeB91B-84dd-4cdC-cfeF-CBc35Cc3e41e?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/stats/storage-containers/CbD1Bd10-5b5C-6BDc-CdD0-CeCe0FAFAD8B?$startTime=2021-01-01T00:00:00-08:00&$statType=SOME_RAW_DATA&$endTime=2021-01-01T00:00:00-08:00&$samplingInterval=1"
  /clustermgmt/v4.0/config/vcenter-extensions:
    get:
      tags:
      - VcenterExtensions
      summary: List vCenter server extensions.
      description: List of vCenter server extensions for the clusters registered under
        a Prism Central server.
      operationId: listVcenterExtensions
      parameters:
      - name: $page
        in: query
        description: |
          A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          description: |
            A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results.
          format: int32
          default: 0
      - name: $limit
        in: query
        description: |
          A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
        required: false
        style: form
        explode: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          description: |
            A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set.
          format: int32
          default: 50
      - name: $filter
        in: query
        description: |
          A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions.
          For example, filter '$filter=name eq 'karbon-ntnx-1.0' would filter the result on cluster name 'karbon-ntnx1.0', filter '$filter=startswith(name, 'C')' would filter on cluster name starting with 'C'.
          The filter can be applied to the following fields:
          - clusterExtId
          - ipAddress
          - isRegistered
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: $select
        in: query
        description: |
          A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned.
          - clusterExtId
          - extId
          - ipAddress
          - isRegistered
          - links
          - tenantId
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: The list of vCenter server extensions returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterExtension'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions
                  Get operation
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions
                  Get operation
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions
                  Get operation
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Vcenter Extension
        roleList:
        - Prism Admin
        - Prism Viewer
        - Super Admin
        - Cluster Admin
        - Cluster Viewer
      x-rate-limit:
      - type: xsmall
        count: 4
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 12
        timeUnit: seconds
      - type: XLarge
        count: 12
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vcnt.java.client.ApiClient;\n\
          import com.nutanix.vcnt.java.client.api.VcenterExtensionsApi;\nimport com.nutanix.dp1.vcnt.clustermgmt.v4.config.ListVcenterExtensionsApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VcenterExtensionsApi vcenterExtensionsApi = new VcenterExtensionsApi(apiClient);\n\
          \n        \n        int page = 0;\n        \n        int limit = 50;\n\n\
          \        try {\n            ListVcenterExtensionsApiResponse listVcenterExtensionsApiResponse\
          \ = vcenterExtensionsApi.listVcenterExtensions(page, limit, null, null);\n\
          \            System.out.println(listVcenterExtensionsApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: |2

          import { ApiClient, VcenterExtensionsApi } from "@nutanix-api/clustermgmt-js-client";

          // Configure the client
          let apiClientInstance = new ApiClient();
          // IPv4/IPv6 address or FQDN of the cluster
          apiClientInstance.host = 'localhost';
          // Port to which to connect to
          apiClientInstance.port = '9440';
          // Max retry attempts while reconnecting on a loss of connection
          apiClientInstance.maxRetryAttempts = 5;
          // Interval in ms to use during retry attempts
          apiClientInstance.retryInterval = 5000;
          // UserName to connect to the cluster
          apiClientInstance.username = 'username';
          // Password to connect to the cluster
          apiClientInstance.password = 'password';
          // Please add authorization information here if needed.
          let vcenterExtensionsApi = new VcenterExtensionsApi(apiClientInstance);

          function sample() {


              // Construct Optional Parameters
              var opts = {};
              opts["$page"] = 0;
              opts["$limit"] = 50;
              opts["$filter"] = "string_sample_data";
              opts["$select"] = "string_sample_data";




              vcenterExtensionsApi.listVcenterExtensions(opts).then(({data, response}) => {
                  console.log(`API returned the following status code: ${response.status}`);
                  console.log(data.getData());
              }).catch((error) => {
                  console.log(`Error is: ${error}`);
              });

          }
          sample()
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    vcenter_extensions_api = ntnx_clustermgmt_py_client.VcenterExtensionsApi(api_client=client)\n\
          \    \n    page = 0\n    \n    limit = 50\n\n\n    try:\n        api_response\
          \ = vcenter_extensions_api.list_vcenter_extensions(_page=page, _limit=limit)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VcenterExtensionsApiInstance\
          \ *api.VcenterExtensionsApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VcenterExtensionsApiInstance = api.NewVcenterExtensionsApi(ApiClientInstance)\n\
          \n    \n    page_ := 0\n    \n    limit_ := 50\n\n\n    response, error\
          \ := VcenterExtensionsApiInstance.ListVcenterExtensions(&page_, &limit_,\
          \ nil, nil)\n    if error != nil {\n        fmt.Println(error)\n       \
          \ return\n    }\n    data, _ := response.GetData().([]import1.VcenterExtension)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions?$filter=string_sample_data&$limit=50&$page=0&$select=string_sample_data" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions?$filter=string_sample_data&$limit=50&$page=0&$select=string_sample_data"
  /clustermgmt/v4.0/config/vcenter-extensions/{extId}:
    get:
      tags:
      - VcenterExtensions
      summary: Get vCenter server extension.
      description: Fetches vCenter server extension information for the given VcenterExtensionExtId.
      operationId: getVcenterExtensionById
      parameters:
      - name: extId
        in: path
        description: The globally unique identifier of vCenter Server extension instance.
          It should be of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: a5fe2b3e-573a-4678-be6c-e176e8d0450a
      responses:
        "200":
          description: vCenter server extension object returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterExtension'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Vcenter Extension
        roleList:
        - Prism Admin
        - Prism Viewer
        - Super Admin
        - Cluster Admin
        - Cluster Viewer
      x-rate-limit:
      - type: xsmall
        count: 8
        timeUnit: seconds
      - type: Small
        count: 16
        timeUnit: seconds
      - type: Large
        count: 20
        timeUnit: seconds
      - type: XLarge
        count: 20
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vcnt.java.client.ApiClient;\n\
          import com.nutanix.vcnt.java.client.api.VcenterExtensionsApi;\nimport com.nutanix.dp1.vcnt.clustermgmt.v4.config.GetVcenterExtensionApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VcenterExtensionsApi vcenterExtensionsApi = new VcenterExtensionsApi(apiClient);\n\
          \n        \n        String extId = \"f816cCD3-b68A-cCA7-b9fD-c5e3CB4dDFcB\"\
          ;\n\n        try {\n            GetVcenterExtensionApiResponse getVcenterExtensionApiResponse\
          \ = vcenterExtensionsApi.getVcenterExtensionById(extId);\n            System.out.println(getVcenterExtensionApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VcenterExtensionsApi } from \"@nutanix-api/clustermgmt-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vcenterExtensionsApi = new VcenterExtensionsApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"a1da4ecE-1BeE-9dBd-f5CF-29eA0Fb9cf9b\"\
          ;\n\n\n\n\n\n    vcenterExtensionsApi.getVcenterExtensionById(extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    vcenter_extensions_api = ntnx_clustermgmt_py_client.VcenterExtensionsApi(api_client=client)\n\
          \    \n    ext_id = \"fB3EDdC6-4eED-eb70-DBAC-cDc9A7d4bDB8\"\n\n\n    try:\n\
          \        api_response = vcenter_extensions_api.get_vcenter_extension_by_id(extId=ext_id)\n\
          \        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VcenterExtensionsApiInstance\
          \ *api.VcenterExtensionsApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VcenterExtensionsApiInstance = api.NewVcenterExtensionsApi(ApiClientInstance)\n\
          \n    \n    extId := \"031BbBfD-FD9E-1c2b-3D6e-e5B66Abcb55E\"\n\n\n    response,\
          \ error := VcenterExtensionsApiInstance.GetVcenterExtensionById(&extId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().(import1.VcenterExtension)\n    fmt.Println(data)\n\
          \n}\n\n"
      - lang: cURL
        source: |2+

          curl --request GET \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions/823BE0Bf-cb6a-FB07-BD4A-2bcF308e0D97" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \

      - lang: Wget
        source: |2


          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions/ea1Ee8e2-a9Aa-eEAa-Aabf-7847c7DCff7d"
  /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/register:
    post:
      tags:
      - VcenterExtensions
      summary: Register vCenter server extension.
      description: Registers Nutanix cluster as a vCenter server extension.
      operationId: registerVcenterExtension
      parameters:
      - name: extId
        in: path
        description: The globally unique identifier of vCenter Server extension instance.
          It should be of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: aac626eb-73f8-423c-8010-cd6cadce7872
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: 377b8898-1d0f-4a93-a166-b404454e8202
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterCredentials'
        required: true
      responses:
        "202":
          description: Request Accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/register\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/register\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/register\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Register Vcenter Extension
        roleList:
        - Prism Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 4
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 12
        timeUnit: seconds
      - type: XLarge
        count: 12
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vcnt.java.client.ApiClient;\n\
          import com.nutanix.vcnt.java.client.api.VcenterExtensionsApi;\nimport com.nutanix.dp1.vcnt.clustermgmt.v4.config.VcenterCredentials;\n\
          import com.nutanix.dp1.vcnt.clustermgmt.v4.config.RegisterVcenterExtensionApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VcenterExtensionsApi vcenterExtensionsApi = new VcenterExtensionsApi(apiClient);\n\
          \n        VcenterCredentials vcenterCredentials = new VcenterCredentials();\n\
          \n        // VcenterCredentials object initializations here...\n       \
          \ vcenterCredentials.setPassword(\"test_password\");  // required field\n\
          \        vcenterCredentials.setUsername(\"test_user\");  // required field\n\
          \        \n        String extId = \"9A2f7Ffc-bc16-1fAD-25E4-dd6BbBeAea84\"\
          ;\n\n        try {\n            RegisterVcenterExtensionApiResponse registerVcenterExtensionApiResponse\
          \ = vcenterExtensionsApi.registerVcenterExtension(extId, vcenterCredentials);\n\
          \            System.out.println(registerVcenterExtensionApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VcenterExtensionsApi, VcenterCredentials }\
          \ from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vcenterExtensionsApi = new VcenterExtensionsApi(apiClientInstance);\n\
          \nfunction sample() {\n    let vcenterCredentials = new VcenterCredentials();\n\
          \n    // VcenterCredentials object initializations here...\n    vcenterCredentials.setPassword(\"\
          test_password\");  // required field\n    vcenterCredentials.setUsername(\"\
          test_user\");  // required field\n\n    \n    let extId = \"aDfeC109-6b1d-A0de-dBb1-FBA67b7ec33a\"\
          ;\n\n\n\n\n\n    vcenterExtensionsApi.registerVcenterExtension(extId, vcenterCredentials).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    vcenter_extensions_api = ntnx_clustermgmt_py_client.VcenterExtensionsApi(api_client=client)\n\
          \    vcenterCredentials = ntnx_clustermgmt_py_client.VcenterCredentials()\n\
          \n    # VcenterCredentials object initializations here...\n    vcenterCredentials.password\
          \ = \"test_password\"  # required field\n    vcenterCredentials.username\
          \ = \"test_user\"  # required field\n    \n    ext_id = \"e7E6cAfA-eec1-0FFE-bb62-3EbF3cB1cfaC\"\
          \n\n\n    try:\n        api_response = vcenter_extensions_api.register_vcenter_extension(extId=ext_id,\
          \ body=vcenterCredentials)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VcenterExtensionsApiInstance\
          \ *api.VcenterExtensionsApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VcenterExtensionsApiInstance = api.NewVcenterExtensionsApi(ApiClientInstance)\n\
          \n    vcenterCredentials := import1.NewVcenterCredentials()\n\n    // VcenterCredentials\
          \ object initializations here...\n\n    \n    extId := \"aECfFF23-fd9B-E28E-dcF9-B0b4E7dF0Bb9\"\
          \n\n\n    response, error := VcenterExtensionsApiInstance.RegisterVcenterExtension(&extId,\
          \ vcenterCredentials)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions/AFB9a1CB-DDdB-208A-6c8a-B4e883D0B8de/$actions/register" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions/aD1eCBFb-CEcd-9FAe-C52b-DbBEa43Cf9db/$actions/register"
  /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/unregister:
    post:
      tags:
      - VcenterExtensions
      summary: Unregister vCenter server extension.
      description: Unregisters Nutanix cluster as a vCenter server extension.
      operationId: unregisterVcenterExtension
      parameters:
      - name: extId
        in: path
        description: The globally unique identifier of vCenter Server extension instance.
          It should be of type UUID.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          example: 857b272d-20df-4bf6-b438-90135189e321
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: bc2d8aef-966d-45e4-81e4-9daf9665e1f0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterCredentials'
        required: true
      responses:
        "202":
          description: Request Accepted.
          headers:
            Location:
              style: simple
              explode: false
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/unregister\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/unregister\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/unregister\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Unregister Vcenter Extension
        roleList:
        - Prism Admin
        - Super Admin
        - Cluster Admin
      x-rate-limit:
      - type: xsmall
        count: 4
        timeUnit: seconds
      - type: Small
        count: 8
        timeUnit: seconds
      - type: Large
        count: 12
        timeUnit: seconds
      - type: XLarge
        count: 12
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: "2024.3"
      - product: PE
        version: "6.7"
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.vcnt.java.client.ApiClient;\n\
          import com.nutanix.vcnt.java.client.api.VcenterExtensionsApi;\nimport com.nutanix.dp1.vcnt.clustermgmt.v4.config.VcenterCredentials;\n\
          import com.nutanix.dp1.vcnt.clustermgmt.v4.config.UnregisterVcenterExtensionApiResponse;\n\
          import org.springframework.web.client.RestClientException;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    VcenterExtensionsApi vcenterExtensionsApi = new VcenterExtensionsApi(apiClient);\n\
          \n        VcenterCredentials vcenterCredentials = new VcenterCredentials();\n\
          \n        // VcenterCredentials object initializations here...\n       \
          \ vcenterCredentials.setPassword(\"test_password\");  // required field\n\
          \        vcenterCredentials.setUsername(\"test_user\");  // required field\n\
          \        \n        String extId = \"bA37C4f7-a6D4-A5A8-bc6e-70AE0ddcbaAF\"\
          ;\n\n        try {\n            UnregisterVcenterExtensionApiResponse unregisterVcenterExtensionApiResponse\
          \ = vcenterExtensionsApi.unregisterVcenterExtension(extId, vcenterCredentials);\n\
          \            System.out.println(unregisterVcenterExtensionApiResponse.toString());\n\
          \n        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, VcenterExtensionsApi, VcenterCredentials }\
          \ from \"@nutanix-api/clustermgmt-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let vcenterExtensionsApi = new VcenterExtensionsApi(apiClientInstance);\n\
          \nfunction sample() {\n    let vcenterCredentials = new VcenterCredentials();\n\
          \n    // VcenterCredentials object initializations here...\n    vcenterCredentials.setPassword(\"\
          test_password\");  // required field\n    vcenterCredentials.setUsername(\"\
          test_user\");  // required field\n\n    \n    let extId = \"bbe7bCab-Be76-A3fa-CBec-A2AFED4Bfa1E\"\
          ;\n\n\n\n\n\n    vcenterExtensionsApi.unregisterVcenterExtension(extId,\
          \ vcenterCredentials).then(({data, response}) => {\n        console.log(`API\
          \ returned the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_clustermgmt_py_client\n\nif __name__ == \"__main__\"\
          :\n    # Configure the client\n    config = ntnx_clustermgmt_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_clustermgmt_py_client.ApiClient(configuration=config)\n\
          \    vcenter_extensions_api = ntnx_clustermgmt_py_client.VcenterExtensionsApi(api_client=client)\n\
          \    vcenterCredentials = ntnx_clustermgmt_py_client.VcenterCredentials()\n\
          \n    # VcenterCredentials object initializations here...\n    vcenterCredentials.password\
          \ = \"test_password\"  # required field\n    vcenterCredentials.username\
          \ = \"test_user\"  # required field\n    \n    ext_id = \"7cFFef88-244E-37aB-9dAF-DEbEb05aCaBC\"\
          \n\n\n    try:\n        api_response = vcenter_extensions_api.unregister_vcenter_extension(extId=ext_id,\
          \ body=vcenterCredentials)\n        print(api_response)\n    except ntnx_clustermgmt_py_client.rest.ApiException\
          \ as e:\n        print(e)\n\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/clustermgmt/v4/config\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/clustermgmt-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    VcenterExtensionsApiInstance\
          \ *api.VcenterExtensionsApi\n)\n\nfunc main() {\n    ApiClientInstance =\
          \ client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5 * time.Second\n\
          \    // Max retry attempts while reconnecting on a loss of connection\n\
          \    ApiClientInstance.MaxRetryAttempts = 5\n    // UserName to connect\
          \ to the cluster\n    ApiClientInstance.Username = \"username\"\n    //\
          \ Password to connect to the cluster\n    ApiClientInstance.Password = \"\
          password\"\n    // Please add authorization information here if needed.\n\
          \    VcenterExtensionsApiInstance = api.NewVcenterExtensionsApi(ApiClientInstance)\n\
          \n    vcenterCredentials := import1.NewVcenterCredentials()\n\n    // VcenterCredentials\
          \ object initializations here...\n\n    \n    extId := \"Bd5807d3-f2ec-eC6f-b5C5-fe24aCFDF4F0\"\
          \n\n\n    response, error := VcenterExtensionsApiInstance.UnregisterVcenterExtension(&extId,\
          \ vcenterCredentials)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n\n}\n\n"
      - lang: cURL
        source: |2+

          curl --request POST \
               --url "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions/8ccA3dde-bC1a-Bd99-e89E-BbBeDDDDa2FB/$actions/unregister" \
               --header 'Accept: application/json' \
                        --header 'Content-Type: application/json' \
                        --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                        --data {"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"} \

      - lang: Wget
        source: |2


          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
                   --header 'Content-Type: application/json' \
                   --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
          --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
                   --body-data {"username":"test_user","password":"test_password","port":0,"$objectType":"clustermgmt.v4.config.VcenterCredentials"} \
          - "https://{pc-ip}:9440/api/clustermgmt/v4.0/config/vcenter-extensions/DECCc5D8-E6cB-8CD9-7AEb-bEE4dd53DCBB/$actions/unregister"
components:
  schemas:
    clustermgmt.v4.0.ahv.config.ListPcieDevicesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.ahv.config.PcieDevice'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/ahv/config/pcie-devices
        Get operation
    clustermgmt.v4.0.ahv.config.PcieDevice:
      description: PCI Device entity description
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          clusterExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Cluster UUID.
            readOnly: true
            example: db8e8679-94b1-4f90-888e-94af3172488a
          hostExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: UUID of the host connected to the device
            readOnly: true
            example: e858455b-7c3b-46d0-9a17-ad8eee347999
          state:
            $ref: '#/components/schemas/clustermgmt.v4.0.ahv.config.PcieDeviceState'
          description:
            type: string
            description: Human readable device description
            readOnly: true
            example: Test PCIE device Description
          configuration:
            $ref: '#/components/schemas/clustermgmt.v4.0.ahv.config.PcieDeviceConfiguration'
          ownerVmExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: UUID of the VM attached to that device when state is UVM_ASSIGNED
              or UVM_RESERVED
            readOnly: true
            example: 1a136e6e-a587-4387-9822-02aac330ed33
        additionalProperties: false
    clustermgmt.v4.0.ahv.config.PcieDeviceState:
      type: string
      description: Device state
      enum:
      - UVM_AVAILABLE
      - UVM_RESERVED
      - UVM_ASSIGNED
      - HOST_BROKEN
      - HOST_UNUSED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        HOST_UNUSED: The device is not used by the host and not available for assignment
          to the CVM or a UVM
        UVM_RESERVED: The device is being assigned to the UVM mentioned in the 'owner'
          property
        UVM_AVAILABLE: The device is available for passthrough to a UVM and not assigned
          to any
        UVM_ASSIGNED: The device is assigned to the UVM mentioned in the 'owner' property
        HOST_BROKEN: The device is broken or non-functional may be cleared when the
          host is restarted
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.ahv.config.PcieDeviceConfiguration:
      type: object
      properties:
        vendorId:
          type: integer
          description: Vendor ID
          format: int64
          readOnly: true
          example: 99
        deviceId:
          type: integer
          description: Device ID
          format: int64
          readOnly: true
          example: 5
        subSystemVendorId:
          type: integer
          description: Subsystem vendor ID
          format: int64
          readOnly: true
          example: 55
        subSystemId:
          type: integer
          description: Subsystem (device) ID
          format: int64
          readOnly: true
          example: 5
        classId:
          type: integer
          description: Class code
          format: int64
          readOnly: true
          example: 25
        subClassId:
          type: integer
          description: Subsystem class ID
          format: int64
          readOnly: true
          example: 19
        progIFace:
          type: integer
          description: Programming interface ID
          format: int64
          readOnly: true
          example: 9
      additionalProperties: false
      description: PCIe device configuration
    clustermgmt.v4.0.config.CategoryEntityReferences:
      required:
      - categories
      type: object
      properties:
        categories:
          maxItems: 1024
          minItems: 1
          type: array
          description: List of extIds of the categories to be updated for the entity.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: 93f55775-cbcc-4d30-8b74-3a7e6e746752
      additionalProperties: false
      description: References to category entity required to update categories in
        association with the entity.
    clustermgmt.v4.0.config.AssociateCategoriesToClusterApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/associate-categories\
        \ Post operation"
    clustermgmt.v4.0.config.DisassociateCategoriesFromClusterApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/disassociate-categories\
        \ Post operation"
    clustermgmt.v4.0.config.GetClusterApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.Cluster
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.Cluster'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.Cluster:
      description: Cluster entity with its attributes.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 75
            type: string
            description: Cluster name. This is part of payload for both cluster create
              & update operations.
            example: test_cluster_name
          nodes:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeReference'
          config:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterConfigReference'
          network:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterNetworkReference'
          upgradeStatus:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UpgradeStatus'
          vmCount:
            type: integer
            description: Number of VMs.
            format: int64
            readOnly: true
            example: 68
          inefficientVmCount:
            type: integer
            description: Number of inefficient VMs.
            format: int64
            readOnly: true
            example: 85
          containerName:
            maxLength: 64
            type: string
            description: The name of the default container created as part of cluster
              creation. This is part of payload for cluster create operation only.
            example: Test container_name
          categories:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of categories associated to the PE cluster.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 0dfe52e2-4359-48e2-ae34-65fc89caf05f
          clusterProfileExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Cluster Profile UUID
            readOnly: true
            example: 53c169bf-d253-4d65-90d8-ddb5b656b36a
          backupEligibilityScore:
            type: integer
            description: Score to indicate how much cluster is eligible for storing
              domain manager backup.
            format: int64
            readOnly: true
            example: 68
        additionalProperties: false
        description: Cluster entity with its attributes.
    clustermgmt.v4.0.config.UpdateClusterApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
        \ Put operation"
    clustermgmt.v4.0.config.DeleteClusterApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}\
        \ Delete operation"
    clustermgmt.v4.0.config.NodeReference:
      type: object
      properties:
        numberOfNodes:
          type: integer
          description: Number of nodes in a cluster.
          format: int32
          readOnly: true
          example: 76
        nodeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of nodes in a cluster.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeListItemReference'
      additionalProperties: false
      description: Node reference for a cluster.
    clustermgmt.v4.0.config.ClusterConfigReference:
      type: object
      properties:
        incarnationId:
          type: integer
          description: Cluster incarnation Id. This is part of payload for cluster
            update operation only.
          format: int64
          readOnly: true
          example: 86
        buildInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.BuildReference'
        hypervisorTypes:
          maxItems: 5
          minItems: 0
          type: array
          description: Hypervisor type.
          readOnly: true
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        clusterFunction:
          maxItems: 7
          minItems: 0
          type: array
          description: "Cluster function. This is part of payload for cluster create\
            \ operation only (allowed enum values for creation are AOS, ONE_NODE &\
            \ TWO_NODE only)."
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterFunctionRef'
        timezone:
          type: string
          description: Time zone on a cluster.
          readOnly: true
          example: UTC/IST
        authorizedPublicKeyList:
          maxItems: 1024
          minItems: 0
          type: array
          description: Public ssh key details. This is part of payload for cluster
            update operation only.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.PublicKey'
        redundancyFactor:
          type: integer
          description: Redundancy factor of a cluster. This is part of payload for
            both cluster create & update operations.
          format: int64
          example: 51
        clusterSoftwareMap:
          maxItems: 3
          minItems: 0
          type: array
          description: Cluster software version details.
          readOnly: true
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.SoftwareMapReference'
        clusterArch:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterArchReference'
        faultToleranceState:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.FaultToleranceState'
        isRemoteSupportEnabled:
          type: boolean
          description: Remote support status.
          readOnly: true
          example: true
        operationMode:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.OperationMode'
        isLts:
          type: boolean
          description: Indicates whether the release is categorized as Long-term or
            not.
          readOnly: true
          example: false
        isPasswordRemoteLoginEnabled:
          type: boolean
          description: Indicates whether the password ssh into the cluster is enabled
            or not.
          readOnly: true
          example: true
        encryptionInTransitStatus:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.EncryptionStatus'
        encryptionOption:
          maxItems: 3
          minItems: 0
          type: array
          description: Encryption option.
          readOnly: true
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.EncryptionOptionInfo'
        encryptionScope:
          maxItems: 2
          minItems: 0
          type: array
          description: Encryption scope.
          readOnly: true
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.EncryptionScopeInfo'
        pulseStatus:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.PulseStatus'
        isAvailable:
          type: boolean
          description: Indicates if cluster is available to contact or not.
          readOnly: true
          example: true
      additionalProperties: false
      description: Cluster configuration details.
    clustermgmt.v4.0.config.ClusterNetworkReference:
      type: object
      properties:
        externalAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        externalDataServiceIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        externalSubnet:
          type: string
          description: Cluster external subnet address.
          readOnly: true
          example: 10.49.144.0/255.255.240.0
        internalSubnet:
          type: string
          description: Cluster internal subnet address.
          readOnly: true
          example: 192.138.5.0/255.255.255.128
        nfsSubnetWhitelist:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          description: NFS subnet whitelist addresses. This is part of payload for
            cluster update operation only.
          items:
            pattern: "\\b(?:\\d{1,3}\\.){3}\\d{1,3}/(?:\\d{1,3}\\.){3}\\d{1,3}\\b"
            type: string
        nameServerIpList:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          description: "List of name servers on a cluster. This is part of payload\
            \ for both cluster create & update operations. For create operation, only\
            \ ipv4 address / fqdn values are supported currently."
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
        ntpServerIpList:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          description: "List of NTP servers on a cluster. This is part of payload\
            \ for both cluster create & update operations. For create operation, only\
            \ ipv4 address / fqdn values are supported currently."
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
        smtpServer:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.SmtpServerRef'
        masqueradingIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        masqueradingPort:
          type: integer
          description: The port to connect to the cluster when using masquerading
            IP.
          format: int32
          readOnly: true
          example: 53
        managementServer:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ManagementServerRef'
        fqdn:
          pattern: "^([a-z0-9]+(-[a-z0-9]+)*\\.)+([a-z0-9]+(-[a-z0-9]+)*){1,63}$"
          type: string
          description: Cluster fully qualified domain name. This is part of payload
            for cluster update operation only.
          example: www.example-corp.com
        keyManagementServerType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.KeyManagementServerType'
        backplane:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.BackplaneNetworkParams'
        httpProxyList:
          maxItems: 1
          minItems: 0
          type: array
          description: List of HTTP Proxy server configuration needed to access a
            cluster which is hosted behind a HTTP Proxy to not reveal its identity.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HttpProxyConfig'
        httpProxyWhiteList:
          maxItems: 1000
          minItems: 0
          type: array
          description: Targets HTTP traffic to which is exempted from going through
            the configured HTTP Proxy.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HttpProxyWhiteListConfig'
      additionalProperties: false
      description: Network details of a cluster.
    clustermgmt.v4.0.config.UpgradeStatus:
      type: string
      description: Upgrade status of a cluster.
      enum:
      - PENDING
      - DOWNLOADING
      - QUEUED
      - PREUPGRADE
      - UPGRADING
      - SUCCEEDED
      - FAILED
      - CANCELLED
      - SCHEDULED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CANCELLED: The cluster upgrade is cancelled.
        FAILED: The cluster upgrade failed.
        QUEUED: The cluster upgrade is in the queue.
        SUCCEEDED: The cluster was upgraded successfully.
        DOWNLOADING: The luster upgrade is downloading.
        PENDING: The cluster upgrade is in pending state.
        UPGRADING: The cluster is in upgrade state.
        $UNKNOWN: |
          Unknown value.
        PREUPGRADE: The cluster is in pre-upgrade state.
        SCHEDULED: The cluster upgrade is in scheduled state.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ClusterProfile:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - required:
        - name
        type: object
        properties:
          name:
            maxLength: 64
            pattern: "^[A-Za-z0-9._-]+$"
            type: string
            description: Name of the cluster profile
            example: Test Cluster Profile
          description:
            maxLength: 1000
            type: string
            description: Detailed description of a cluster profile
            example: Test ClusterProfile Description
          createTime:
            type: string
            description: Creation time of cluster profile
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          lastUpdateTime:
            type: string
            description: Last updated time of a cluster profile
            format: date-time
            readOnly: true
            example: 2009-09-23T14:30:00-07:00
          createdBy:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Details of the user who created this cluster profile
            readOnly: true
            example: b5f6bded-6b9c-40ef-9a89-e243a1d320fa
          lastUpdatedBy:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Details of the user who has recently updated this cluster
              profile
            readOnly: true
            example: 07ecf618-850c-40f2-a52b-78a76620465c
          clusterCount:
            type: integer
            description: Count of clusters associated to a cluster profile
            format: int32
            readOnly: true
            example: 90
          driftedClusterCount:
            type: integer
            description: "The count indicates the number of clusters associated with\
              \ a cluster profile that have experienced drift. Drifted clusters are\
              \ those in which the configuration differs from the defined profile.\
              \ For example, the NTP server has different values on a cluster as compared\
              \ to the profile it is attached."
            format: int32
            readOnly: true
            example: 83
          clusters:
            maxItems: 400
            minItems: 1
            type: array
            description: Managed cluster information
            readOnly: true
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ManagedCluster'
          allowedOverrides:
            maxItems: 50
            minItems: 0
            type: array
            description: Indicates if a configuration of attached clusters can be
              skipped from monitoring.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ConfigType'
          nameServerIpList:
            maxItems: 1024
            minItems: 0
            type: array
            description: "List of name servers on a cluster. This is part of payload\
              \ for both cluster create & update operations. For create operation,\
              \ only ipv4 address / fqdn values are supported currently."
            items:
              $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          ntpServerIpList:
            maxItems: 1024
            minItems: 0
            type: array
            description: "List of NTP servers on a cluster. This is part of payload\
              \ for both cluster create & update operations. For create operation,\
              \ only ipv4 address / fqdn values are supported currently."
            items:
              $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
          smtpServer:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.SmtpServerRef'
          nfsSubnetWhitelist:
            maxItems: 1024
            minItems: 0
            type: array
            description: NFS subnet whitelist addresses. This is part of payload for
              cluster update operation only.
            items:
              pattern: "\\b(?:\\d{1,3}\\.){3}\\d{1,3}/(?:\\d{1,3}\\.){3}\\d{1,3}\\\
                b"
              type: string
              example: 10.110.106.45/255.255.255.255
          snmpConfig:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpConfig'
          rsyslogServerList:
            maxItems: 100
            minItems: 0
            type: array
            description: RSYSLOG Server.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogServer'
          pulseStatus:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.PulseStatus'
        additionalProperties: false
        description: Attributes of a cluster profile entity
    clustermgmt.v4.0.config.StorageSummary:
      type: object
      properties:
        clusterFaultTolerantCapacityInBytes:
          type: integer
          description: Cluster fault tolerance defines how many simultaneous failures
            within a fault domain the cluster can sustain.
          format: int64
          readOnly: true
          example: 53
      additionalProperties: false
      description: Storage summary entity and its attribute related to cluster fault
        tolerance.
    clustermgmt.v4.0.config.NodeListItemReference:
      type: object
      properties:
        controllerVmIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          readOnly: true
          example: 4b5ac9e3-b234-4fb7-9f68-12e0feacb50e
        hostIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
      additionalProperties: false
      description: List of nodes in a cluster.
      x-required-by-operation:
        create:
        - controllerVmIp
    clustermgmt.v4.0.config.BuildReference:
      type: object
      properties:
        buildType:
          type: string
          description: Software build type.
          example: release/opt
        version:
          type: string
          description: Software version.
          example: "6.7"
        fullVersion:
          type: string
          description: Full name of software version.
          example: el7.3-release-fraser-6.5.5.6-stable-e36389d5f36fa8e7cacfdccdc2049f85206c6d7c
        commitId:
          type: string
          description: Commit Id used for version.
          example: da8e2cbac08b1d4171e451b7ce008c4f1430d54d
        shortCommitId:
          type: string
          description: Short commit Id used for version.
          example: f978e71
      additionalProperties: false
      description: Build information details.
    clustermgmt.v4.0.config.HypervisorType:
      type: string
      description: Hypervisor type.
      enum:
      - AHV
      - ESX
      - HYPERV
      - XEN
      - NATIVEHOST
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        XEN: Xen hypervisor.
        HYPERV: HyperV hypervisor.
        NATIVEHOST: "NativeHost type where AOS runs natively, without hypervisor."
        ESX: ESX hypervisor.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        AHV: AHV hypervisor.
    clustermgmt.v4.0.config.ClusterFunctionRef:
      type: string
      description: "Cluster function. This is part of payload for cluster create operation\
        \ only (allowed enum values for creation are AOS, ONE_NODE & TWO_NODE only)."
      enum:
      - AOS
      - PRISM_CENTRAL
      - CLOUD_DATA_GATEWAY
      - AFS
      - ONE_NODE
      - TWO_NODE
      - ANALYTICS_PLATFORM
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PRISM_CENTRAL: Prism Central.
        ANALYTICS_PLATFORM: Analytic platform cluster.
        AOS: AOS cluster.
        TWO_NODE: Two node cluster.
        CLOUD_DATA_GATEWAY: Cloud data gateway.
        ONE_NODE: One node cluster.
        $UNKNOWN: |
          Unknown value.
        AFS: Acropolis file system.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.PublicKey:
      required:
      - key
      - name
      type: object
      properties:
        name:
          maxLength: 1024
          type: string
          description: Ssh key name.
          example: Test public key name
        key:
          type: string
          description: Ssh key value.
          example: Test key
      additionalProperties: false
      description: Public ssh key details. This is part of payload for cluster update
        operation only.
    clustermgmt.v4.0.config.SoftwareMapReference:
      type: object
      properties:
        softwareType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.SoftwareTypeRef'
        version:
          type: string
          description: Software version.
      additionalProperties: false
      description: Cluster software version details.
    clustermgmt.v4.0.config.ClusterArchReference:
      type: string
      description: Cluster arch.
      enum:
      - X86_64
      - PPC64LE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PPC64LE: PPC64LE cluster architecture type.
        $UNKNOWN: |
          Unknown value.
        X86_64: X86_64 cluster architecture type.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.FaultToleranceState:
      type: object
      properties:
        currentMaxFaultTolerance:
          type: integer
          description: Maximum fault tolerance that is supported currently.
          format: int32
          readOnly: true
          example: 29
        desiredMaxFaultTolerance:
          type: integer
          description: Maximum fault tolerance desired.
          format: int32
          readOnly: true
          example: 28
        domainAwarenessLevel:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.DomainAwarenessLevel'
        currentClusterFaultTolerance:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterFaultToleranceRef'
        desiredClusterFaultTolerance:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterFaultToleranceRef'
        redundancyStatus:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.RedundancyStatusDetails'
      additionalProperties: false
      description: Fault tolerant state of cluster.
    clustermgmt.v4.0.config.OperationMode:
      type: string
      description: Cluster operation mode. This is part of payload for cluster update
        operation only.
      enum:
      - NORMAL
      - READ_ONLY
      - STAND_ALONE
      - SWITCH_TO_TWO_NODE
      - OVERRIDE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        OVERRIDE: Override operation mode.
        STAND_ALONE: Stand-alone operation mode.
        SWITCH_TO_TWO_NODE: Switch to two-node operation mode.
        $UNKNOWN: |
          Unknown value.
        NORMAL: Normal operation mode.
        READ_ONLY: Read-only operation mode.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.EncryptionStatus:
      type: string
      description: Encryption in transit Status.
      enum:
      - ENABLED
      - DISABLED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        DISABLED: Disabled encryption status.
        ENABLED: Enabled encryption status.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.EncryptionOptionInfo:
      type: string
      description: Encryption option.
      enum:
      - SOFTWARE
      - HARDWARE
      - SOFTWARE_AND_HARDWARE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        HARDWARE: Hardware encryption.
        SOFTWARE_AND_HARDWARE: Software and hardware encryption.
        $UNKNOWN: |
          Unknown value.
        SOFTWARE: Software encryption.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.EncryptionScopeInfo:
      type: string
      description: Encryption scope.
      enum:
      - CLUSTER
      - CONTAINER
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CONTAINER: Container encryption scope.
        CLUSTER: Cluster encryption scope.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.PulseStatus:
      type: object
      properties:
        isEnabled:
          type: boolean
          description: Flag determines whether pulse is enabled for a cluster.
          example: false
        piiScrubbingLevel:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.PIIScrubbingLevel'
      additionalProperties: false
      description: Pulse status for a cluster.
    clustermgmt.v4.0.config.SoftwareTypeRef:
      type: string
      description: Software type.
      enum:
      - NOS
      - NCC
      - PRISM_CENTRAL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PRISM_CENTRAL: Prism Central software type.
        NOS: NOS software.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        NCC: NCC software.
    clustermgmt.v4.0.config.DomainAwarenessLevel:
      type: string
      description: Domain awareness level corresponds to unit of cluster group. This
        is part of payload for both cluster create & update operations.
      enum:
      - NODE
      - BLOCK
      - RACK
      - DISK
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        RACK: Rack level awareness.
        NODE: Node level awareness.
        BLOCK: Block level awareness.
        $UNKNOWN: |
          Unknown value.
        DISK: Disk level awareness.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ClusterFaultToleranceRef:
      type: string
      description: Cluster Fault tolerance. Set desiredClusterFaultTolerance for cluster
        create and update.
      enum:
      - CFT_0N_AND_0D
      - CFT_1N_OR_1D
      - CFT_2N_OR_2D
      - CFT_1N_AND_1D
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CFT_1N_OR_1D: System can handle fault of one node or one disk
        CFT_2N_OR_2D: System can handle fault of two nodes or two disks
        CFT_1N_AND_1D: System can handle fault of one node and one disk on the other
          node simultaneously
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        CFT_0N_AND_0D: System can not handle any fault with a node or a disk
    clustermgmt.v4.0.config.RedundancyStatusDetails:
      type: object
      properties:
        isCassandraPreparationDone:
          type: boolean
          description: Boolean flag to indicate if Cassandra ensemble can meet the
            desired FT.
          readOnly: true
          example: false
        isZookeeperPreparationDone:
          type: boolean
          description: Boolean flag to indicate if Zookeeper ensemble can meet the
            desired FT.
          readOnly: true
          example: false
      additionalProperties: false
      description: Redundancy Status of the cluster
      readOnly: true
    clustermgmt.v4.0.config.PIIScrubbingLevel:
      type: string
      description: PII Scrubbing Level for pulse.
      enum:
      - DEFAULT
      - ALL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ALL: Scrub All PII Information from Pulse including data like entity names
          and IP addresses.
        $UNKNOWN: |
          Unknown value.
        DEFAULT: Default PII Scrubbing level. Data like entity names and IP addresses
          will not be scrubbed from Pulse.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.SmtpServerRef:
      required:
      - emailAddress
      - server
      type: object
      properties:
        emailAddress:
          pattern: "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
          type: string
          description: SMTP email address.
          example: john.doe@example.com
        server:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.SmtpNetwork'
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.SmtpType'
      additionalProperties: false
      description: SMTP servers on a cluster. This is part of payload for cluster
        update operation only.
    clustermgmt.v4.0.config.ManagementServerRef:
      type: object
      properties:
        ip:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ManagementServerType'
        isDrsEnabled:
          type: boolean
          description: Indicates whether it is DRS enabled or not.
          example: true
        isRegistered:
          type: boolean
          description: Indicates whether it is registered or not.
          example: true
        isInUse:
          type: boolean
          description: Indicates whether the host is managed by an entity or not.
          example: false
      additionalProperties: false
      description: Management server information.
    clustermgmt.v4.0.config.KeyManagementServerType:
      type: string
      description: Management server type.
      enum:
      - LOCAL
      - PRISM_CENTRAL
      - EXTERNAL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PRISM_CENTRAL: Prism Central management server.
        EXTERNAL: External management server.
        LOCAL: Local management server.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.BackplaneNetworkParams:
      type: object
      properties:
        isSegmentationEnabled:
          type: boolean
          description: Flag to indicate if the backplane segmentation needs to be
            enabled or not.
          example: false
        vlanTag:
          type: integer
          description: VLAN Id tagged to the backplane network on the cluster. This
            is part of cluster create payload.
          format: int64
          example: 38
        subnet:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
        netmask:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
      additionalProperties: false
      description: Params associated to the backplane network segmentation. This is
        part of payload for cluster create operation only.
    clustermgmt.v4.0.config.HttpProxyConfig:
      required:
      - name
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        port:
          type: integer
          description: HTTP Proxy server port configuration needed to access a cluster
            which is hosted behind a HTTP Proxy to not reveal its identity.
          format: int32
          example: 31
        username:
          maxLength: 64
          type: string
          description: HTTP Proxy server username needed to access a cluster which
            is hosted behind a HTTP Proxy to not reveal its identity.
        password:
          type: string
          description: HTTP Proxy server password needed to access a cluster which
            is hosted behind a HTTP Proxy to not reveal its identity.
        name:
          maxLength: 64
          type: string
          description: HTTP Proxy server name configuration needed to access a cluster
            which is hosted behind a HTTP Proxy to not reveal its identity.
        proxyTypes:
          maxItems: 3
          minItems: 0
          type: array
          description: List of HTTP proxy types.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HttpProxyType'
      additionalProperties: false
      description: HTTP Proxy server configuration needed to access a cluster which
        is hosted behind a HTTP Proxy to not reveal its identity.
    clustermgmt.v4.0.config.HttpProxyWhiteListConfig:
      required:
      - target
      - targetType
      type: object
      properties:
        targetType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HttpProxyWhiteListTargetType'
        target:
          type: string
          description: Target's identifier which is exempted from going through the
            configured HTTP Proxy.
      additionalProperties: false
      description: Targets HTTP traffic to which is exempted from going through the
        configured HTTP Proxy.
    clustermgmt.v4.0.config.SmtpNetwork:
      required:
      - ipAddress
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
        port:
          type: integer
          description: SMTP port.
          format: int32
          example: 99
        username:
          maxLength: 64
          type: string
          description: SMTP server user name.
          example: user1
        password:
          type: string
          description: SMTP server password.
      additionalProperties: false
      description: SMTP network details.
    clustermgmt.v4.0.config.SmtpType:
      type: string
      description: Type of SMTP server.
      enum:
      - PLAIN
      - STARTTLS
      - SSL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PLAIN: Plain type SMTP server.
        STARTTLS: Start TLS type SMTP server.
        $UNKNOWN: |
          Unknown value.
        SSL: SSL type SMTP server.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ManagementServerType:
      type: string
      description: Management server type.
      enum:
      - VCENTER
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        VCENTER: Vcenter management server.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.HttpProxyType:
      type: string
      description: HTTP proxy type which is needed to access a cluster hosted behind
        a HTTP Proxy.
      enum:
      - HTTP
      - HTTPS
      - SOCKS
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        HTTPS: HTTPS proxy protocol type.
        SOCKS: SOCKS proxy protocol type.
        HTTP: HTTP proxy protocol type.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.HttpProxyWhiteListTargetType:
      type: string
      description: Type of the target which is exempted from going through the configured
        HTTP Proxy.
      enum:
      - IPV4_ADDRESS
      - IPV6_ADDRESS
      - IPV4_NETWORK_MASK
      - DOMAIN_NAME_SUFFIX
      - HOST_NAME
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        IPV6_ADDRESS: IPV6 address.
        HOST_NAME: Name of the host.
        DOMAIN_NAME_SUFFIX: Domain Name Suffix required for http proxy whitelist.
        IPV4_NETWORK_MASK: Network Mask of the IpV4 family.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        IPV4_ADDRESS: IPV4 address.
    clustermgmt.v4.0.config.ManagedCluster:
      required:
      - extId
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Cluster UUID.
          example: 1ec4f2ea-cba8-4ad4-9bd9-356a1da7e295
        isCompliant:
          type: boolean
          description: Indicates if attached cluster is compliant with cluster profile
            or not
          readOnly: true
          example: true
        lastSyncedTime:
          type: string
          description: Most recent date and time when the cluster profile was monitored
            across all attached clusters
          format: date-time
          readOnly: true
          example: 2009-09-23T14:30:00-07:00
        configDrifts:
          maxItems: 50
          minItems: 0
          type: array
          description: Drifted settings information
          readOnly: true
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ConfigType'
      additionalProperties: false
      description: Managed cluster information
    clustermgmt.v4.0.config.ConfigType:
      type: string
      enum:
      - NTP_SERVER_CONFIG
      - NAME_SERVER_CONFIG
      - SMTP_SERVER_CONFIG
      - NFS_SUBNET_WHITELIST_CONFIG
      - SNMP_SERVER_CONFIG
      - RSYSLOG_SERVER_CONFIG
      - PULSE_CONFIG
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NFS_SUBNET_WHITELIST_CONFIG: NFS subnet whitelist configuration
        NTP_SERVER_CONFIG: NTP server configuration
        SNMP_SERVER_CONFIG: SNMP server configuration
        SMTP_SERVER_CONFIG: SMTP server configuration
        PULSE_CONFIG: Pulse status for a cluster.
        $UNKNOWN: |
          Unknown value.
        NAME_SERVER_CONFIG: Name server configuration
        $REDACTED: |
          Redacted value.
        RSYSLOG_SERVER_CONFIG: RSYSLOG server configuration
    clustermgmt.v4.0.config.SnmpConfig:
      description: SNMP information.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          isEnabled:
            type: boolean
            description: SNMP status.
            example: false
          users:
            maxItems: 1024
            minItems: 0
            type: array
            description: SNMP user information.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpUser'
          transports:
            maxItems: 1024
            minItems: 0
            type: array
            description: SNMP transport details.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTransport'
          traps:
            maxItems: 1024
            minItems: 0
            type: array
            description: SNMP trap details.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTrap'
        additionalProperties: false
        description: SNMP information.
    clustermgmt.v4.0.config.RsyslogServer:
      description: RSYSLOG Server.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - required:
        - ipAddress
        - networkProtocol
        - port
        - serverName
        type: object
        properties:
          serverName:
            maxLength: 64
            type: string
            description: RSYSLOG server name.
            example: testServer1
          ipAddress:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          port:
            type: integer
            description: RSYSLOG server port.
            format: int32
            example: 36
          networkProtocol:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogNetworkProtocol'
          modules:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of modules registered to RSYSLOG server.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogModuleItem'
        additionalProperties: false
        description: RSYSLOG Server.
    clustermgmt.v4.0.config.SnmpUser:
      description: SNMP user information.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - required:
        - authKey
        - authType
        - username
        type: object
        properties:
          username:
            maxLength: 64
            type: string
            description: "SNMP username. For SNMP trap v3 version, SNMP username is\
              \ required parameter."
            example: Test UserName
          authType:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpAuthType'
          authKey:
            pattern: "^[^']+$"
            type: string
            description: SNMP user authentication key.
            example: Test_SNMP_user_authentication_key.
          privType:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpPrivType'
          privKey:
            pattern: "^[^']+$"
            type: string
            description: SNMP user encryption key.
            example: Test_SNMP_user_encryption_key.
        additionalProperties: false
    clustermgmt.v4.0.config.SnmpTransport:
      required:
      - port
      - protocol
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpProtocol'
        port:
          type: integer
          description: SNMP port.
          format: int32
          example: 10
      additionalProperties: false
      description: SNMP transport details.
    clustermgmt.v4.0.config.SnmpTrap:
      description: SNMP trap details.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - required:
        - address
        - version
        type: object
        properties:
          address:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          username:
            maxLength: 64
            type: string
            description: "SNMP username. For SNMP trap v3 version, SNMP username is\
              \ required parameter."
            example: Test UserName
          protocol:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpProtocol'
          port:
            type: integer
            description: SNMP port.
            format: int32
            example: 72
          shouldInform:
            type: boolean
            description: SNMP information status.
            example: false
          engineId:
            pattern: "^(?:0[xX])?[0-9a-fA-F]+$"
            type: string
            description: SNMP engine Id.
            example: Test snmp engine Id
          version:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTrapVersion'
          recieverName:
            maxLength: 64
            type: string
            description: SNMP receiver name.
            example: Test Receiver Name
          communityString:
            type: string
            description: Community string(plaintext) for SNMP version 2.0.
            example: snmp-server community public RO 192.168.1.0 255.255.255.0
        additionalProperties: false
        description: SNMP trap details.
    clustermgmt.v4.0.config.SnmpAuthType:
      type: string
      description: SNMP user authentication type.
      enum:
      - MD5
      - SHA
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        $UNKNOWN: |
          Unknown value.
        SHA: SHA SNMP authentication.
        $REDACTED: |
          Redacted value.
        MD5: MD5 SNMP authentication.
    clustermgmt.v4.0.config.SnmpPrivType:
      type: string
      description: SNMP user encryption type.
      enum:
      - DES
      - AES
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        DES: DES SNMP key.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        AES: AES SNMP key.
    clustermgmt.v4.0.config.SnmpProtocol:
      type: string
      description: SNMP protocol type.
      enum:
      - UDP
      - UDP6
      - TCP
      - TCP6
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        UDP: UDP protocol.
        TCP: TCP protocol.
        UDP6: UDP6 protocol.
        TCP6: TCP6 protocol.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.SnmpTrapVersion:
      type: string
      description: SNMP version.
      enum:
      - V2
      - V3
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        V2: V2 SNMP version.
        $UNKNOWN: |
          Unknown value.
        V3: V3 SNMP version.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.RsyslogNetworkProtocol:
      type: string
      description: RSYSLOG server protocol type.
      enum:
      - UDP
      - TCP
      - RELP
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        UDP: UDP protocol.
        TCP: TCP protocol.
        RELP: RELP protocol.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.RsyslogModuleItem:
      required:
      - logSeverityLevel
      - name
      type: object
      properties:
        name:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogModuleName'
        logSeverityLevel:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogModuleLogSeverityLevel'
        shouldLogMonitorFiles:
          type: boolean
          description: "Option to log, monitor/output files of a module."
          default: true
      additionalProperties: false
      description: RSYSLOG Module information.
    clustermgmt.v4.0.config.RsyslogModuleName:
      type: string
      description: RSYSLOG module name.
      enum:
      - CASSANDRA
      - CEREBRO
      - CURATOR
      - GENESIS
      - PRISM
      - STARGATE
      - SYSLOG_MODULE
      - ZOOKEEPER
      - UHARA
      - LAZAN
      - API_AUDIT
      - AUDIT
      - CALM
      - EPSILON
      - ACROPOLIS
      - MINERVA_CVM
      - FLOW
      - FLOW_SERVICE_LOGS
      - LCM
      - APLOS
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        AUDIT: Audit module.
        CALM: Calm module.
        MINERVA_CVM: Minerva module.
        STARGATE: Stargate Module
        FLOW_SERVICE_LOGS: Flow service module.
        SYSLOG_MODULE: Syslog module.
        CEREBRO: Cerebro module.
        API_AUDIT: API audit module.
        GENESIS: Genesis module.
        PRISM: Prism module.
        ZOOKEEPER: Zookeeper module.
        FLOW: Flow module.
        $REDACTED: |
          Redacted value.
        EPSILON: Epsilon module.
        ACROPOLIS: Acropolis module.
        UHARA: Uhara module.
        LCM: LCM module.
        APLOS: Aplos module.
        CURATOR: Curator module.
        $UNKNOWN: |
          Unknown value.
        CASSANDRA: Cassandra module.
        LAZAN: Lazan module.
    clustermgmt.v4.0.config.RsyslogModuleLogSeverityLevel:
      type: string
      description: RSYSLOG module log severity level.
      enum:
      - EMERGENCY
      - ALERT
      - CRITICAL
      - ERROR
      - WARNING
      - NOTICE
      - INFO
      - DEBUG
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        EMERGENCY: Emergency level.
        NOTICE: Notice level.
        ERROR: Error level.
        ALERT: Alert level.
        INFO: Info level.
        $UNKNOWN: |
          Unknown value.
        WARNING: Warning level.
        DEBUG: Debug level.
        CRITICAL: Critical level.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ListClustersApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.Cluster'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
        Get operation
    clustermgmt.v4.0.config.CreateClusterApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/clusters
        Post operation
    clustermgmt.v4.0.config.GetSnmpConfigByClusterIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.SnmpConfig
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpConfig'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp\
        \ Get operation"
    clustermgmt.v4.0.config.SnmpStatusParam:
      required:
      - isEnabled
      type: object
      properties:
        isEnabled:
          type: boolean
          description: SNMP user information.
          example: false
      additionalProperties: false
      description: SNMP status.
    clustermgmt.v4.0.config.UpdateSnmpStatusApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/update-status\
        \ Post operation"
    clustermgmt.v4.0.config.AddSnmpTransportsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/add-transports\
        \ Post operation"
    clustermgmt.v4.0.config.RemoveSnmpTransportsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/$actions/remove-transports\
        \ Post operation"
    clustermgmt.v4.0.config.CreateSnmpUserApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users\
        \ Post operation"
    clustermgmt.v4.0.config.GetSnmpUserApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.SnmpUser
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpUser'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.UpdateSnmpUserApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
        \ Put operation"
    clustermgmt.v4.0.config.DeleteSnmpUserApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/users/{extId}\
        \ Delete operation"
    clustermgmt.v4.0.config.CreateSnmpTrapApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps\
        \ Post operation"
    clustermgmt.v4.0.config.GetSnmpTrapApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.SnmpTrap
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.SnmpTrap'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.UpdateSnmpTrapApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
        \ Put operation"
    clustermgmt.v4.0.config.DeleteSnmpTrapApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/snmp/traps/{extId}\
        \ Delete operation"
    clustermgmt.v4.0.config.ListRsyslogServersByClusterIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - maxItems: 10
            minItems: 0
            type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogServer'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
        \ Get operation"
    clustermgmt.v4.0.config.CreateRsyslogServerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers\
        \ Post operation"
    clustermgmt.v4.0.config.GetRsyslogServerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.RsyslogServer
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.RsyslogServer'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.UpdateRsyslogServerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
        \ Put operation"
    clustermgmt.v4.0.config.DeleteRsyslogServerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rsyslog-servers/{extId}\
        \ Delete operation"
    clustermgmt.v4.0.config.ListRackableUnitsByClusterIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - maxItems: 10
            minItems: 0
            type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.RackableUnit'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units\
        \ Get operation"
    clustermgmt.v4.0.config.RackableUnit:
      description: Rackable Unit configuration.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          id:
            type: integer
            description: Rackable unit Id.
            format: int64
            example: 37
          serial:
            type: string
            description: Rackable unit serial name.
            example: 19FM6F160446
          model:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.RackableUnitModel'
          modelName:
            maxLength: 64
            type: string
            description: Rackable unit model name.
            example: NX-3060-G5
          nodes:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of node information registered to the block.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.RackableUnitNode'
          rack:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.RackReference'
        additionalProperties: false
    clustermgmt.v4.0.config.RackableUnitModel:
      type: string
      description: Rackable unit model type.
      enum:
      - DESKTOP
      - NX2000
      - NX3000
      - NX3050
      - NX6050
      - NX6070
      - NX1050
      - NX3060
      - NX6060
      - NX6080
      - NX6020
      - NX7110
      - NX1020
      - NX9040
      - USELAYOUT
      - NULLVALUE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NX2000: NX2000 model.
        DESKTOP: Desktop model.
        USELAYOUT: Use layout model.
        NX3060: NX3060 model.
        NX7110: NX7110 model.
        NULLVALUE: Undefined model.
        NX6020: NX6020 model.
        NX3050: NX3050 model.
        NX1050: NX1050 model.
        NX3000: NX3000 model.
        NX1020: NX1020 model.
        $REDACTED: |
          Redacted value.
        NX9040: NX9040 model.
        NX6050: NX6050 model.
        NX6060: NX6060 model.
        NX6070: NX6070 model.
        NX6080: NX6080 model.
        $UNKNOWN: |
          Unknown value.
    clustermgmt.v4.0.config.RackableUnitNode:
      type: object
      properties:
        uuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: 1c37c7ac-e75e-4e7d-8a8d-ad8e0cec1593
        svmId:
          type: integer
          description: Controller VM Id.
          format: int64
          example: 0
        position:
          type: integer
          description: Position of a node in a rackable unit.
          format: int32
          example: 16
      additionalProperties: false
      description: Node information registered to this rackable unit.
    clustermgmt.v4.0.config.RackReference:
      type: object
      properties:
        uuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Rack UUID.
          example: b3cb3d2c-b193-4f59-b9e4-e7224fa160f9
        id:
          type: integer
          description: Rack Id.
          format: int64
          example: 27
      additionalProperties: false
      description: Rack reference for the block.
    clustermgmt.v4.0.config.GetRackableUnitApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.RackableUnit
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.RackableUnit'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/rackable-units/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.MultiDomainFaultToleranceStatus:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          multiDomainFaultToleranceStatus:
            maxItems: 6
            minItems: 1
            type: array
            description: Domain fault tolerance configuration for all domain types
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.DomainFaultTolerance'
        additionalProperties: false
        description: "Fetches the domain fault tolerance status of the cluster identified\
          \ by {extId}."
    clustermgmt.v4.0.config.DomainFaultTolerance:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.DomainType'
        componentStatus:
          maxItems: 8
          minItems: 0
          type: array
          description: List of components in a domain.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ComponentFaultTolerance'
      additionalProperties: false
      description: "Fetches the domain fault tolerance status of the cluster identified\
        \ by {extId}."
    clustermgmt.v4.0.config.DomainType:
      type: string
      description: Type of domain
      enum:
      - CUSTOM
      - DISK
      - NODE
      - RACKABLE_UNIT
      - RACK
      - CLUSTER
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        RACK: Rack domain type.
        NODE: Node domain type.
        CUSTOM: Custom domain type.
        RACKABLE_UNIT: Block domain type.
        CLUSTER: Cluster domain type.
        $UNKNOWN: |
          Unknown value.
        DISK: Disk domain type.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ComponentFaultTolerance:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ComponentType'
        maxFaultsTolerated:
          type: integer
          description: Maximum fault tolerance.
          format: int32
          example: 84
        lastUpdatedTime:
          type: string
          description: Time of last update.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        isUnderComputation:
          type: boolean
          description: Indicates whether the tolerance computation is in progress
            or not.
          example: false
        detailMessage:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ToleranceMessage'
      additionalProperties: false
      description: Fault tolerance information of a component.
    clustermgmt.v4.0.config.ComponentType:
      type: string
      description: Type of component.
      enum:
      - EXTENT_GROUP_REPLICAS
      - OPLOG_EPISODES
      - CASSANDRA_RING
      - ZOOKEPER_INSTANCES
      - FREE_SPACE
      - STATIC_CONFIG
      - ERASURE_CODE_STRIP_SIZE
      - STARGATE_HEALTH
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        FREE_SPACE: Free space component type.
        ERASURE_CODE_STRIP_SIZE: Erasure component type.
        OPLOG_EPISODES: Oplog component type.
        STATIC_CONFIG: Static configuration component type.
        EXTENT_GROUP_REPLICAS: Extent group replica component type.
        ZOOKEPER_INSTANCES: Zookeeper component type.
        STARGATE_HEALTH: Stargate health component type.
        $UNKNOWN: |
          Unknown value.
        CASSANDRA_RING: Cassandra ring component type.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ToleranceMessage:
      type: object
      properties:
        id:
          type: string
          description: Message Id.
          example: test Message ID
        attributeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of tolerance message attributes.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.AttributeItem'
      additionalProperties: false
      description: Message contains the component domain fault tolerance text details.
    clustermgmt.v4.0.config.AttributeItem:
      type: object
      properties:
        attribute:
          type: string
          description: Tolerance message attribute key.
          example: Test attribute name
        value:
          type: string
          description: Tolerance message attribute value.
          example: Test attribute Value
      additionalProperties: false
      description: Attribute item information.
    clustermgmt.v4.0.config.GetHostApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.Host
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.Host'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.Host:
      description: Host entity with its attributes.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          hostName:
            maxLength: 63
            type: string
            description: Name of the host.
            example: Test Host Name mostly IPV4 address
          hostType:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HostTypeEnum'
          hypervisor:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorReference'
          cluster:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterReference'
          controllerVm:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ControllerVmReference'
          disk:
            maxItems: 1024
            minItems: 0
            type: array
            description: Disks attached to host.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.DiskReference'
          isDegraded:
            type: boolean
            description: Node degraded status.
            example: true
          isSecureBooted:
            type: boolean
            description: Secure boot status.
            example: false
          isHardwareVirtualized:
            type: boolean
            description: Indicates whether the hardware is virtualized or not.
            example: false
          hasCsr:
            type: boolean
            description: Certificate signing request status.
            example: true
          keyManagementDeviceToCertStatus:
            maxItems: 1024
            minItems: 0
            type: array
            description: Mapping of key management device to certificate status list.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.KeyManagementDeviceToCertStatusInfo'
          numberOfCpuCores:
            type: integer
            description: Number of CPU cores.
            format: int64
            example: 90
          numberOfCpuThreads:
            type: integer
            description: Number of CPU threads.
            format: int64
            example: 40
          numberOfCpuSockets:
            type: integer
            description: Number of CPU sockets.
            format: int64
            example: 79
          cpuCapacityHz:
            type: integer
            description: CPU capacity in Hz.
            format: int64
            example: 89
          cpuFrequencyHz:
            type: integer
            description: CPU frequency in Hz.
            format: int64
            example: 64
          cpuModel:
            type: string
            description: CPU model name.
            example: Intel(R) Xeon(R) CPU E5-2640 v4 @ 2.40GHz
          gpuDriverVersion:
            type: string
            description: GPU driver version.
            example: 00061837-4b34-720c-6a02-043201338600
          gpuList:
            maxItems: 1024
            minItems: 0
            type: array
            description: GPU attached list.
            items:
              type: string
              example: " gpu name: Nvidia_GRID_T4-1B"
          defaultVhdLocation:
            type: string
            description: Default VHD location.
            example: "Test path of Default VHD location, default value is null"
          defaultVhdContainerUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Default VHD container UUID.
            example: 46b69ad3-339a-4e1b-8835-d34a826735f8
          defaultVmLocation:
            type: string
            description: Default VM location.
            example: "Test path of Default VHD location, default value is null"
          defaultVmContainerUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Default VM container UUID.
            example: 639d82a9-5421-44b2-85bb-1c06e7bff7d0
          isRebootPending:
            type: boolean
            description: Reboot pending status.
            example: false
          failoverClusterFqdn:
            pattern: "^([a-z0-9]+(-[a-z0-9]+)*\\.)+([a-z0-9]+(-[a-z0-9]+)*){1,63}$"
            type: string
            description: Failover cluster FQDN.
            example: www.example-corp.com
          failoverClusterNodeStatus:
            type: string
            description: Failover cluster node status.
            example: "Up,Down"
          bootTimeUsecs:
            type: integer
            description: Boot time in secs.
            format: int64
            example: 7
          memorySizeBytes:
            type: integer
            description: Memory size in bytes.
            format: int64
            example: 14
          blockSerial:
            type: string
            description: Rackable unit serial name.
            example: 19FM6F160445
          blockModel:
            type: string
            description: Rackable unit model name.
            example: NX-3060-G5
          maintenanceState:
            type: string
            description: Host Maintenance State.
            example: normal/in_maintenanace/entering_maintenance/exiting_maintenance
          nodeStatus:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeStatus'
          ipmi:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.IpmiReference'
          rackableUnitUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Rackable unit UUID.
            example: 3014d025-f76d-41ac-ba05-d213b2e6bb41
        additionalProperties: false
    clustermgmt.v4.0.config.HostTypeEnum:
      type: string
      description: Type of the host.
      enum:
      - HYPER_CONVERGED
      - COMPUTE_ONLY
      - STORAGE_ONLY
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        HYPER_CONVERGED: Hyper-converged node.
        COMPUTE_ONLY: Compute only node.
        $UNKNOWN: |
          Unknown value.
        STORAGE_ONLY: Storage only node.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.HypervisorReference:
      type: object
      properties:
        externalAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        userName:
          maxLength: 64
          type: string
          description: Hypervisor user name.
          example: Test UserName
        fullName:
          maxLength: 64
          type: string
          description: Hypervisor full name.
          example: AHV 10.0
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        numberOfVms:
          type: integer
          description: Number of VMs.
          format: int64
          example: 45
        state:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorState'
        acropolisConnectionState:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.AcropolisConnectionState'
      additionalProperties: false
      description: Hypervisor details.
    clustermgmt.v4.0.config.ClusterReference:
      type: object
      properties:
        uuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Cluster UUID.
          example: c39a838a-a54e-440a-828d-737adb6cc707
        name:
          maxLength: 64
          type: string
          description: Cluster name. This is part of payload for both cluster create
            & update operations.
          readOnly: true
          example: Test Cluster Name
      additionalProperties: false
      description: Cluster reference for an entity.
    clustermgmt.v4.0.config.ControllerVmReference:
      type: object
      properties:
        externalAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        backplaneAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        rdmaBackplaneAddress:
          maxItems: 1024
          minItems: 0
          type: array
          description: RDMA backplane address.
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        natIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        natPort:
          type: integer
          description: NAT port.
          example: 75
        isInMaintenanceMode:
          type: boolean
          description: Maintenance mode status.
          example: false
      additionalProperties: false
      description: Host entity with its attributes.
    clustermgmt.v4.0.config.DiskReference:
      type: object
      properties:
        uuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Disk UUID.
          example: 9e47471e-8d04-4164-995a-ce6314f00370
        mountPath:
          type: string
          description: Disk mount path.
          example: /home/nutanix/data/stargate-storage/disks/W461VFBT
        sizeInBytes:
          type: integer
          description: Disk size.
          format: int64
          example: 79
        serialId:
          type: string
          description: Disk serial Id.
          example: W461VFBT
        storageTier:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageTierReference'
      additionalProperties: false
      description: Disk details attached to a host.
    clustermgmt.v4.0.config.KeyManagementDeviceToCertStatusInfo:
      type: object
      properties:
        keyManagementServerName:
          maxLength: 64
          type: string
          description: Key management server name.
          example: Test KeyManagementDevice Name
        isCertificatePresent:
          type: boolean
          description: Certificate status.
          example: false
      additionalProperties: false
      description: Mapping of key management device to certificate status list.
    clustermgmt.v4.0.config.NodeStatus:
      type: string
      description: Node status.
      enum:
      - NORMAL
      - TO_BE_REMOVED
      - OK_TO_BE_REMOVED
      - NEW_NODE
      - TO_BE_PREPROTECTED
      - PREPROTECTED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        TO_BE_PREPROTECTED: Node to be preprotected.
        TO_BE_REMOVED: Node to be removed.
        PREPROTECTED: Node is preprotected.
        $UNKNOWN: |
          Unknown value.
        OK_TO_BE_REMOVED: Indicates whether removing the node from the cluster is
          adequate.
        NORMAL: Normal node.
        $REDACTED: |
          Redacted value.
        NEW_NODE: New node.
    clustermgmt.v4.0.config.IpmiReference:
      type: object
      properties:
        ip:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        username:
          maxLength: 64
          type: string
          description: IPMI username.
          example: Test UserName
      additionalProperties: false
      description: IPMI reference.
    clustermgmt.v4.0.config.HypervisorState:
      type: string
      description: Hypervisor state.
      enum:
      - ACROPOLIS_NORMAL
      - ENTERING_MAINTENANCE_MODE
      - ENTERED_MAINTENANCE_MODE
      - RESERVED_FOR_HA_FAILOVER
      - ENTERING_MAINTENANCE_MODE_FROM_HA_FAILOVER
      - RESERVING_FOR_HA_FAILOVER
      - HA_FAILOVER_SOURCE
      - HA_FAILOVER_TARGET
      - HA_HEALING_SOURCE
      - HA_HEALING_TARGET
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        HA_HEALING_TARGET: Hypervisor in HA healing target state.
        ENTERING_MAINTENANCE_MODE: Hypervisor entering maintenance mode.
        RESERVED_FOR_HA_FAILOVER: Hypervisor reserved for HA failover.
        HA_HEALING_SOURCE: Hypervisor in HA healing source state.
        RESERVING_FOR_HA_FAILOVER: Hypervisor that is planned to be reserved for HA
          failover.
        HA_FAILOVER_SOURCE: Hypervisor in HA failover source state.
        $UNKNOWN: |
          Unknown value.
        ACROPOLIS_NORMAL: Hypervisor in Acropolis normal state.
        ENTERED_MAINTENANCE_MODE: Hypervisor entered maintenance mode.
        ENTERING_MAINTENANCE_MODE_FROM_HA_FAILOVER: Hypervisor entering maintenance
          mode from HA failover.
        HA_FAILOVER_TARGET: Hypervisor in HA failover target state.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.AcropolisConnectionState:
      type: string
      description: Status of Acropolis connection to hypervisor.
      enum:
      - CONNECTED
      - DISCONNECTED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        DISCONNECTED: Acropolis disconnected.
        CONNECTED: Acropolis connected.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.StorageTierReference:
      type: string
      description: Disk storage Tier type.
      enum:
      - PCIE_SSD
      - SATA_SSD
      - HDD
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        HDD: HDD storage tier.
        $UNKNOWN: |
          Unknown value.
        PCIE_SSD: PCIE SSD storage tier.
        SATA_SSD: SATA SSD storage tier.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ListHostsByClusterIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.Host'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts\
        \ Get operation"
    clustermgmt.v4.0.config.HostNameParam:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 63
          type: string
          description: Name of the host.
          example: Test Host Name
      additionalProperties: false
      description: Host rename parameters.
    clustermgmt.v4.0.config.HostGpu:
      description: Host GPU details.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          nodeUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: UUID of the host.
            example: b1394065-75de-4c42-9ade-01d09e0ccec7
          nodeId:
            type: string
            description: Controller VM Id.
            example: "Test node Id, ex: e75073a9-8c1a-44da-84a4-d960f1f9978c"
          cluster:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterReference'
          numberOfVgpusAllocated:
            type: integer
            description: Number of vGPUs allocated.
            format: int64
            example: 23
          config:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualGpuConfig'
        additionalProperties: false
    clustermgmt.v4.0.config.VirtualGpuConfig:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.GpuType'
        deviceId:
          type: integer
          description: Device Id.
          format: int64
          example: 1
        deviceName:
          type: string
          description: Device name.
          example: Test Device Name
        vendorName:
          maxLength: 128
          minLength: 0
          type: string
          description: Vendor name.
          example: Test Vendor Name
        isInUse:
          type: boolean
          description: GPU in use.
          example: false
        sbdf:
          type: string
          description: SBDF address.
          example: 0000:af:00.0
        numaNode:
          type: string
          description: NUMA node.
          example: "1"
        assignable:
          type: integer
          description: GPU assignable.
          format: int64
          example: 96
        fraction:
          type: integer
          description: GPU fraction.
          format: int64
          example: 79
        guestDriverVersion:
          type: string
          description: Guest driver version.
          example: "471.68"
        licenses:
          maxItems: 1024
          minItems: 0
          type: array
          description: GPU license list.
          items:
            type: string
            example: Starter/Pro
        numberOfVirtualDisplayHeads:
          type: integer
          description: Number of virtual display heads.
          format: int64
          example: 7
        frameBufferSizeBytes:
          type: integer
          description: Frame buffer size in bytes.
          format: int64
          example: 52
        maxResolution:
          maxLength: 16
          minLength: 0
          type: string
          description: Maximum resolution per display heads.
          example: 4096x2160
        maxInstancesPerVm:
          type: integer
          description: Maximum instances allowed per VM.
          format: int64
          example: 64
      additionalProperties: false
      description: Virtual GPU configuration details.
    clustermgmt.v4.0.config.GpuType:
      type: string
      description: GPU type.
      enum:
      - PASSTHROUGH_GRAPHICS
      - PASSTHROUGH_COMPUTE
      - VIRTUAL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        PASSTHROUGH_GRAPHICS: Pass through graphics GPU type.
        PASSTHROUGH_COMPUTE: Pass through compute GPU type.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
        VIRTUAL: Virtual GPU type.
    clustermgmt.v4.0.config.NodeDiscoveryParams:
      type: object
      properties:
        addressType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.AddressType'
        ipFilterList:
          maxItems: 1024
          minItems: 0
          type: array
          description: IP addresses of the unconfigured nodes.
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        uuidFilterList:
          maxItems: 1024
          minItems: 0
          type: array
          description: Unconfigured node UUIDs.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: 9f49d615-0e7d-4c61-8988-8592f945bae5
        timeout:
          type: integer
          description: Timeout for the workflow in seconds.
          format: int64
          example: 80
        interfaceFilterList:
          maxItems: 1024
          minItems: 0
          type: array
          description: Interface name that is used for packet broadcasting.
          items:
            type: string
            example: Test Interface name
        isManualDiscovery:
          type: boolean
          description: Indicates if the discovery is manual or not.
          example: true
      additionalProperties: false
      description: Discover unconfigured node details.
    clustermgmt.v4.0.config.DiscoverUnconfiguredNodesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/discover-unconfigured-nodes\
        \ Post operation"
    clustermgmt.v4.0.config.AddressType:
      type: string
      description: Indicates whether the address type is IPV4/IPV6.
      enum:
      - IPV4
      - IPV6
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        IPV6: IPv6 address type.
        IPV4: IPv4 address type.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.NodeDetails:
      required:
      - nodeList
      type: object
      properties:
        nodeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: Node specific details required to fetch node networking information.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeListNetworkingDetails'
        requestType:
          type: string
          description: "Type of request, either it can be expand_cluster or npe."
          example: expand_cluster/npe
      additionalProperties: false
      description: Request type and networking details for nodes.
    clustermgmt.v4.0.config.FetchNodeNetworkingDetailsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/fetch-node-networking-details\
        \ Post operation"
    clustermgmt.v4.0.config.NodeListNetworkingDetails:
      type: object
      properties:
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: 98ebd4d7-37fa-497c-aef6-f09d18c406b7
        blockId:
          type: string
          description: Rackable unit Id in which node resides.
          example: Test Block ID
        nodePosition:
          type: string
          description: Position of a node in a rackable unit.
          example: A/B
        cvmIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        hypervisorIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        ipmiIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        digitalCertificateMapList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of objects containing digital_certificate_base64 and key_management_server_uuid
            fields for key management server.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.DigitalCertificateMapReference'
        model:
          type: string
          description: Rackable unit model name.
          example: NX-1065-G8
        isComputeOnly:
          type: boolean
          description: Indicates whether the node is compute only or not.
          example: false
        isLightCompute:
          type: boolean
          description: Indicates whether the node is light compute or not.
          example: true
        hypervisorType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        hypervisorVersion:
          type: string
          description: Host version of the node.
          example: Nutanix 20220304.480
        nosVersion:
          type: string
          description: NOS software version of a node.
          example: "7.0"
        currentNetworkInterface:
          type: string
          description: Current network interface of a node.
          example: eth0/eth1
        isRoboMixedHypervisor:
          type: boolean
          description: Indicates whether the hypervisor is robo mixed or not.
          example: false
      additionalProperties: false
      description: Node specific details required to fetch node networking information.
    clustermgmt.v4.0.config.DigitalCertificateMapReference:
      type: object
      properties:
        key:
          type: string
          description: Field containing digital_certificate_base64 and key_management_server_uuid
            for key management server.
          example: Test Digital certificate Key Name
        value:
          type: string
          description: Value for the fields digital_certificate_base64 and key_management_server_uuid
            for key management server.
          example: 'Test Digital certificate Key Value '
      additionalProperties: false
      description: Object containing digital_certificate_base64 and key_management_server_uuid
        fields for key management server.
    clustermgmt.v4.0.config.ExpandClusterParams:
      required:
      - nodeParams
      type: object
      properties:
        nodeParams:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeParam'
        configParams:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.ConfigParams'
        shouldSkipAddNode:
          type: boolean
          description: Indicates if node addition can be skipped.
          example: false
        shouldSkipPreExpandChecks:
          type: boolean
          description: Indicates if pre-expand checks can be skipped for node addition.
          example: false
      additionalProperties: false
      description: Property of the node to be added.
    clustermgmt.v4.0.config.ExpandClusterApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/expand-cluster\
        \ Post operation"
    clustermgmt.v4.0.config.NodeParam:
      type: object
      properties:
        blockList:
          maxItems: 1024
          minItems: 0
          type: array
          description: Block list of a cluster.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.BlockItem'
        nodeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of nodes in a cluster.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeItem'
        computeNodeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of compute only nodes.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ComputeNodeItem'
        hypervisorIsos:
          maxItems: 1024
          minItems: 0
          type: array
          description: Hypervisor type to md5sum map.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorIsoMap'
        hypervSku:
          type: string
          description: Hyperv SKU.
          example: datacenter_gui
        bundleInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.BundleInfo'
        shouldSkipHostNetworking:
          type: boolean
          description: Indicates if the host networking needs to be skipped or not.
          example: false
      additionalProperties: false
      description: Parameters of the node to be added.
    clustermgmt.v4.0.config.ConfigParams:
      type: object
      properties:
        shouldSkipDiscovery:
          type: boolean
          description: Indicates if node discovery need to be skipped or not.
          example: true
        shouldSkipImaging:
          type: boolean
          description: Indicates if node imaging needs to be skipped or not.
          example: true
        shouldValidateRackAwareness:
          type: boolean
          description: Indicates if rack awareness needs to be validated or not.
          example: false
        isNosCompatible:
          type: boolean
          description: Indicates if node is compatible or not.
          example: false
        isComputeOnly:
          type: boolean
          description: Indicates whether the node is compute only or not.
          example: false
        isNeverScheduleable:
          type: boolean
          description: Indicates whether the node is marked to be never schedulable
            or not.
          example: false
        targetHypervisor:
          type: string
          description: Target hypervisor.
          example: kvm
        hyperv:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervCredentials'
      additionalProperties: false
      description: Config parameters.
    clustermgmt.v4.0.config.BlockItem:
      type: object
      properties:
        blockId:
          type: string
          description: Rackable unit serial name.
          example: 8F3K144
        rackName:
          maxLength: 64
          type: string
          description: Rack name.
          example: syd47-f01c64-au421
      additionalProperties: false
      description: Block item containing block serial and rack name.
    clustermgmt.v4.0.config.NodeItem:
      type: object
      properties:
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: 1c86af85-4b75-4d5e-a3cf-3b1a880d762b
        blockId:
          type: string
          description: Rackable unit serial name.
          example: 9F3K144
        nodePosition:
          type: string
          description: Position of a node in a rackable unit.
          example: B
        hypervisorType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        isRoboMixedHypervisor:
          type: boolean
          description: Indicates whether the hypervisor is robo mixed or not.
          example: true
        hypervisorHostname:
          maxLength: 63
          pattern: "^(?!.*\\.\\.)(?!.*\\.\\-)(?!.*\\-\\.)(?!^\\d+$)[a-zA-Z\\d]([a-zA-Z\\\
            d.-]*[a-zA-Z\\d])?$"
          type: string
          description: Name of the host.
          example: hestia03-2
        hypervisorVersion:
          type: string
          description: Host version of the node.
          example: Nutanix 20220304.480
        nosVersion:
          type: string
          description: NOS software version of a node.
          example: "7.0"
        isLightCompute:
          type: boolean
          description: Indicates whether the node is light compute or not.
          example: true
        ipmiIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        digitalCertificateMapList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of objects containing digital_certificate_base64 and key_management_server_uuid
            fields for key management server.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.DigitalCertificateMapReference'
        cvmIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        hypervisorIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        model:
          type: string
          description: Rackable unit model name.
          example: NX-1065-G8
        currentNetworkInterface:
          type: string
          description: Current network interface of a node.
          example: eth0/eth1/Network adapter 1
        networks:
          maxItems: 1024
          minItems: 0
          type: array
          description: Active and standby uplink information of the target nodes.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UplinkNetworkItem'
      additionalProperties: false
      description: Node item containing attributes of node.
    clustermgmt.v4.0.config.ComputeNodeItem:
      type: object
      properties:
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: bb96a894-959c-4f5a-9132-c0a1dbd39275
        blockId:
          type: string
          description: Rackable unit Id in which node resides.
          example: RU-987654321
        nodePosition:
          type: string
          description: Position of a node in a rackable unit.
          example: B
        hypervisorIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        ipmiIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        digitalCertificateMapList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of objects containing digital_certificate_base64 and key_management_server_uuid
            fields for key management server.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.DigitalCertificateMapReference'
        hypervisorHostname:
          maxLength: 64
          type: string
          description: Name of the host.
          example: hv-cluster-01
        model:
          type: string
          description: Rackable unit model type.
          example: NX-5000
      additionalProperties: false
      description: Compute node details.
    clustermgmt.v4.0.config.HypervisorIsoMap:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        md5Sum:
          pattern: "^[a-fA-F0-9]{32}$"
          type: string
          description: Md5sum of ISO.
          example: For empty string ==> d41d8cd98f00b204e9800998ecf8427e
      additionalProperties: false
      description: Map containing key as hypervisor type and value as md5sum of ISO.
    clustermgmt.v4.0.config.BundleInfo:
      type: object
      properties:
        name:
          maxLength: 64
          type: string
          description: Name of the hypervisor bundle.
          example: Test Bundle Name
      additionalProperties: false
      description: Hypervisor bundle information.
    clustermgmt.v4.0.config.UplinkNetworkItem:
      type: object
      properties:
        name:
          maxLength: 64
          type: string
          description: Name of the uplink.
        networks:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of network types.
          items:
            type: string
        uplinks:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.Uplinks'
      additionalProperties: false
      description: Active and standby uplink information of the target nodes.
    clustermgmt.v4.0.config.Uplinks:
      type: object
      properties:
        active:
          maxItems: 1024
          minItems: 0
          type: array
          description: Active uplink information.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UplinksField'
        standby:
          maxItems: 1024
          minItems: 0
          type: array
          description: Standby uplink information.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UplinksField'
      additionalProperties: false
      description: Active and standby uplink information of the target nodes.
    clustermgmt.v4.0.config.UplinksField:
      type: object
      properties:
        mac:
          pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
          type: string
          description: Mac address.
          example: 01:2B:3C:4D:5E:6F
        name:
          maxLength: 64
          type: string
          description: Interface name.
          example: Main-Uplink
        value:
          type: string
          description: Interface value.
          example: 10.0.0.1
      additionalProperties: false
      description: Properties of active and standby uplink.
    clustermgmt.v4.0.config.HypervCredentials:
      type: object
      properties:
        domainDetails:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.UserInfo'
        failoverClusterDetails:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.UserInfo'
      additionalProperties: false
      description: HyperV Credentials.
    clustermgmt.v4.0.config.UserInfo:
      type: object
      properties:
        userName:
          maxLength: 64
          type: string
          description: Username.
          example: Test UserName
        password:
          type: string
          description: Password.
          example: Test User Password
        clusterName:
          maxLength: 75
          type: string
          description: Cluster name. This is part of payload for both cluster create
            & update operations.
          example: Test ClusterName
      additionalProperties: false
      description: UserName and Password model.
    clustermgmt.v4.0.config.HypervisorUploadParam:
      required:
      - nodeList
      type: object
      properties:
        nodeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of node details for checking whether hypervisor ISO upload
            is required or not.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorUploadNodeListItem'
      additionalProperties: false
      description: Parameters to get information on whether hypervisor ISO upload
        is required or not.
    clustermgmt.v4.0.config.CheckHypervisorRequirementsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/check-hypervisor-requirements\
        \ Post operation"
    clustermgmt.v4.0.config.HypervisorUploadNodeListItem:
      type: object
      properties:
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: 77496137-b672-4ba0-a95d-76afb9acce8f
        hypervisorVersion:
          type: string
          description: Host version of the node.
          example: Nutanix 20220304.480
        nosVersion:
          type: string
          description: NOS software version of a node.
          example: "7.0"
        model:
          type: string
          description: Rackable unit model type.
          example: NX-8155-G
        blockId:
          type: string
          description: Rackable unit Id in which node resides.
          example: 8F3K144
        isLightCompute:
          type: boolean
          description: Indicates whether the node is light compute or not.
          example: true
        hypervisorType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        isRoboMixedHypervisor:
          type: boolean
          description: Indicates whether the hypervisor is robo mixed or not.
          example: true
        isMinimumComputeNode:
          type: boolean
          description: Indicates if node is minimum compute or not.
          example: false
      additionalProperties: false
      description: Individual node item details for checking whether hypervisor ISO
        upload is required or not.
    clustermgmt.v4.0.config.ValidateNodeParam:
      required:
      - spec
      type: object
      properties:
        spec:
          description: ValidateNodeParam specs. It can be OneOf between hypervisor
            bundle and node uplinks.
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.BundleParam'
          - maxItems: 1024
            minItems: 0
            type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.UplinkNode'
      additionalProperties: false
      description: Request body for node validation. It can be OneOf between hypervisor
        bundle and node uplinks.
    clustermgmt.v4.0.config.ValidateNodeApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/validate-node\
        \ Post operation"
    clustermgmt.v4.0.config.BundleParam:
      required:
      - bundleInfo
      - nodeList
      type: object
      properties:
        bundleInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.BundleInfo'
        nodeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of node attributes for validating bundle compatibility.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeInfo'
      additionalProperties: false
      description: ISO attributes to validate compatibility.
    clustermgmt.v4.0.config.UplinkNode:
      required:
      - cvmIp
      - networks
      type: object
      properties:
        cvmIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        hypervisorIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        networks:
          maxItems: 1024
          minItems: 0
          type: array
          description: Active and standby uplink information of the target nodes.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UplinkNetworkItem'
      additionalProperties: false
      description: Uplink information of the target nodes.
    clustermgmt.v4.0.config.NodeInfo:
      type: object
      properties:
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: c1828232-142c-4992-a8dd-b815f23b15a3
        blockId:
          type: string
          description: Rackable unit serial name.
          example: RU-123456789
        nodePosition:
          type: string
          description: Position of a node in a rackable unit.
          example: A
        hypervisorType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        isRoboMixedHypervisor:
          type: boolean
          description: Indicates whether the hypervisor is robo mixed or not.
          example: false
        hypervisorHostname:
          maxLength: 64
          type: string
          description: Name of the host.
        hypervisorVersion:
          type: string
          description: Host version of the node.
          example: Nutanix 20220304.480
        nosVersion:
          type: string
          description: NOS software version of a node.
          example: 6.5.4
        isLightCompute:
          type: boolean
          description: Indicates whether the node is light compute or not.
          example: false
        ipmiIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        digitalCertificateMapList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of objects containing digital_certificate_base64 and key_management_server_uuid
            fields for key management server.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.DigitalCertificateMapReference'
        cvmIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        hypervisorIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        model:
          type: string
          description: Rackable unit model name.
        currentNetworkInterface:
          type: string
          description: Current network interface of a node.
      additionalProperties: false
      description: Node item containing attributes of node.
    clustermgmt.v4.0.config.NodeRemovalParams:
      required:
      - nodeUuids
      type: object
      properties:
        shouldSkipPrechecks:
          type: boolean
          description: Indicates if prechecks can be skipped for node removal.
          example: true
        shouldSkipRemove:
          type: boolean
          description: Indicates if node removal can be skipped.
          example: true
        nodeUuids:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of node UUIDs to remove.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: 83a0a839-09e1-4db0-b688-2903dc2741ea
        extraParams:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeRemovalExtraParam'
      additionalProperties: false
      description: Parameters to remove nodes from cluster.
    clustermgmt.v4.0.config.RemoveNodeApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/$actions/remove-node\
        \ Post operation"
    clustermgmt.v4.0.config.NodeRemovalExtraParam:
      type: object
      properties:
        shouldSkipUpgradeCheck:
          type: boolean
          description: Indicates if upgrade check needs to be skip or not.
          example: true
        shouldSkipSpaceCheck:
          type: boolean
          description: Indicates if space check needs to be skip or not.
          example: true
        shouldSkipAddCheck:
          type: boolean
          description: Indicates if add node check need to be skip or not.
          example: false
      additionalProperties: false
      description: Extra parameters for node addition.
    clustermgmt.v4.0.config.TaskResponseType:
      type: string
      description: Task Response search type.
      enum:
      - UNCONFIGURED_NODES
      - NETWORKING_DETAILS
      - HYPERVISOR_UPLOAD_INFO
      - VALIDATE_BUNDLE_INFO
      - NON_COMPATIBLE_CLUSTERS
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NETWORKING_DETAILS: Get networking details search type.
        HYPERVISOR_UPLOAD_INFO: Get hypervisor upload information search type.
        $UNKNOWN: |
          Unknown value.
        UNCONFIGURED_NODES: Get unconfigured node search type.
        VALIDATE_BUNDLE_INFO: Get validate bundle information search type.
        NON_COMPATIBLE_CLUSTERS: Get non compatible clusters for cluster profile
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.FetchTaskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.TaskResponse
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.TaskResponse'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/task-response/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.TaskResponse:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          taskResponseType:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.TaskResponseType'
          response:
            description: "Task Response which is one of node-discovery, networking-details,\
              \ hypervisor-upload, validate-bundle-info, non-compatible-cluster-reference\
              \  information."
            oneOf:
            - $ref: '#/components/schemas/clustermgmt.v4.0.config.UnconfigureNodeDetails'
            - $ref: '#/components/schemas/clustermgmt.v4.0.config.NodeNetworkingDetails'
            - $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorUploadInfo'
            - $ref: '#/components/schemas/clustermgmt.v4.0.config.ValidateBundleInfo'
            - maxItems: 1024
              minItems: 0
              type: array
              items:
                $ref: '#/components/schemas/clustermgmt.v4.0.config.NonCompatibleClusterReference'
        additionalProperties: false
        description: "Task Response which is one of node-discovery, networking-details,\
          \ hypervisor-upload, validate-bundle-info, non-compatible-cluster-reference\
          \  information."
    clustermgmt.v4.0.config.UnconfigureNodeDetails:
      type: object
      properties:
        nodeList:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of unconfigured nodes.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UnconfiguredNodeListItem'
      additionalProperties: false
      description: List of unconfigured nodes.
    clustermgmt.v4.0.config.NodeNetworkingDetails:
      type: object
      properties:
        networkInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.NetworkInfo'
        uplinks:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of uplinks information for each CVM IP.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UplinkInfo'
        warnings:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of warning messages.
          items:
            type: string
            example: ' test warning messages'
      additionalProperties: false
      description: Network details of nodes.
    clustermgmt.v4.0.config.HypervisorUploadInfo:
      type: object
      properties:
        errorMessage:
          type: string
          description: Error message.
          example: Test error message
        uploadInfoNodeList:
          maxItems: 10
          minItems: 0
          type: array
          description: Node list containing upload information.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.UploadInfoNodeItem'
      additionalProperties: false
      description: Hypervisor upload required information.
    clustermgmt.v4.0.config.ValidateBundleInfo:
      type: object
      properties:
        md5Sum:
          pattern: "^[a-fA-F0-9]{32}$"
          type: string
          description: Md5sum of ISO.
      additionalProperties: false
      description: Information of the bundle to verify.
    clustermgmt.v4.0.config.NonCompatibleClusterReference:
      type: object
      properties:
        clusterExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Cluster Profile UUID
          readOnly: true
          example: a48425de-508f-433e-bcc8-c2ba6ee470cc
        configDrifts:
          maxItems: 50
          minItems: 0
          type: array
          description: Cluster profile setting
          readOnly: true
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ConfigType'
      additionalProperties: false
      description: Non compatible cluster reference
    clustermgmt.v4.0.config.UnconfiguredNodeListItem:
      type: object
      properties:
        foundationVersion:
          type: string
          description: Foundation version.
          example: 5.10.0
        rackableUnitSerial:
          type: string
          description: Rackable unit serial name.
          example: NX123456789
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: d119f3d6-c1cc-487d-82e4-45136a76fbca
        rackableUnitMaxNodes:
          type: integer
          description: Maximum number of nodes in rackable-unit.
          format: int64
          example: 45
        currentNetworkInterface:
          type: string
          description: Current network interface of a node.
          example: eth0
        nodePosition:
          type: string
          description: Position of a node in a rackable unit.
          example: A
        cvmIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        currentCvmVlanTag:
          type: string
          description: Current CVM VLAN tag.
        isSecureBooted:
          type: boolean
          description: Secure boot status.
          example: true
        nosVersion:
          type: string
          description: NOS software version of a node.
          example: 4.5.2
        cpuType:
          maxItems: 1024
          minItems: 0
          type: array
          description: CPU type.
          items:
            type: string
            example: AMD EPYC 7002
        hypervisorType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        hypervisorVersion:
          type: string
          description: Host version of the node.
          example: Nutanix 20220304.480
        interfaceIpv6:
          type: string
          description: Interface IPV6 address.
          example: 2001:db8::1
        clusterId:
          type: string
          description: Cluster ID.
          example: Test Cluster extId
        attributes:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.UnconfiguredNodeAttributeMap'
        rackableUnitModel:
          type: string
          description: Rackable unit model type.
          example: NX-3060-G5
        arch:
          type: string
          description: Cluster arch.
          example: x86_64
        hypervisorIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        ipmiIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        hostType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HostTypeEnum'
      additionalProperties: false
      description: Unconfigured node details.
    clustermgmt.v4.0.config.UnconfiguredNodeAttributeMap:
      type: object
      properties:
        lcmFamily:
          type: string
          description: LCM family name.
          example: smc_gen_11
        isModelSupported:
          type: boolean
          description: Indicates whether the model is supported or not.
          example: true
        defaultWorkload:
          type: string
          description: Default workload.
          example: vdi/ storage_heavy
        shouldWorkWith1GNic:
          type: boolean
          description: Indicates if cvm interface can work with 1 GIG NIC or not.
          example: false
        isRoboMixedHypervisor:
          type: boolean
          description: Indicates whether the hypervisor is robo mixed or not.
          example: true
      additionalProperties: false
      description: Map providing additional node attributes for the unconfigured node.
    clustermgmt.v4.0.config.NetworkInfo:
      type: object
      properties:
        hci:
          maxItems: 1024
          minItems: 0
          type: array
          description: Network information of HCI nodes.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NameNetworkRef'
        so:
          maxItems: 1024
          minItems: 0
          type: array
          description: Network information of SO nodes.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NameNetworkRef'
      additionalProperties: false
      description: Network information of HCI and SO nodes.
    clustermgmt.v4.0.config.UplinkInfo:
      type: object
      properties:
        cvmIp:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        uplinkList:
          maxItems: 1024
          minItems: 0
          type: array
          description: Uplink details for a controller VM.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.NameMacRef'
      additionalProperties: false
      description: Uplink information for controller VM.
    clustermgmt.v4.0.config.NameNetworkRef:
      type: object
      properties:
        hypervisorType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        name:
          maxLength: 64
          type: string
          description: Interface name.
          example: Test Interface name
        networks:
          maxItems: 1024
          minItems: 0
          type: array
          description: List of networks for interface.
          items:
            type: string
            example: Test newtwork Names
      additionalProperties: false
      description: Name and network information.
    clustermgmt.v4.0.config.NameMacRef:
      type: object
      properties:
        name:
          maxLength: 64
          type: string
          description: Interface name.
          example: eth0
        mac:
          pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
          type: string
          description: Mac address.
          example: 79:72:d3:3f:fd:55
      additionalProperties: false
      description: Interface name and mac address.
    clustermgmt.v4.0.config.UploadInfoNodeItem:
      type: object
      properties:
        isHypervisorUploadRequired:
          type: boolean
          description: Provides information on whether hypervisor ISO upload is required
            or not. This API is not supported for XEN hypervisor type.
          example: true
        isImagingMandatory:
          type: boolean
          description: Indicates if imaging is required or not.
          example: true
        nodeUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the host.
          example: 5d7e465f-6176-42f2-abcf-dceafd747564
        availableHypervisorIsoError:
          type: string
          description: "Error message if any, for available hypervisor ISO."
          example: success
        requiredHypervisorType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.HypervisorType'
        isNodeCompatible:
          type: boolean
          description: Indicates if node is compatible or not.
          example: false
        md5Sum:
          pattern: "^[a-fA-F0-9]{32}$"
          type: string
          description: Md5sum of ISO.
        bundleName:
          maxLength: 64
          type: string
          description: Name of the hypervisor bundle.
          example: Test Bundle Name
      additionalProperties: false
      description: Upload information for a node.
    clustermgmt.v4.0.config.ComputeNonMigratableVmsSpec:
      required:
      - hosts
      type: object
      properties:
        hosts:
          maxItems: 1024
          minItems: 1
          type: array
          description: List of host UUIDs associated with the cluster.
          items:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            example: 7a01cd01-3326-40f7-a112-d0744e6ed51f
        vcenterInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterInfo'
      additionalProperties: false
      description: Property of the host used to compute non-migratable VMs.
    clustermgmt.v4.0.config.VcenterInfo:
      required:
      - address
      - credentials
      type: object
      properties:
        address:
          $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
        credentials:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterCredentials'
      additionalProperties: false
      description: Vcenter information for ESX.
    clustermgmt.v4.0.config.NonMigratableVmsResult:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          vms:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of non-migratable VMs.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.NonMigratableVmInfo'
        additionalProperties: false
        description: Details of all the non-migratable VMs.
    clustermgmt.v4.0.config.NonMigratableVmInfo:
      type: object
      properties:
        vmName:
          maxLength: 64
          type: string
          description: Name of the VM.
          example: Test VM Name
        vmUuid:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: UUID of the VM.
          example: 94312b25-f9d8-4bf6-97cb-5734c4ced206
        nonMigratableVmReason:
          type: string
          description: Reason for a VM to be non-migratable.
          example: Test reason for non-migratable VM
      additionalProperties: false
      description: Non-migratable VM details.
    clustermgmt.v4.0.config.ListClusterProfilesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterProfile'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
        Get operation
    clustermgmt.v4.0.config.CreateClusterProfileApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles
        Post operation
    clustermgmt.v4.0.config.GetClusterProfileApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.ClusterProfile
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterProfile'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.UpdateClusterProfileApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
        \ Put operation"
    clustermgmt.v4.0.config.DeleteClusterProfileApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}\
        \ Delete operation"
    clustermgmt.v4.0.config.ClusterReferenceListSpec:
      required:
      - clusters
      type: object
      properties:
        clusters:
          maxItems: 400
          minItems: 1
          type: array
          description: Cluster reference for an entity.
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ClusterReference'
      additionalProperties: false
    clustermgmt.v4.0.config.DisassociateClusterFromClusterProfileApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/disassociate-cluster\
        \ Post operation"
    clustermgmt.v4.0.config.ApplyClusterProfileApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/cluster-profiles/{extId}/$actions/apply\
        \ Post operation"
    clustermgmt.v4.0.config.ListVirtualGpuProfilesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualGpuProfile'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/virtual-gpu-profiles\
        \ Get operation"
    clustermgmt.v4.0.config.VirtualGpuProfile:
      description: Virtual GPU Profile.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          virtualGpuConfig:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualGpuConfig'
          allocatedVmExtIds:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of UUIDs of virtual machines with an allocated GPU belonging
              to this profile.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 718af48a-1014-47ea-930e-6e4e20a9bbad
        additionalProperties: false
    clustermgmt.v4.0.config.ListPhysicalGpuProfilesApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.PhysicalGpuProfile'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/physical-gpu-profiles\
        \ Get operation"
    clustermgmt.v4.0.config.PhysicalGpuProfile:
      description: Physical GPU Profile.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          physicalGpuConfig:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.PhysicalGpuConfig'
          allocatedVmExtIds:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of UUIDs of virtual machines with an allocated GPU belonging
              to this profile.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 909d0761-d5b9-49da-872d-1e16b19c01ec
        additionalProperties: false
    clustermgmt.v4.0.config.PhysicalGpuConfig:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.GpuType'
        deviceId:
          type: integer
          description: Device Id.
          format: int64
          example: 34
        deviceName:
          type: string
          description: Device name.
          example: Test Device Name
        vendorName:
          maxLength: 128
          minLength: 0
          type: string
          description: Vendor name.
          example: Test Vendor Name
        isInUse:
          type: boolean
          description: GPU in use.
          example: true
        sbdf:
          type: string
          description: SBDF address.
          example: 0000:af:00.0
        numaNode:
          type: string
          description: NUMA node.
          example: "1"
        assignable:
          type: integer
          description: GPU assignable.
          format: int64
          example: 95
        mode:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.GpuMode'
        frameBufferSizeBytes:
          type: integer
          description: Frame buffer size in bytes.
          format: int64
          example: 1
      additionalProperties: false
      description: Physical GPU configuration details.
    clustermgmt.v4.0.config.GpuMode:
      type: string
      description: GPU mode.
      enum:
      - UNUSED
      - USED_FOR_PASSTHROUGH
      - USED_FOR_VIRTUAL
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        USED_FOR_VIRTUAL: GPU used for virtual mode.
        UNUSED: Unused GPU mode.
        $UNKNOWN: |
          Unknown value.
        USED_FOR_PASSTHROUGH: GPU used for passthrough mode.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.ListHostsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.Host'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/hosts
        Get operation
    clustermgmt.v4.0.config.ListHostNicsByHostIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.HostNic'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics\
        \ Get operation"
    clustermgmt.v4.0.config.HostNic:
      description: Host NIC details.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 64
            type: string
            description: Name of the host NIC.
            example: Test host NIC name
          hostDescription:
            type: string
            description: Host description.
            example: Test Host Description
          macAddress:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
            description: Host Mac address.
            example: 97:31:df:28:cd:94
          ipv4Addresses:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of IPv4 addresses associated with the NIC entity for
              the network connection.
            items:
              $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          ipv6Addresses:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of IPv6 addresses associated with the NIC entity for
              the network connection.
            items:
              $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          interfaceStatus:
            type: string
            description: Operational status of the interface to the port associated
              with the NIC entity.
            example: "Up,Down"
          isDhcpEnabled:
            type: boolean
            description: Status of DHCP protocol.
            example: true
          linkSpeedInKbps:
            type: integer
            description: Link speed in Kbps.
            format: int64
            example: 8
          mtuInBytes:
            type: integer
            description: Maximum transmission unit in bytes.
            format: int64
            example: 89
          nodeUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: UUID of the host.
            example: 26b28287-95ae-46b0-ac57-5651129fb9ee
          discoveryProtocol:
            type: string
            description: Network discovery protocol (either LLDP or None).
            example: "NDP,LLDP"
          switchDeviceId:
            type: string
            description: Switch device Id learned through the discovery protocol.
            example: p4r6r08-leaf2
          switchPortId:
            type: string
            description: Switch port Id learned through the discovery protocol.
            example: ethernet5:3
          switchVendorInfo:
            type: string
            description: Switch vendor information learned through the discovery protocol.
            example: 5c:16:c7:00:00:01
          switchVlanId:
            type: string
            description: Switch VLAN Id learned through the discovery protocol.
            example: "4095"
          switchManagementIp:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          switchMacAddress:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
            description: Switch Mac address
            example: eb:22:9e:0b:82:0e
          attachedSwitchInterfaceList:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of network switch interfaces attached to the host NIC.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.NetworkSwitchInterface'
          rxRingSizeInBytes:
            type: integer
            description: "Size of configured buffer (in bytes) to the port associated\
              \ with NIC, storing the network packets received through the port."
            format: int64
            example: 82
          txRingSizeInBytes:
            type: integer
            description: "Size of configured buffer (in bytes) to the port associated\
              \ with NIC, storing the network packets that would be transmitted through\
              \ the port."
            format: int64
            example: 93
        additionalProperties: false
    clustermgmt.v4.0.config.NetworkSwitchInterface:
      description: Network switch interface details.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          port:
            type: integer
            description: Network switch interface port number.
            format: int64
            example: 80
          switchInterfaceName:
            maxLength: 64
            type: string
            description: Network switch interface name.
          switchInterfaceDescription:
            type: string
            description: Network switch interface description.
            example: Hyper-V Virtual Ethernet Adapter
          switchInterfaceType:
            type: string
            description: Network switch interface type.
            example: Test Switch Interface Type
          index:
            type: integer
            description: Network switch interface index.
            format: int64
            example: 79
          speedInKbps:
            type: integer
            description: Network switch interface link speed in Kbps.
            format: int64
            example: 80
          mtuInBytes:
            type: integer
            description: Maximum transmission unit in bytes.
            format: int64
            example: 43
          macAddress:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
            description: Host Mac address.
            example: 7f:7d:a3:77:0b:82
          lastChangeTime:
            type: string
            description: Timestamp when the interface state was last changed or modified.
            format: date-time
            example: 2009-09-23T14:30:00-07:00
          switchManagementAddress:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          attachedHostUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: UUID of the host connected to the interface.
            example: 92375a2a-d0c3-4503-aabf-ee8f34638133
          attachedHostNicUuids:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of host NIC UUIDs connected to this interface.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 3cc93cd9-d6dc-4d32-8872-6810acb97f95
          switchUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: UUID of the switch.
            example: 64229bc6-4fa9-476c-be2e-57e894a8f4e5
        additionalProperties: false
    clustermgmt.v4.0.config.GetHostNicApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.HostNic
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.HostNic'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/host-nics/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.ListVirtualNicsByHostIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualNic'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics\
        \ Get operation"
    clustermgmt.v4.0.config.VirtualNic:
      description: Virtual NIC details.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          name:
            maxLength: 64
            type: string
            description: Virtual NIC name.
            example: Test Virtual Nic Name
          hostDescription:
            type: string
            description: Host description.
            example: Test Host Description
          macAddress:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
            description: Host Mac address.
            example: f4:a4:6c:be:ff:41
          ipv4Addresses:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of IPv4 addresses associated with the NIC entity for
              the network connection.
            items:
              $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          ipv6Addresses:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of IPv6 addresses associated with the NIC entity for
              the network connection.
            items:
              $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          interfaceStatus:
            type: string
            description: Operational status of the interface to the port associated
              with the NIC entity.
            example: "Up,Down"
          isDhcpEnabled:
            type: boolean
            description: Status of DHCP protocol.
            example: false
          linkSpeedInKbps:
            type: integer
            description: Link speed in Kbps.
            format: int64
            example: 55
          mtuInBytes:
            type: integer
            description: Maximum transmission unit in bytes.
            format: int64
            example: 71
          nodeUuid:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: UUID of the host.
            example: 70cb5e41-52df-4e75-83a3-8fd1a2f63ade
          vlanId:
            type: integer
            description: VLAN Id.
            format: int64
            example: 97
          hostNicsUuids:
            maxItems: 1024
            minItems: 0
            type: array
            description: List of host NIC UUID associated with the host virtual NIC.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: b8c5bca1-d78b-484c-bb39-c3d9f6b6ee96
        additionalProperties: false
    clustermgmt.v4.0.config.GetVirtualNicApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.VirtualNic
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.VirtualNic'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{hostExtId}/virtual-nics/{extId}\
        \ Get operation"
    clustermgmt.v4.0.operations.EnterHostMaintenanceSpec:
      description: Property of the host to be put into maintenance mode.
      allOf:
      - $ref: '#/components/schemas/clustermgmt.v4.0.operations.HostMaintenanceCommonSpec'
      - type: object
        properties:
          shouldRollbackOnFailure:
            type: boolean
            description: A boolean value to indicate if the current workflow must
              initiate rollback workflow in case of failure.
            default: true
          shouldShutdownNonMigratableUvms:
            type: boolean
            description: A boolean value to indicate if all non-migratable uvms must
              be shutdown.
            default: false
        additionalProperties: false
    clustermgmt.v4.0.operations.EnterHostMaintenanceApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/enter-host-maintenance\
        \ Post operation"
    clustermgmt.v4.0.operations.HostMaintenanceCommonSpec:
      type: object
      properties:
        vcenterInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterInfo'
        timeoutSeconds:
          minimum: 1
          type: integer
          description: Timeout for the workflow in seconds.
          format: int64
          example: 72
      additionalProperties: false
      description: Common properties for host maintenance mode entry/exit.
    clustermgmt.v4.0.operations.ExitHostMaintenanceApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/operations/clusters/{clusterExtId}/hosts/{extId}/$actions/exit-host-maintenance\
        \ Post operation"
    clustermgmt.v4.0.stats.ClusterStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.stats.ClusterStats
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.stats.ClusterStats'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{extId}\
        \ Get operation"
    clustermgmt.v4.0.stats.ClusterStats:
      description: Cluster entity statistic attributes.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          controllerAvgIoLatencyUsecs:
            type: array
            description: Controller Average IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgIoLatencyUsecsUpperBuf:
            type: array
            description: Upper Buf value of Controller Average IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgIoLatencyUsecsLowerBuf:
            type: array
            description: Lower Buf value of Controller Average IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgReadIoLatencyUsecs:
            type: array
            description: Controller Average Read IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgReadIoLatencyUsecsUpperBuf:
            type: array
            description: Upper Buf value of Controller Average Read IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgReadIoLatencyUsecsLowerBuf:
            type: array
            description: Lower Buf value of Controller Average Read IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgWriteIoLatencyUsecs:
            type: array
            description: Controller Average Write IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgWriteIoLatencyUsecsUpperBuf:
            type: array
            description: Upper Buf value of Controller Average Write IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgWriteIoLatencyUsecsLowerBuf:
            type: array
            description: Lower Buf value of Controller Average Write IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumIops:
            type: array
            description: Controller IOPS Number.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumIopsUpperBuf:
            type: array
            description: Upper Buf value of Controller IOPS Number.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumIopsLowerBuf:
            type: array
            description: Lower Buf value of Controller IOPS Number.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          hypervisorCpuUsagePpm:
            type: array
            description: Hypervisor CPU Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          hypervisorCpuUsagePpmUpperBuf:
            type: array
            description: Upper Buf value of Hypervisor CPU Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          hypervisorCpuUsagePpmLowerBuf:
            type: array
            description: Lower Buf value of Hypervisor CPU Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          aggregateHypervisorMemoryUsagePpm:
            type: array
            description: Aggregate Hypervisor Memory Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          aggregateHypervisorMemoryUsagePpmUpperBuf:
            type: array
            description: Upper Buf value of Aggregate Hypervisor Memory Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          aggregateHypervisorMemoryUsagePpmLowerBuf:
            type: array
            description: Lower Buf value of Aggregate Hypervisor Memory Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumReadIops:
            type: array
            description: Number of controller read IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumReadIopsUpperBuf:
            type: array
            description: Upper Buf value of Number of controller read IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumReadIopsLowerBuf:
            type: array
            description: Lower Buf value of Number of controller read IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumWriteIops:
            type: array
            description: Number of controller write IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumWriteIopsUpperBuf:
            type: array
            description: Upper Buf value of Number of controller write IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumWriteIopsLowerBuf:
            type: array
            description: Lower Buf value of Number of controller write IoPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          ioBandwidthKbps:
            type: array
            description: Controller IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          ioBandwidthKbpsUpperBuf:
            type: array
            description: Upper Buf value of Controller IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          ioBandwidthKbpsLowerBuf:
            type: array
            description: Lower Buf value of Controller IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerReadIoBandwidthKbps:
            type: array
            description: Controller Read IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerReadIoBandwidthKbpsUpperBuf:
            type: array
            description: Upper Buf value of Controller Read IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerReadIoBandwidthKbpsLowerBuf:
            type: array
            description: Lower Buf value of Controller Read IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerWriteIoBandwidthKbpsUpperBuf:
            type: array
            description: Upper Buf value of Controller Write IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerWriteIoBandwidthKbpsLowerBuf:
            type: array
            description: Lower Buf value of Controller Write IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerWriteIoBandwidthKbps:
            type: array
            description: Controller Write IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          storageUsageBytes:
            type: array
            description: Storage usage(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          storageCapacityBytes:
            type: array
            description: Storage capacity(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          freePhysicalStorageBytes:
            type: array
            description: Free physical space(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          logicalStorageUsageBytes:
            type: array
            description: Logical storage usage(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          overallMemoryUsageBytes:
            type: array
            description: Overall memory usage(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          healthCheckScore:
            type: array
            description: "NCC check score indicating the health of the entity. The\
              \ value to health mapping is as follows: Good: 100, Info: 98, Warning:\
              \ 74, Critical: 24, Error: 13, Unknown: -1."
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          recycleBinUsageBytes:
            type: array
            description: Recycle bin usage (bytes)
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          snapshotCapacityBytes:
            type: array
            description: Snapshot capacity (bytes)
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          overallSavingsBytes:
            type: array
            description: Overall savings (bytes)
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          overallSavingsRatio:
            type: array
            description: Overall saving ratio
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          cpuCapacityHz:
            type: array
            description: CPU capacity in Hz.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          cpuUsageHz:
            type: array
            description: CPU usage (Hz)
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          memoryCapacityBytes:
            type: array
            description: Size of memory(in bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          powerConsumptionInstantWatt:
            type: array
            description: Power instant consumption (watt)
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
        additionalProperties: false
        description: Cluster entity statistic attributes.
    clustermgmt.v4.0.stats.TimeValuePair:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp for given stat attribute(in ISO-8601 format).
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        value:
          type: integer
          description: Value of stat at given timestamp.
          format: int64
          example: 62
      additionalProperties: false
      description: Time - Value pair for time-series stat attributes.
    common.v1.0.stats.DownSamplingOperator:
      type: string
      description: |
        The operator to use while performing down-sampling on stats data. Allowed values are SUM, MIN, MAX, AVG, COUNT and LAST.
      enum:
      - SUM
      - MIN
      - MAX
      - AVG
      - COUNT
      - LAST
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        AVG: |
          Aggregation indicating mean or average of all values.
        MIN: |
          Aggregation containing lowest of all values.
        MAX: |
          Aggregation containing highest of all values.
        LAST: |
          Aggregation containing only the last recorded value.
        SUM: |
          Aggregation with sum of all values.
        COUNT: |
          Aggregation containing total count of values.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    common.v1.0.response.ApiResponseMetadata:
      type: object
      properties:
        flags:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of flags that may indicate the status of the response. For example, a flag with the name 'isPaginated' and value 'false', indicates that the response is not paginated.
          items:
            $ref: '#/components/schemas/common.v1.0.config.Flag'
        links:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of HATEOAS style links for the response that may also include pagination links for list operations.
          items:
            $ref: '#/components/schemas/common.v1.0.response.ApiLink'
        totalAvailableResults:
          type: integer
          description: |
            The total number of entities that are available on the server for this type.
          format: int32
          example: 74
        messages:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            Information, Warning or Error messages that might provide additional contextual information related to the operation.
          items:
            $ref: '#/components/schemas/common.v1.0.config.Message'
        extraInfo:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of entity-specific metadata
          items:
            $ref: '#/components/schemas/common.v1.0.config.KVPair'
      additionalProperties: false
      description: |
        The metadata associated with an API response. This value is always present and minimally contains the self-link for the API request that produced this response. It also contains pagination data for the paginated requests.
    common.v1.0.response.ExternalizableAbstractModel:
      description: |
        A model that represents an object instance that is accessible through an API endpoint.  Instances of this type get an extId field that contains the globally unique identifier for that instance.  Externally accessible instances are always tenant aware and, therefore, extend the TenantAwareModel
      allOf:
      - $ref: '#/components/schemas/common.v1.0.config.TenantAwareModel'
      - type: object
        properties:
          extId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: |
              A globally unique identifier of an instance that is suitable for external consumption.
            nullable: true
            readOnly: true
            example: acf0fa40-7920-4a1c-8555-445a56268e96
          links:
            maxItems: 20
            minItems: 0
            type: array
            description: |
              A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.response.ApiLink'
        additionalProperties: false
    common.v1.0.config.Flag:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            Name of the flag.
        value:
          type: boolean
          description: |
            Value of the flag.
          default: false
      additionalProperties: false
      description: |
        Many entities in the Nutanix APIs carry flags.  This object captures all the flags associated with that entity through this object.  The field that hosts this type of object must have an attribute called x-bounded-map-keys that tells which flags are actually present for that entity.
    common.v1.0.response.ApiLink:
      type: object
      properties:
        href:
          type: string
          description: |
            The URL at which the entity described by the link can be accessed.
        rel:
          type: string
          description: |
            A name that identifies the relationship of the link to the object that is returned by the URL.  The unique value of "self" identifies the URL for the object.
      additionalProperties: false
      description: |
        A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
    common.v1.0.config.Message:
      type: object
      properties:
        code:
          type: string
          description: |
            A code that uniquely identifies a message.
        message:
          type: string
          description: |
            The description of the message.
        locale:
          type: string
          description: |
            The locale for the message description.
          default: en_US
        severity:
          $ref: '#/components/schemas/common.v1.0.config.MessageSeverity'
      additionalProperties: false
    common.v1.0.config.KVPair:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            The key of the key-value pair.
        value:
          description: The value associated with the key for this key-value pair
          oneOf:
          - type: string
            description: |
              A string value in a key-value pair.
          - type: integer
            description: |
              An integer value in a key-value pair.
            example: 66
          - type: boolean
            description: |
              An boolean value in a key-value pair.
            example: false
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of strings.
            items:
              type: string
          - type: object
            additionalProperties:
              type: string
            description: |
              A value in a key-value pair that represents a map of string keys and values.
          - maxItems: 20
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents an array of maps of string keys and values.
            items:
              $ref: '#/components/schemas/common.v1.0.config.MapOfStringWrapper'
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of integers.
            items:
              type: integer
              example: 56
      additionalProperties: false
      description: |
        A map describing a set of keys and their corresponding values.
    common.v1.0.config.MessageSeverity:
      type: string
      description: |
        The message severity.
      enum:
      - INFO
      - WARNING
      - ERROR
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        ERROR: |
          Error indicating failed completion.
        INFO: |
          Information about successful completion.
        $UNKNOWN: |
          Unknown value.
        WARNING: |
          Warning indicating future error.
        $REDACTED: |
          Redacted value.
    common.v1.0.config.MapOfStringWrapper:
      type: object
      properties:
        map:
          type: object
          additionalProperties:
            type: string
          description: |
            A map with string keys and values.
      additionalProperties: false
      description: |
        A wrapper schema containing a map with string keys and values.
    common.v1.0.config.TenantAwareModel:
      type: object
      properties:
        tenantId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
          readOnly: true
          example: 9d4ffa56-91af-4dfb-99b2-ab3df07628fa
      additionalProperties: false
      description: |
        A model base class whose instances are bound to a specific tenant.  This model adds a tenantId to the base model class that it extends and is automatically set by the server.
    clustermgmt.v4.0.stats.HostStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.stats.HostStats
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.stats.HostStats'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/clusters/{clusterExtId}/hosts/{extId}\
        \ Get operation"
    clustermgmt.v4.0.stats.HostStats:
      description: Host entity statistic attributes.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          controllerAvgIoLatencyUsecs:
            type: array
            description: Controller Average IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgIoLatencyUsecsUpperBuf:
            type: array
            description: Upper Buf value of Controller Average IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgIoLatencyUsecsLowerBuf:
            type: array
            description: Lower Buf value of Controller Average IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgReadIoLatencyUsecs:
            type: array
            description: Controller Average Read IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgReadIoLatencyUsecsUpperBuf:
            type: array
            description: Upper Buf value of Controller Average Read IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgReadIoLatencyUsecsLowerBuf:
            type: array
            description: Lower Buf value of Controller Average Read IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgWriteIoLatencyUsecs:
            type: array
            description: Controller Average Write IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgWriteIoLatencyUsecsUpperBuf:
            type: array
            description: Upper Buf value of Controller Average Write IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerAvgWriteIoLatencyUsecsLowerBuf:
            type: array
            description: Lower Buf value of Controller Average Write IO Latency(usecs).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumIops:
            type: array
            description: Controller IOPS Number.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumIopsUpperBuf:
            type: array
            description: Upper Buf value of Controller IOPS Number.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumIopsLowerBuf:
            type: array
            description: Lower Buf value of Controller IOPS Number.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          hypervisorCpuUsagePpm:
            type: array
            description: Hypervisor CPU Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          hypervisorCpuUsagePpmUpperBuf:
            type: array
            description: Upper Buf value of Hypervisor CPU Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          hypervisorCpuUsagePpmLowerBuf:
            type: array
            description: Lower Buf value of Hypervisor CPU Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          aggregateHypervisorMemoryUsagePpm:
            type: array
            description: Aggregate Hypervisor Memory Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          aggregateHypervisorMemoryUsagePpmUpperBuf:
            type: array
            description: Upper Buf value of Aggregate Hypervisor Memory Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          aggregateHypervisorMemoryUsagePpmLowerBuf:
            type: array
            description: Lower Buf value of Aggregate Hypervisor Memory Usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumReadIops:
            type: array
            description: Number of controller read IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumReadIopsUpperBuf:
            type: array
            description: Upper Buf value of Number of controller read IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumReadIopsLowerBuf:
            type: array
            description: Lower Buf value of Number of controller read IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumWriteIops:
            type: array
            description: Number of controller write IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumWriteIopsUpperBuf:
            type: array
            description: Upper Buf value of Number of controller write IOPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerNumWriteIopsLowerBuf:
            type: array
            description: Lower Buf value of Number of controller write IoPS.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          ioBandwidthKbps:
            type: array
            description: Controller IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          ioBandwidthKbpsUpperBuf:
            type: array
            description: Upper Buf value of Controller IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          ioBandwidthKbpsLowerBuf:
            type: array
            description: Lower Buf value of Controller IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerReadIoBandwidthKbps:
            type: array
            description: Controller Read IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerReadIoBandwidthKbpsUpperBuf:
            type: array
            description: Upper Buf value of Controller Read IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerReadIoBandwidthKbpsLowerBuf:
            type: array
            description: Lower Buf value of Controller Read IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerWriteIoBandwidthKbpsUpperBuf:
            type: array
            description: Upper Buf value of Controller Write IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerWriteIoBandwidthKbpsLowerBuf:
            type: array
            description: Lower Buf value of Controller Write IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          controllerWriteIoBandwidthKbps:
            type: array
            description: Controller Write IO Bandwidth(kBps).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          storageUsageBytes:
            type: array
            description: Storage usage(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          storageCapacityBytes:
            type: array
            description: Storage capacity(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          freePhysicalStorageBytes:
            type: array
            description: Free physical space(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          memoryCapacityBytes:
            type: array
            description: Size of memory(in bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          cpuCapacityHz:
            type: array
            description: CPU capacity in Hz.
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          overallMemoryUsagePpm:
            type: array
            description: Overall memory usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          overallMemoryUsagePpmUpperBuf:
            type: array
            description: Upper Buf value of overall memory usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          overallMemoryUsagePpmLowerBuf:
            type: array
            description: Lower Buf value of overall memory usage(ppm).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          healthCheckScore:
            type: array
            description: "NCC check score indicating the health of the entity. The\
              \ value to health mapping is as follows: Good: 100, Info: 98, Warning:\
              \ 74, Critical: 24, Error: 13, Unknown: -1."
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          logicalStorageUsageBytes:
            type: array
            description: Logical storage usage(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          cpuUsageHz:
            type: array
            description: CPU usage (Hz)
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          overallMemoryUsageBytes:
            type: array
            description: Overall memory usage(bytes).
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
          powerConsumptionInstantWatt:
            type: array
            description: Power instant consumption (watt)
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.stats.TimeValuePair'
        additionalProperties: false
        description: Host entity statistic attributes.
    common.v1.0.config.IPAddress:
      type: object
      properties:
        ipv4:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
        ipv6:
          $ref: '#/components/schemas/common.v1.0.config.IPv6Address'
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv4 or IPv6 format.
    common.v1.0.config.IPAddressOrFQDN:
      type: object
      properties:
        ipv4:
          $ref: '#/components/schemas/common.v1.0.config.IPv4Address'
        ipv6:
          $ref: '#/components/schemas/common.v1.0.config.IPv6Address'
        fqdn:
          $ref: '#/components/schemas/common.v1.0.config.FQDN'
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv4/IPv6 format or a Fully Qualified Domain Name.
    common.v1.0.config.IPv4Address:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
          type: string
          description: |
            The IPv4 address of the host.
          example: 39.47.28.212
        prefixLength:
          maximum: 32
          minimum: 0
          type: integer
          description: |
            The prefix length of the network to which this host IPv4 address belongs.
          format: int32
          default: 32
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv4 format.
    common.v1.0.config.IPv6Address:
      required:
      - value
      type: object
      properties:
        value:
          pattern: "^(?:(?:(?:[A-Fa-f0-9]{1,4}:){6}|(?=(?:[A-Fa-f0-9]{0,4}:){0,6}(?:[0-9]{1,3}\\\
            .){3}[0-9]{1,3}$)(([0-9a-fA-F]{1,4}:){0,5}|:)((:[0-9a-fA-F]{1,4}){1,5}:|:)|::(?:[A-Fa-f0-9]{1,4}:){5})(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\\
            .){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])|(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}|(?=(?:[A-Fa-f0-9]{0,4}:){0,7}[A-Fa-f0-9]{0,4}$)(([0-9a-fA-F]{1,4}:){1,7}|:)((:[0-9a-fA-F]{1,4}){1,7}|:)|(?:[A-Fa-f0-9]{1,4}:){7}:|:(:[A-Fa-f0-9]{1,4}){7})$"
          type: string
          description: |
            The IPv6 address of the host.
          example: 2cd8:0415:e91d:2cb3:386f:e395:8af4:dcb8
        prefixLength:
          maximum: 128
          minimum: 0
          type: integer
          description: |
            The prefix length of the network to which this host IPv6 address belongs.
          format: int32
          default: 128
      additionalProperties: false
      description: |
        An unique address that identifies a device on the internet or a local network in IPv6 format.
    common.v1.0.config.FQDN:
      type: object
      properties:
        value:
          pattern: "^([a-z0-9]+(-[a-z0-9]+)*\\.)+([a-z0-9]+(-[a-z0-9]+)*){1,63}$"
          type: string
          description: |
            The fully qualified domain name of the host.
          example: www.example-corp.com
      additionalProperties: false
      description: |
        A fully qualified domain name that specifies its exact location in the tree hierarchy of the Domain Name System.
    clustermgmt.v4.0.config.VcenterCredentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 256
          type: string
          description: Username for vCenter Server extension registration/unregistration.
          example: test_user
        password:
          type: string
          description: Password for vCenter Server extension registration/unregistration.
          example: test_password
        port:
          type: integer
          description: vCenter port to connect for registering/unregistering extension.
          default: 443
      additionalProperties: false
      description: Credentials for registering/unregistering vCenter Server extension
        for Nutanix to manage VMs of the cluster.
    clustermgmt.v4.0.config.ClusterConfig:
      type: object
      properties:
        shouldEnableLockdownMode:
          type: boolean
          description: A boolean value indicating whether to enable lockdown mode
            for a cluster.
          example: true
        buildInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.BuildInfo'
      additionalProperties: false
      description: Cluster Configuration required for a cluster to function properly.
    clustermgmt.v4.0.config.BuildInfo:
      type: object
      properties:
        version:
          type: string
          description: Software version.
      additionalProperties: false
      description: Currently representing the build information to be used for the
        cluster creation.
    clustermgmt.v4.0.config.AuthorizedPublicKey:
      type: object
      properties:
        name:
          maxLength: 1024
          type: string
          description: "Authorized public key's required for cluster users like admin,nutanix\
            \ etc."
        key:
          type: string
          description: "Authorized public key's required for cluster users like admin,nutanix\
            \ etc."
      additionalProperties: false
      description: "Authorized public key's required for cluster users like admin,nutanix\
        \ etc."
    clustermgmt.v4.0.config.ClusterNetwork:
      type: object
      properties:
        externalAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        nameServers:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          description: "List of name servers on a cluster. This is part of payload\
            \ for both cluster create & update operations. For create operation, only\
            \ ipv4 address / fqdn values are supported currently."
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
        ntpServers:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          description: "List of NTP servers on a cluster. This is part of payload\
            \ for both cluster create & update operations. For create operation, only\
            \ ipv4 address / fqdn values are supported currently."
          items:
            $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
        fqdn:
          pattern: "^([a-z0-9]+(-[a-z0-9]+)*\\.)+([a-z0-9]+(-[a-z0-9]+)*){1,63}$"
          type: string
          description: Cluster fully qualified domain name. This is part of payload
            for cluster update operation only.
          readOnly: true
          example: www.example-corp.com
      additionalProperties: false
      description: Network details of a cluster.
    clustermgmt.v4.0.config.NodeResourceConfig:
      type: object
      properties:
        numVcpus:
          type: integer
          description: Number of Vcpus for a given node in cluster.
          format: int32
          example: 48
        memorySizeBytes:
          type: integer
          description: Memory for a given node in cluster.
          format: int64
          example: 70
        dataDiskSizeBytes:
          type: integer
          description: Data disk size for a given node in cluster.
          format: int64
          example: 60
        containerExtId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: ExtId for the container on which Node storage has to be hosted
            on.
          example: 1fb019ef-a302-41f5-9d8e-4110550b8887
      additionalProperties: false
      description: Node resource configuration.
    clustermgmt.v4.0.config.NodeNetworkConfig:
      type: object
      properties:
        ipaddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
      additionalProperties: false
      description: Individual Node of the cluster network configuration like ip address
        etc.
    clustermgmt.v4.0.error.ErrorResponse:
      type: object
      properties:
        error:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.error.AppMessage'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.SchemaValidationError'
      additionalProperties: false
      description: An error response indicates that the operation has failed either
        due to a client error(4XX) or server error(5XX). Please look at the HTTP status
        code and namespace specific error code and error message for further details.
      x-platform-generated: true
    clustermgmt.v4.0.error.AppMessage:
      type: object
      properties:
        message:
          type: string
          description: The message string.
        severity:
          $ref: '#/components/schemas/common.v1.0.config.MessageSeverity'
        code:
          type: string
          description: "The code associated with this message.This string is typically\
            \ prefixed by the namespace the endpoint belongs to. For example: VMM-40000"
        locale:
          type: string
          description: Locale for this message. The default locale would be 'en-US'.
          default: en_US
        errorGroup:
          type: string
          description: The error group associated with this message of severity ERROR.
        argumentsMap:
          type: object
          additionalProperties:
            type: string
          description: The map of argument name to value.
      additionalProperties: false
      description: Message with associated severity describing status of the current
        operation.
      x-platform-generated: true
    clustermgmt.v4.0.error.MessageSeverity:
      type: string
      description: Enum schema MessageSeverity
      enum:
      - INFO
      - WARNING
      - ERROR
      - $UNKNOWN
      - $REDACTED
      x-platform-generated: true
      x-codegen-hint:
        $any:
        - type: entity-identifier
          properties:
            identifiers:
            - value: $UNKNOWN
              index: 201
            - value: $REDACTED
              index: 202
            - value: INFO
              index: 203
            - value: WARNING
              index: 204
            - value: ERROR
              index: 205
    clustermgmt.v4.0.error.SchemaValidationError:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp of the response.
          format: date-time
          example: 2009-09-23T14:30:00-07:00
        statusCode:
          type: integer
          description: The HTTP status code of the response.
          example: 22
        error:
          type: string
          description: The generic error message for the response.
        path:
          type: string
          description: API path on which the request was made.
        validationErrorMessages:
          type: array
          description: List of validation error messages
          items:
            $ref: '#/components/schemas/clustermgmt.v4.0.error.SchemaValidationErrorMessage'
      additionalProperties: false
      description: This schema is generated from SchemaValidationError.java
      x-platform-generated: true
    clustermgmt.v4.0.error.SchemaValidationErrorMessage:
      type: object
      properties:
        location:
          type: string
          description: "The part of the request that failed validation. Validation\
            \ can fail for path, query parameters, and request body."
        message:
          type: string
          description: The detailed message for the validation error.
        attributePath:
          type: string
          description: The path of the attribute that failed validation in the schema.
      additionalProperties: false
      description: This schema is generated from SchemaValidationErrorMessage.java
      x-platform-generated: true
    prism.v4.0.config.TaskReference:
      type: object
      properties:
        extId:
          pattern: "^[a-zA-Z0-9/+]*={0,2}:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          description: A globally unique identifier of a task.
          example: QmFzZTY0RW5jb2RlZA==:8637ae89-6d88-4345-bd2d-682dfad61b73
      additionalProperties: false
      description: A reference to a task tracking an asynchronous operation. The status
        of the task can be queried by making a GET request to the task URI provided
        in the metadata section of the API response.
    clustermgmt.v4.0.config.GetDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.Disk
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.Disk'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.DeleteDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/disks/{extId}\
        \ Delete operation"
    clustermgmt.v4.0.config.Disk:
      title: Disk model object.
      description: A model that represents the Disk resources.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          clusterName:
            maxLength: 256
            type: string
            description: Cluster name of the Disk it belongs to.
            readOnly: true
          clusterExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the cluster on which Disk will
              be added.
            readOnly: true
            example: 69621eb1-953b-4de4-ab38-12f6e54698d2
          status:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.DiskStatus'
          storageTier:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageTier'
          storagePoolExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of a storage pool.
            readOnly: true
            example: 7df8c47b-77ee-46a3-a5f0-d78c035b5fdf
          serviceVMId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}::[0-9]{1,}$"
            type: string
            description: The service VM ID of the node.
            readOnly: true
            example: ecafe717-9914-4337-84eb-724c79214963::341
          nodeExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the node.
            readOnly: true
            example: 4fa79217-b236-4b22-8145-ae4428f6efc6
          cvmIpAddress:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          nodeIpAddress:
            $ref: '#/components/schemas/common.v1.0.config.IPAddress'
          mountPath:
            pattern: "^/home/nutanix/data/stargate-storage/disks/[A-Z0-9]{8}$"
            type: string
            description: Represents the mount path of the Disk.
            readOnly: true
          location:
            type: integer
            description: Indicates the location of the Disk in a node.
            format: int64
            readOnly: true
            example: 81
          serialNumber:
            maxLength: 256
            type: string
            description: Represents the Disk serial number.
            readOnly: true
          diskSizeBytes:
            minimum: 524288
            type: integer
            description: Size of the Disk in bytes.
            format: int64
            readOnly: true
            example: 2284933324866931968
          physicalCapacityBytes:
            minimum: 524288
            type: integer
            description: Physical capacity of the Disk in bytes.
            format: int64
            readOnly: true
            example: 2082147717527645696
          model:
            maxLength: 256
            type: string
            description: Represents the Disk model.
            readOnly: true
          vendor:
            maxLength: 256
            type: string
            description: Represents the Disk vendor.
            readOnly: true
          nvmePciePath:
            type: string
            description: Indicates the PCIe path of NVMe devices.
            readOnly: true
          firmwareVersion:
            maxLength: 256
            type: string
            description: Represents the current firmware version.
            readOnly: true
          targetFirmwareVersion:
            maxLength: 256
            type: string
            description: Represents the target firmware version.
            readOnly: true
          hostName:
            maxLength: 256
            type: string
            description: Host name of the Disk to which it belongs.
            readOnly: true
          diskAdvanceConfig:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.DiskAdvanceConfig'
        additionalProperties: false
    clustermgmt.v4.0.config.DiskStatus:
      type: string
      description: Indicates the status of the Disk.
      enum:
      - NORMAL
      - MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE
      - DETACHABLE
      - DATA_MIGRATION_INITIATED
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE: Indicates that the Disk is marked for
          removal but is in a detachable state.
        DATA_MIGRATION_INITIATED: Indicates that the data migration has been initiated
          for the Disk.
        DETACHABLE: Indicates that the Disk is detachable.
        $UNKNOWN: |
          Unknown value.
        NORMAL: Indicates that the Disk is normal.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.StorageTier:
      type: string
      description: Represents the Disk storage tier.
      enum:
      - SSD_PCIE
      - SSD_SATA
      - DAS_SATA
      - CLOUD
      - SSD_MEM_NVME
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CLOUD: Represents the Disk cloud storage tier.
        SSD_SATA: Represents the Disk SSD_SATA storage tier.
        SSD_MEM_NVME: Represents the Disk SSD_MEM_NVME storage tier.
        SSD_PCIE: Represents the Disk SSD_PCIE storage tier.
        DAS_SATA: Represents the Disk DAS_SATA storage tier.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.DiskAdvanceConfig:
      title: Disk advance configuration object.
      type: object
      properties:
        isSelfEncryptingDrive:
          type: boolean
          description: Indicates whether the Disk has self-encryption enabled.
          example: false
        isSelfManagedNvme:
          type: boolean
          description: Indicates if the NVMe Disk is self-managed and does not require
            a host/CVM reboot.
          example: false
        isPasswordProtected:
          type: boolean
          description: Indicates whether the Disk is password protected.
          example: true
        isBootDisk:
          type: boolean
          description: Indicates if the Disk is a boot Disk.
          example: true
        hasBootPartitionsOnly:
          type: boolean
          description: Indicates if the Disk is for boot only and no Disk operations
            will be performed on it.
          example: false
        isSpdkManaged:
          type: boolean
          description: Indicates if NVMe device is managed by storage performance
            development kit(SPDK).
          example: false
        isOnline:
          type: boolean
          description: Indicates whether the Disk is online or offline.
          example: false
        isMarkedForRemoval:
          type: boolean
          description: Indicates if the Disk is marked for removal.
          example: false
        isDataMigrated:
          type: boolean
          description: Indicates if data migration is completed for the Disk.
          example: false
        isUnhealthy:
          type: boolean
          description: Indicates if the Disk is unhealthy.
          example: true
        isSuspectedUnhealthy:
          type: boolean
          description: Indicates if the Disk is suspected to be unhealthy.
          example: false
        isMounted:
          type: boolean
          description: Indicates if the Disk is mounted.
          example: false
        isUnderDiagnosis:
          type: boolean
          description: Indicates if the Disk is under diagnosis.
          example: false
        isDiagnosticInfoAvailable:
          type: boolean
          description: Indicates the Disk diagnostic information along with the device-related
            statistics are present.
          example: true
        isErrorFoundInLog:
          type: boolean
          description: Indicates whether or not the Disk error is seen in the kernel
            logs.
          example: true
        isPlannedOutage:
          type: boolean
          description: Indicates if diagnostics are running on the Disk.
          example: true
      additionalProperties: false
      description: A model that represents Disk advance configuration properties.
    clustermgmt.v4.0.config.ListDisksApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.Disk'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/disks
        Get operation
    clustermgmt.v4.0.config.DiskAdditionSpec:
      required:
      - serialNumber
      type: object
      properties:
        serialNumber:
          maxLength: 256
          type: string
          description: Represents the Disk serial number.
        diskPartitionInfo:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.DiskPartitionInfo'
      additionalProperties: false
      description: Request model to add a disk to a cluster.
    clustermgmt.v4.0.config.AddDiskApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{extId}/$actions/add-disk\
        \ Post operation"
    clustermgmt.v4.0.config.DiskPartitionInfo:
      type: object
      properties:
        partitionType:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.PartitionType'
        driveReplacementOption:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.DriveReplacementOption'
      additionalProperties: false
      description: Model for Disk partition information.
    clustermgmt.v4.0.config.PartitionType:
      type: string
      description: "Indicates Disk partition type. As of now, we only support 'EXT4'\
        \ and 'XFS'."
      enum:
      - EXT4
      - XFS
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        EXT4: '''EXT4'' is a Linux File System.'
        XFS: '''XFS'' is a Linux File System.'
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.DriveReplacementOption:
      type: string
      description: Indicates drive replacement option. Available options are 'RMA'
        and 'CAPACITY_UPGRADE'.
      enum:
      - RMA
      - CAPACITY_UPGRADE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        CAPACITY_UPGRADE: It is a Disk replacement option that repartitions the drive
          and increases the total usable storage capacity.
        RMA: It is a Disk replacement option which ensures that the total available
          capacity remains the same when a faulty Disk is replaced.
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.stats.GetDiskStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.stats.DiskStats
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.stats.DiskStats'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/disks/{extId}\
        \ Get operation"
    clustermgmt.v4.0.stats.DiskStats:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          diskUsagePpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Disk space used on a storage device, expressed in parts\
              \ per million (ppm)."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskCapacityBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Total storage capacity of a device in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskNumIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of I/O operations that a Disk performs per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakNumIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Upper limit of I/O operations that a Disk performs per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseNumIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Lower limit of I/O operations that a Disk can perform per
              second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: I/O bandwidth in KB per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Upper limit of data transfer that a Disk can handle per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Lower limit of data transfer that a Disk can handle per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskAvgIoLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: Average I/O latency.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakIoLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: Upper limit of the latency of I/O operations that the Disk
              can handle without exceeding its standard latency level.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseIoLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: Lower limit of the latency of I/O operations that the Disk
              can handle without exceeding its standard latency level.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskFreeBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Free storage space available on the Disk, measured in bytes."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskUsageBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Amount of storage currently being used, measured in bytes."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskReadIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of read I/O per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseReadIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Lower buffer capacity for the number of read IOPS that a
              Disk can handle.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakReadIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Upper buffer capacity for the number of read IOPS that a
              Disk can handle.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskWriteIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of write I/O per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakWriteIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Upper buffer capacity of a number of write I/O per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseWriteIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Lower buffer capacity of a number of write I/O per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskReadIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of Disk read I/O per second as reported by Stargate.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakReadIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Upper buffer capacity for the amount of I/O bandwidth that
              a Disk can handle read operations.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseReadIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Lower buffer capacity for the amount of I/O bandwidth that
              a Disk can handle read operations.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskWriteIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of Disk write I/O per second reported by Stargate.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakWriteIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Upper buffer capacity for the amount of I/O bandwidth that
              a Disk can handle write operations.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseWriteIoBandwidthkbps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Lower buffer capacity for the amount of I/O bandwidth that
              a Disk can handle write operations.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskReadIoAvgLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Average read I/O latency, measured in microseconds (μs)."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakReadIoAvgLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Upper buffer capacity average read I/O latency, measured\
              \ in microseconds (μs)."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseReadIoAvgLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Lower buffer capacity average read I/O latency, measured\
              \ in microseconds (μs)."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskWriteIoAvgLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Average write I/O latency, measured in microseconds (μs)."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskPeakWriteIoAvgLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Upper buffer capacity average write I/O latency, measured\
              \ in microseconds (μs)."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskBaseWriteIoAvgLatencyMicrosec:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Lower buffer capacity average write I/O latency, measured\
              \ in microseconds (μs)."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskReadIoPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Disk read I/O, expressed in parts per million."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          diskWriteIoPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Disk write I/O, expressed in parts per million."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
        additionalProperties: false
    common.v1.0.stats.TimeIntValuePair:
      type: object
      properties:
        value:
          type: integer
          description: Value of the stat at the recorded date and time in extended
            ISO-8601 format."
          format: int64
          example: 30
        timestamp:
          type: string
          description: "The date and time at which the stat was recorded.The value\
            \ should be in extended ISO-8601 format. For example, start time of 2022-04-23T01:23:45.678+09:00\
            \ would consider all stats starting at 1:23:45.678 on the 23rd of April\
            \ 2022. Details around ISO-8601 format can be found at https://www.iso.org/standard/70907.html"
          format: date-time
          example: 2009-09-23T14:30:00-07:00
      additionalProperties: false
      description: A time value pair representing a stat associated with a given entity
        at a given point of date and time represented in extended ISO-8601 format."
    clustermgmt.v4.0.config.GetBmcInfoResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.BmcInfo
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.BmcInfo'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
        \ Get operation"
    clustermgmt.v4.0.config.BmcInfo:
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/common.v1.0.config.IPAddress'
        credential:
          $ref: '#/components/schemas/common.v1.0.config.BasicAuth'
        status:
          $ref: '#/components/schemas/clustermgmt.v4.0.config.CredentialStatus'
      additionalProperties: false
      description: "BMC info, like IP, username, password etc."
    clustermgmt.v4.0.config.UpdateBmcInfoResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/hosts/{extId}/bmc-info\
        \ Put operation"
    clustermgmt.v4.0.config.CredentialStatus:
      type: string
      description: "BMC Creds status, Valid, Invalid or Missing"
      enum:
      - VALID
      - INVALID
      - UNAVAILABLE
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        VALID: BMC Creds is Valid
        UNAVAILABLE: BMC Creds is Not available
        INVALID: BMC Creds is Invalid
        $UNKNOWN: |
          Unknown value.
        $REDACTED: |
          Redacted value.
    common.v1.0.config.BasicAuth:
      required:
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 256
          minLength: 3
          type: string
          description: |
            Username required for the basic auth scheme. As per [RFC 2617](https://datatracker.ietf.org/doc/html/rfc2617) usernames might be case sensitive.
          example: test-user
        password:
          maxLength: 256
          minLength: 3
          type: string
          description: |
            Password required for the basic auth scheme.
          format: password
          example: '********'
      additionalProperties: false
      description: |
        An authentication scheme that requires the client to present a username and password. The server will service the request only if it can validate the user-ID and password for the protection space of the Request-URI.
    clustermgmt.v4.0.config.ListStorageContainersApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageContainer'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
        Get operation
    clustermgmt.v4.0.config.StorageContainer:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - required:
        - name
        type: object
        properties:
          containerExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the Storage Container.
            example: 869c2de1-700c-4eb9-b1d9-1fd3a4fc574c
          ownerExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the owner.
            example: 8f617a49-6e50-4fca-994f-9a9db8e48843
          name:
            maxLength: 75
            type: string
            description: Name of the Storage Container. Note that the name of Storage
              Container should be unique in every cluster.
          clusterExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the cluster owning the Storage
              Container.
            readOnly: true
            example: fdc3f546-12fc-4d72-9b95-50c05baabd6b
          storagePoolExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier  of the Storage Pool owning the Storage
              Container instance.
            readOnly: true
            example: a2850ee8-69b6-4d8f-bb99-d16252862cad
          isMarkedForRemoval:
            type: boolean
            description: Indicates whether the Storage Container is marked for removal.
              This field is set when the Storage Container is about to be destroyed.
            readOnly: true
            example: true
          markedForRemoval:
            type: boolean
            description: Indicates whether the Storage Container is marked for removal.
              This field is set when the Storage Container is about to be destroyed.
            readOnly: true
            example: false
            deprecated: true
          maxCapacityBytes:
            type: integer
            description: Maximum physical capacity of the Storage Container in bytes.
            format: int64
            readOnly: true
            example: 5
          logicalExplicitReservedCapacityBytes:
            type: integer
            description: Total reserved size (in bytes) of the Storage Container (set
              by Admin). This also includes the replication factor of the Storage
              Container. The actual reserved capacity of the Storage Container will
              be the maximum of explicitReservedCapacity and implicitReservedCapacity.
            format: int64
            example: 5
          logicalImplicitReservedCapacityBytes:
            type: integer
            description: This is the sum of the  of reservations provisioned on all
              vDisks in the Storage Container. The actual reserved capacity of the
              Storage Container will be the maximum of explicitReservedCapacity and
              implicitReservedCapacity.
            format: int64
            readOnly: true
            example: 83
          logicalAdvertisedCapacityBytes:
            type: integer
            description: Maximum capacity of the Storage Container as defined by the
              user.
            format: int64
            example: 81
          replicationFactor:
            type: integer
            description: Replication factor of the Storage Container.
            format: int32
            example: 25
          nfsWhitelistAddress:
            maxItems: 100
            minItems: 0
            type: array
            description: List of NFS addresses that need to be whitelisted.
            items:
              $ref: '#/components/schemas/common.v1.0.config.IPAddressOrFQDN'
          isNfsWhitelistInherited:
            type: boolean
            description: Indicates whether the NFS whitelist is inherited from the
              global configuration.
            readOnly: true
            example: true
          erasureCode:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.ErasureCodeStatus'
          isInlineEcEnabled:
            type: boolean
            description: Indicates whether data written to this Storage Container
              should be inline erasure-coded or not. This field is only considered
              if ErasureCoding is enabled.
            example: false
          hasHigherEcFaultDomainPreference:
            type: boolean
            description: Indicates whether to prefer a higher Erasure Code fault domain.
            example: true
          erasureCodeDelaySecs:
            type: integer
            description: Delay in performing Erasure Code for the current Storage
              Container instance.
            format: int32
            example: 30
          cacheDeduplication:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.CacheDeduplication'
          onDiskDedup:
            $ref: '#/components/schemas/clustermgmt.v4.0.config.OnDiskDedup'
          isCompressionEnabled:
            type: boolean
            description: Indicates whether the compression is enabled for the Storage
              Container.
            example: false
          compressionDelaySecs:
            type: integer
            description: The compression delay in seconds.
            format: int32
            example: 83
          isInternal:
            type: boolean
            description: Indicates whether the Storage Container is internal and is
              managed by Nutanix.
            example: true
          isSoftwareEncryptionEnabled:
            type: boolean
            description: Indicates whether the Storage Container instance has software
              encryption enabled.
            nullable: true
            example: true
          isEncrypted:
            type: boolean
            description: Indicates whether the Storage Container is encrypted or not.
            readOnly: true
            example: false
          affinityHostExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: Affinity host external identifier for RF-1 Storage Container.
            example: 808d4cdb-9db3-4bfa-a78d-f6996cd07aea
          clusterName:
            maxLength: 256
            type: string
            description: The corresponding name of the cluster owning the Storage
              Container instance.
            readOnly: true
        additionalProperties: false
    clustermgmt.v4.0.config.CreateStorageContainerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers
        Post operation
    clustermgmt.v4.0.config.ErasureCodeStatus:
      type: string
      description: Indicates the current status value of Erasure Coding for the Storage
        Container.
      enum:
      - NONE
      - "OFF"
      - "ON"
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NONE: Option to ignore this option while creating the Storage Container.
        $UNKNOWN: |
          Unknown value.
        "OFF": Erasure coding is disabled for the Storage Container instance.
        $REDACTED: |
          Redacted value.
        "ON": Erasure coding is enabled for the Storage Container instance.
    clustermgmt.v4.0.config.CacheDeduplication:
      type: string
      description: Indicates the current status of Cache Deduplication for the Storage
        Container.
      enum:
      - NONE
      - "OFF"
      - "ON"
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        NONE: Option to ignore this option while creating the Storage Container.
        $UNKNOWN: |
          Unknown value.
        "OFF": Cache deduplication is disabled for the Storage Container instance.
        $REDACTED: |
          Redacted value.
        "ON": Cache deduplication is enabled for the Storage Container instance.
    clustermgmt.v4.0.config.OnDiskDedup:
      type: string
      description: Indicates the current status of Disk deduplication for the Storage
        Container.
      enum:
      - NONE
      - "OFF"
      - POST_PROCESS
      - $UNKNOWN
      - $REDACTED
      x-enumDescriptions:
        POST_PROCESS: Deduplication is enabled for the Storage Container instance.
        NONE: Option to ignore this option while creating the Storage Container.
        $UNKNOWN: |
          Unknown value.
        "OFF": Deduplication is disabled for the Storage Container instance.
        $REDACTED: |
          Redacted value.
    clustermgmt.v4.0.config.GetStorageContainerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.StorageContainer
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.StorageContainer'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.UpdateStorageContainerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
        \ Put operation"
    clustermgmt.v4.0.config.DeleteStorageContainerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}\
        \ Delete operation"
    clustermgmt.v4.0.config.DataStoreMount:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: Mount Storage Container.
        required:
        - containerName
        type: object
        properties:
          datastoreName:
            maxLength: 255
            type: string
            description: Name of the datastore.
          containerName:
            maxLength: 75
            type: string
            description: Name of the Storage Container. Note that the name of Storage
              Container should be unique in every cluster.
          nodeExtIds:
            maxItems: 50
            minItems: 0
            type: array
            description: The UUIDs of the nodes where the NFS datastore has to be
              created.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 0899b063-b3ac-4e4d-b517-0e5db3e73283
          isReadOnly:
            type: boolean
            description: Indicates weather the host system has read-only access to
              the NFS share.
            example: true
          targetPath:
            type: string
            description: The target path on which to mount the NFS datastore.
        additionalProperties: false
        description: Create NFS datastores on the ESX hosts.
    clustermgmt.v4.0.config.MountStorageContainerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/mount\
        \ Post operation"
    clustermgmt.v4.0.config.DataStoreUnmount:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: Mount Storage Container.
        required:
        - datastoreName
        type: object
        properties:
          datastoreName:
            maxLength: 255
            type: string
            description: Name of the datastore.
          nodeExtIds:
            maxItems: 50
            minItems: 0
            type: array
            description: The UUIDs of the nodes where the NFS datastore has to be
              created.
            items:
              pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
              type: string
              example: 30238e18-5214-4dc9-a304-313d6320316d
        additionalProperties: false
        description: Create NFS datastores on the ESX hosts.
    clustermgmt.v4.0.config.UnmountStorageContainerApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/storage-containers/{extId}/$actions/unmount\
        \ Post operation"
    clustermgmt.v4.0.config.ListDataStoresByClusterIdApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - maxItems: 300
            minItems: 0
            type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.DataStore'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/clusters/{clusterExtId}/storage-containers/datastores\
        \ Get operation"
    clustermgmt.v4.0.config.DataStore:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - title: datastore entity.
        type: object
        properties:
          datastoreName:
            maxLength: 255
            type: string
            description: Name of the datastore.
          containerExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the Storage Container.
            example: b1aedbb5-947b-4dce-97b9-71cad9bc4fef
          containerName:
            maxLength: 75
            type: string
            description: Name of the Storage Container. Note that the name of Storage
              Container should be unique in every cluster.
          hostExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the host for the datastore.
            example: 57a15cf4-b7b3-4a26-8d5a-1acc17a9f435
          hostIpAddress:
            pattern: '#/components/schemas/common.v1.r0.config.IPAddressOrFQDN'
            type: string
            description: Host IP for datastore.
          capacityBytes:
            type: integer
            description: Maximum physical capacity of the Storage Container in bytes.
            format: int64
            example: 97
          freeSpaceBytes:
            type: integer
            description: The free space in the datastore.
            format: int64
            example: 1
          vmNames:
            maxItems: 5000
            minItems: 0
            type: array
            description: List of VM names in the datastore.
            items:
              type: string
        additionalProperties: false
        description: Entity describing all the attributes related to a datastore instance.
    clustermgmt.v4.0.stats.GetStorageContainerStatsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.stats.StorageContainerStats
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.stats.StorageContainerStats'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/stats/storage-containers/{extId}\
        \ Get operation"
    clustermgmt.v4.0.stats.StorageContainerStats:
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          controllerNumIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of I/O per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerIoBandwidthkBps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Total I/O bandwidth - kB per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerAvgIoLatencyuSecs:
            maxItems: 3000
            minItems: 0
            type: array
            description: Average I/O latency in micro secs.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerNumReadIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of read I/O per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerNumWriteIops:
            maxItems: 3000
            minItems: 0
            type: array
            description: Number of write I/O per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerReadIoBandwidthkBps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Read I/O bandwidth kB per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerWriteIoBandwidthkBps:
            maxItems: 3000
            minItems: 0
            type: array
            description: Write I/O bandwidth kB per second.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerAvgReadIoLatencyuSecs:
            maxItems: 3000
            minItems: 0
            type: array
            description: Average read I/O latency in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerAvgWriteIoLatencyuSecs:
            maxItems: 3000
            minItems: 0
            type: array
            description: Average read I/O latency in microseconds.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageReservedCapacityBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Implicit physical reserved capacity (aggregated at the vDisk
              level due to thick provisioning) in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageActualPhysicalUsageBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Actual physical disk usage of the Storage Container without
              considering for the reservation.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Saving ratio in PPM as a result of deduplication, compression\
              \ and erasure coding."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionTotalSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Saving ratio in PPM consisting of deduplication, compression,\
              \ erasure coding, cloning, and thin provisioning."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageFreeBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Free storage in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageCapacityBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Storage capacity in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Storage saving in bytes as a result of deduplication, compression,\
              \ erasure coding technique."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionOverallPreReductionBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Usage in bytes before reduction of deduplication, compression,\
              \ erasure coding, cloning, and thin provisioning."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionOverallPostReductionBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Usage in bytes after reduction of ceduplication, compression,\
              \ erasure coding, cloning, and thin provisioning."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionCompressionSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Saving ratio in PPM as a result of the compression technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionDedupSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Saving ratio in PPM as a result of the deduplication technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionErasureCodingSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Saving ratio in PPM as a result of the erasure coding technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionThinProvisionSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Saving ratio in PPM as a result of the thin provisioning
              technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionCloneSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Saving ratio in PPM as a result of the cloning technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionSnapshotSavingRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Saving ratio in PPM as a result of snapshot technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionZeroWriteSavingsBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Total amount of savings in bytes as a result of zero writes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerReadIoRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Ratio of read I/O to total I/O in PPM.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          controllerWriteIoRatioPpm:
            maxItems: 3000
            minItems: 0
            type: array
            description: Ratio of read I/O to total I/O in PPM.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageReplicationFactor:
            maxItems: 3000
            minItems: 0
            type: array
            description: Replication factor of Storage Container.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageUsageBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Used storage in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageTierDasSataUsageBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Total usage on HDD tier for the Storage Container in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageTierSsdUsageBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Total usage on SDD tier for the Storage Container in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageReservedUsageBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: The physical usage of the implicit reserved capacity(aggregated
              on vDisk level due to thick provisioning) in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageReservedFreeBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: The remaining unused space of the implicit reserved capacity(aggregated
              on vDisk level due to thick provisioning) in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageUnreservedUsageBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: The physical usage from unreserved vDisks(aggregated on thin
              provisioning vDisks) in bytes.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageOtherContainersReservedCapacity:
            maxItems: 3000
            minItems: 0
            type: array
            description: The total explicit reserved physical capacity of other Storage
              Containers in the same Storage Pool.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageOtherContainersUnreservedCapacity:
            maxItems: 3000
            minItems: 0
            type: array
            description: The physical usage outside of the explicitly reserved capacity
              of other Storage Containers in the same Storage Pool.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          storageSnapshotReclaimable:
            maxItems: 3000
            minItems: 0
            type: array
            description: The space that will be reclaimed if all the snapshots in
              the cluster is deleted. This is the physical snapshot usage with replication
              factor and data reduction savings taken into account.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionThinProvisionSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Storage saving in bytes as a result of thin Provisioning
              technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionSnapshotSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Storage saving in bytes as a result of the snapshot technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionCloneSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Storage saving in bytes as a result of the cloning technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionErasureCodingSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Storage saving in bytes as a result of erasure coding technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionDedupSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Storage saving in bytes as a result of deduplication technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionOverallSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: "Storage saving in bytes as a result of deduplication, compression,\
              \ erasure coding, cloning and thin provisioning technique."
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          dataReductionCompressionSavedBytes:
            maxItems: 3000
            minItems: 0
            type: array
            description: Storage saving in bytes as a result of compression technique.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          health:
            maxItems: 3000
            minItems: 0
            type: array
            description: Health of the Storage Container is represented by an integer
              value in the range 0-100. A higher value indicates better health.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.0.stats.TimeIntValuePair'
          containerExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The external identifier of the Storage Container.
            example: 721a7bc6-1777-4ddb-8eba-930b8e6bd965
        additionalProperties: false
    clustermgmt.v4.0.config.ListVcenterExtensionsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterExtension'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions
        Get operation
    clustermgmt.v4.0.config.VcenterExtension:
      description: vCenter Server extension information of the cluster. Nutanix Prism
        requires registering vCenter Server extension keys to be able to perform VM
        Management and other operations.
      allOf:
      - $ref: '#/components/schemas/common.v1.0.response.ExternalizableAbstractModel'
      - type: object
        properties:
          clusterExtId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: The globally unique identifier of cluster instance. It should
              be of type UUID.
            readOnly: true
            example: 351cfab5-2176-46f2-81c8-beb442ad15ff
          ipAddress:
            pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
            type: string
            description: IP Address of vCenter.
            readOnly: true
            example: 240.101.179.89
          isRegistered:
            type: boolean
            description: Indicates whether the vCenter Server extension is registered
              for the cluster.
            readOnly: true
            example: true
        additionalProperties: false
    clustermgmt.v4.0.config.GetVcenterExtensionApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: clustermgmt.v4.config.VcenterExtension
          oneOf:
          - $ref: '#/components/schemas/clustermgmt.v4.0.config.VcenterExtension'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}\
        \ Get operation"
    clustermgmt.v4.0.config.RegisterVcenterExtensionApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/register\
        \ Post operation"
    clustermgmt.v4.0.config.UnregisterVcenterExtensionApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.0.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.0.config.TaskReference'
          - $ref: '#/components/schemas/clustermgmt.v4.0.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /clustermgmt/v4.0/config/vcenter-extensions/{extId}/$actions/unregister\
        \ Post operation"
  securitySchemes:
    basicAuthScheme:
      type: http
      scheme: basic
    apiKeyAuthScheme:
      type: apiKey
      name: X-ntnx-api-key
      in: header
